(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    440028,       9402]
NotebookOptionsPosition[    402857,       8578]
NotebookOutlinePosition[    403441,       8597]
CellTagsIndexPosition[    403398,       8594]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Parsing and interpretation of integration commands", "Title",
 CellID->690784117,ExpressionUUID->"303b0810-dc4f-4d34-8590-19357c557405"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.791415212399044*^9, 3.791415216314067*^9}},
 CellID->946936669,ExpressionUUID->"27e882f8-f167-4ac3-899a-9be9fdeab2a7"],

Cell["\<\
This chapter exemplifies the use of Functional Parsers -- also known as \
Parser Combinators -- for the interpretation of a small Domain Specific \
Language (DSL) for symbolic and numeric integration commands.\
\>", "Text",
 CellChangeTimes->{{3.938000758434567*^9, 3.938000849096382*^9}},
 CellID->310894734,ExpressionUUID->"1979cbd3-1670-4831-ac52-3936ee4e569c"],

Cell["\<\
The functional parsers implementations are based on the article \
\[OpenCurlyDoubleQuote]Functional Parsers\[CloseCurlyDoubleQuote] by Jeroen \
Fokker, [JF1].\
\>", "Text",
 CellChangeTimes->{{3.600367035529278*^9, 3.6003670931196003`*^9}, {
  3.9380008554691343`*^9, 3.938000858984318*^9}},
 CellID->1885569095,ExpressionUUID->"77b89314-7d31-4432-a1c4-f4fbe8292666"],

Cell[TextData[{
 "The functional parsers presented form a monadic system. More explanations \
and references can be found in the Wikipedia article ",
 ButtonBox["Parser Combinator",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Parser_combinator"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Parser_combinator"],
 ", [Wk1]."
}], "Text",
 CellChangeTimes->{{3.600421178906065*^9, 3.600421194643648*^9}, {
  3.6004212556325083`*^9, 3.600421342928286*^9}, {3.938000970550857*^9, 
  3.938001005672654*^9}},
 CellID->343600886,ExpressionUUID->"8c4037f4-7b42-451a-a0e5-ddedd8f67520"],

Cell["\<\
It is assumed the readers of this chapter are at least somewhat familiar with \
the parsing problem, the Backus-Naur Form for grammar specifications, [Wk2], \
and the concept of definite integral in calculus.\
\>", "Text",
 CellChangeTimes->{{3.600421354926054*^9, 3.600421451450211*^9}, {
  3.600421540413007*^9, 3.6004215851357317`*^9}, {3.938001012612948*^9, 
  3.9380010650679493`*^9}},
 CellID->316564219,ExpressionUUID->"26971647-249f-4144-a608-9c64806fa129"],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.937998917713048*^9, 3.937998918763688*^9}},
 CellID->393363545,ExpressionUUID->"c9227951-793d-4c27-8f6c-bdf9c9561b49"],

Cell[CellGroupData[{

Cell[TextData[{
 "Here we load the paclet ",
 ButtonBox["\"FunctionalParsers\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/FunctionalParsers/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/FunctionalParsers/"],
 ", [AAp2]:"
}], "MathCaption",
 CellChangeTimes->{{3.937977616653634*^9, 3.937977632296638*^9}, {
  3.937977671801054*^9, 3.937977671801309*^9}, {3.937977975767284*^9, 
  3.9379779816761713`*^9}},
 CellID->902310202,ExpressionUUID->"87cb0f98-e33f-481a-9f7f-4101e3287d16"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AntonAntonov`FunctionalParsers`\>\"", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9379768427963257`*^9, 3.9379768527121763`*^9}},
 CellLabel->"In[425]:=",
 CellID->1745533547,ExpressionUUID->"b3f199a8-966f-4d80-9de2-441291936818"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sentences", "Section",
 CellChangeTimes->{{3.600204039365633*^9, 3.60020404712248*^9}},
 CellID->72155588,ExpressionUUID->"9aac1bc0-2187-4209-bbc7-b1e926df39bf"],

Cell["\<\
Suppose we want to make an interpreter of commands for single variable \
integrals calculation.\
\>", "Text",
 CellChangeTimes->{{3.600204051560506*^9, 3.600204110400344*^9}},
 CellID->1538190608,ExpressionUUID->"1a1646b7-4c53-48bd-8cd8-9d0d3be00a52"],

Cell["\<\
We can start by listing prototype sentences and then generalizing their form.\
\
\>", "Text",
 CellChangeTimes->{{3.60020411864028*^9, 3.6002042014964447`*^9}},
 CellID->961406070,ExpressionUUID->"27e28003-f47d-4a79-a21e-e250e1c9984e"],

Cell["Here are some prototypes:", "Text",
 CellChangeTimes->{{3.600204203560651*^9, 3.600204209833294*^9}},
 CellID->684858462,ExpressionUUID->"8bd26eec-8534-4047-85d8-820df588242d"],

Cell["Calculate the integral of sin x over 0 to 1.", "Text",
 CellChangeTimes->{{3.60020421312879*^9, 3.600204240864553*^9}},
 TextAlignment->Center,
 CellID->2051306561,ExpressionUUID->"4a216f8c-6794-4c96-a87d-635958c6f35e"],

Cell["\<\
What is the integral of x^2+Log[x] for x in the interval 0 and 10?\
\>", "Text",
 CellChangeTimes->{{3.600204245736751*^9, 3.6002042911768723`*^9}, 
   3.600204489805266*^9},
 TextAlignment->Center,
 CellID->606901789,ExpressionUUID->"b1f1836d-13a3-4b69-8c86-c98d09778f78"],

Cell["Integrate Sin[x^2+5]", "Text",
 CellChangeTimes->{{3.600204493417791*^9, 3.6002045179533863`*^9}},
 TextAlignment->Center,
 CellID->1798528120,ExpressionUUID->"7b06e4ad-3aae-4225-95cb-49d4c3b1c4e8"],

Cell["Integrate numerically 1/x+Sqrt[x] in the interval 4 and 10.", "Text",
 CellChangeTimes->{{3.6002045269582157`*^9, 3.60020458736193*^9}},
 TextAlignment->Center,
 CellID->2029781315,ExpressionUUID->"fc2d837e-b852-42fc-8605-d46bdffc6baa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["General command structure", "Section",
 CellChangeTimes->{{3.6002925506601686`*^9, 3.600292565430398*^9}},
 CellID->1756828610,ExpressionUUID->"36c2a5b7-8a41-4f6f-87b3-7767b0d9bedd"],

Cell["We can say the integration commands have four parts:", "Text",
 CellChangeTimes->{{3.600292568351328*^9, 3.6002926030734787`*^9}},
 CellID->1265785667,ExpressionUUID->"b4c24778-e72b-478a-9456-bc4b17f710c6"],

Cell["1. type of integration (numerical or symbolical),", "Text",
 CellChangeTimes->{{3.600292606156755*^9, 3.60029266640033*^9}},
 CellID->1086698087,ExpressionUUID->"573e87c5-a9d1-4d1c-b903-99104e5e2417"],

Cell["2. function to be integration (integrand),", "Text",
 CellChangeTimes->{{3.600292636902626*^9, 3.600292670281365*^9}, 
   3.6003885016386003`*^9},
 CellID->1933814121,ExpressionUUID->"c2d92700-dbb9-4668-8f8a-aecc4a953a3f"],

Cell["3. variable (optional can be implied),", "Text",
 CellChangeTimes->{{3.600292672678706*^9, 3.600292684602893*^9}, 
   3.600292726520863*^9},
 CellID->1596417949,ExpressionUUID->"92615290-3502-4ea6-a024-b8d3a2c1735b"],

Cell["4. range (optional).", "Text",
 CellChangeTimes->{{3.600292687539234*^9, 3.6002927240793743`*^9}},
 CellID->335783225,ExpressionUUID->"98998c84-dc6c-4939-8aeb-9fa4c32cdfb0"],

Cell[CellGroupData[{

Cell["Roughly speaking we have the following structure:", "Text",
 CellChangeTimes->{{3.600292747638212*^9, 3.6002927660649633`*^9}},
 CellID->2069121906,ExpressionUUID->"bd072605-bff1-45cd-89d6-c042806c20c3"],

Cell["\<\
<command preamble> <integral type> <integrand> <variable> <range>\
\>", "Program",
 CellChangeTimes->{{3.6002927695659037`*^9, 3.600292866382495*^9}, {
  3.60029314369028*^9, 3.6002931445302362`*^9}},
 CellID->1529178271,ExpressionUUID->"ccbe61e5-4794-495d-8f91-4a90bf23aeec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph of the command structure", "Section",
 CellChangeTimes->{{3.600298633357654*^9, 3.600298643330776*^9}},
 CellID->1962397048,ExpressionUUID->"7987a952-977c-4e08-9a02-2d6e24a0df6e"],

Cell[CellGroupData[{

Cell["\<\
This graph represents the grammar of the integration commands we consider:
1. Branching represents alternatives or composition
2. The words and phrases and in quotes are tokens
3. The abstract rules are in angular brackets (\[OpenCurlyDoubleQuote]<xxx>\
\[CloseCurlyDoubleQuote])
4. The dashed arrows mean \[OpenCurlyDoubleQuote]followed by\
\[CloseCurlyDoubleQuote]
5. Square brackets (\[OpenCurlyDoubleQuote][xxx]\[CloseCurlyDoubleQuote]) are \
for optional parts
6. Examples are given as \[OpenCurlyDoubleQuote]free\[CloseCurlyDoubleQuote] \
text\
\>", "Text",
 CellChangeTimes->{{3.6003388232774*^9, 3.600338962843123*^9}, {
   3.600339126177455*^9, 3.600339388178322*^9}, 3.600422260528144*^9, {
   3.9379989691185226`*^9, 3.937998996030034*^9}},
 CellID->953335110,ExpressionUUID->"a30d86ed-da80-43c7-8fe1-96e3c3c90e6d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qd8nOW55/3zed/dfc/unrN72p6cPWfPnlRCICEJkEAIBEghJIQkQIDQ
Y8AFg23ce69y7wX3IvfeLctNrnKXLfcmF9myZVldsoq5Xv1v8iijmVGzJT0q
v+/nc2MkzTzPPaPRMzP/uZ7r/sr7rV5u8v/81V/9Vdu/LvrPy406PtumTaPO
r/xd0Revtmz7UdOWjT/8Vct2jZs2bvP4+/9v0TdfKPpPxH/+q7/6T0X/bwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
Oi87N9emrF1jSbdSbOWunbYrPt7vKQEAAAAAAAAAasiaPXtsxOJFdjEpyVqP
H2dpmZl+TwkAAAAAAAAAUEMmrVplb/Tra9vi4uzZNm1s38mTfk8JAAAAAAAA
AFBDJqxcYY993Nyi9u+zB99vZOv37nXfLygstOnr19nP2rW1n7dv58a0devc
9w+ePm2fjhtnKenpxdu5c+eOjV+xwiKjo93XG/fvtxe6dHbXU/Y8csliu52X
53pb9J4102XRY5YttUaDI+z81au+3HYAAAAAAAAAQHhjly+zl3r0sMTkZPe1
/tXX+v7NtDT7ZccOxXmy3EhNtRe7drWd8fG2+9gxlwvvP3XK/UxZ8nsRg1xO
nJGdbX/o1ctdX/mwsumsnBxfbiMAAAAAAAAAINS1lBT7Rfv2Lu8NpPXsnuvQ
3v18QGSk61+s+mFR1vtan96un7FqjEctWVLiuqobVoZ8LjHR1RY3GzHC1RUD
AAAAAAAAAGqXPceP2687d7Lrt26V+L6+Vv8I1QkfOnPG1QJfun7d5cQdJk1y
fStUJ6zLfDh0qPWdPbt4dJ4y2R5p1tRiTxy333brait27vTp1gEAAAAAAAAA
yrLj6FFX86ueEoHUM0L5bsyROMvNy7N3Bw20Rdu2FvehOHHxot3KyHAZ8fBF
i2xdbGyJseXQIXfZl3v2cP2KAQAAAAAAAAC1j/pB/LRtG4u/cKHE948nJLjv
ny36uczdtMmaDB9mi7dts+ajRrr17DTeGTjAZkVFlbhuamamzdm40dUdkxED
AAAAAAAAQO2lnFc9hdtPmmh5+fnue/pX/ST0ff1criTfcHXFqiFeuj2m+PrK
glVLHNir4rPVq+31vn1cL2MyYgAAAAAAAACo3ZTvNhoc4foSKxtW5vuniIgS
ua/Xh1h9hpX9etSHosuUKfZkq5bWbuIEe2tAf3u2TRuLO3fW9SsmIwYAAAAA
AACAuuFiUpLtjI93/1ZW0q0U19v46PnzxbXHAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAA1S3+wgW31tqtjIywP8/OzXV9dXfFx9fwzGpGQWGB5Rfk16vx+eef
+323AgAAAAAAAKgjYk8cd2uuBa63FigrJ8de6dXT1sXG1vDMqk5mTqYdPnPY
Fm9dbBGREdZqVCtrPqy5fRjxYb0c3SZ3s5MXT/p9twMAAAAAAACoA+prRpx7
O9dlwl0nd/U9s/Vj9Jza0+9fAQAAAAAAAFBlCgsLbcuhQzZt3TrX+6D3rJm2
7+RJG7NsqTUaHGHnr161i0lJ9sGQIfaTT1vZT9u2sZ+1a2srd+1011c/hfaT
JtqM9evtpR493M+ebdPG1uzZU7wPbUPX1/ef79TR+s2ZbaOWLLE5Gze6n+fm
5dmwhQvdz3/evp39pmsX23zoYJnznrtpk01Zu8YGzp1rv+rUye1X+1cuK6Xd
lo3797vcVvvR/kYuWWy3i/bvzWPowgX2dOtP3faeatXKbUPb0ugxfbot3R5j
f4qIsF927OCur/th2Y7t9mrv3sW3b++JE257Xka8eNs2N7dftG/v7j/d1wVF
93twRlzW/bAzPt5dL7PoOn5Rn4U9x/ZY27Ftfc9p/Rx9Z/b17XcAAAAAAAAA
VBXlogu3bnX56vtDBtvB06ctIzvb/tCrl8s/lalG7d9naZmZ1mzECJfrKteU
PcePuwzzwrVrtvvYMbvvvXety5QpLkcV5cNPtmrpsuUbqaku65y6dq3duXPH
ZdKfrV7trqN8V98bPH++y129vr3KdZXR6t/S6DoPffihTVi5wm1T1u/da8+0
aW3HExLC3hblrcpf95865S6fkp5u70UMcjmx6P74XfduxXW/qUW3XRnugi1b
3PZ0O5QFX0m+Ubw/3Q5l5N5tV46r6yj/VUb8QKNG9taA/paYnOx+ruu+2LWr
TV+/rkRGXN79oDnpd6Db1z9yjiXdSqm6B0MFpKSn2OC5g+8qU206pKk1G9qs
Xgz1mriYdLFG73sAAAAAAACgKinzHb9ihctK202cYOcSE4t/phxU2a8yYa+2
Vtmn6nWVB3uupaTYcx3au9pWZcQ/aP6Rnbx0qfjnyoV/3bmTxRyJc/nq6337
FGeo3n5UU6uMWNmpcupDZ86UmOfwRYus0+TPXHYaTsT8eW4b2pZHl1VeOyAy
MuS26GdaP071y4GUvyqzVQarrDb6wIES22s7YYLLZLU91Qgr2/Uo71UWvung
X2qej5w75/arnykjvv9P79n2I0dK7FP7+X337u62exlxRe8HzWPSqlXu99d6
/Dg7c+VK2PunKmVkZ5TaV6JxRGPrPb23RUZFuhrjG6k3iu7v21Z4p7Da5wUA
AAAAAACg4tSjQNmp+igMmjfX5bjBlD/+tltXW7FzZ4nvK59Udjlu+XKXmSqb
/dfXXnXZpzLi4J67qr9VPa7y1r6zZ1v36dNKZL36f+WbyohVk/xIs6bWdepU
d1lvqJ725Z49XE2tapSVOWvo+1dv3nQ1ty3GjA7JkNWD4p2BA0Jui77WPD8c
OrTEfjpPmez2r54Zoqw2Mjra9ZV4o19f+9Irr7h+E8rW1S9CtcMeXVZ1yofP
ni3+nmqYVfurGmplxOot4dUQe9TzQjmy8mQvIy7vfvAye09efr4tiYkpvk9O
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
UD3OJpy1IeMirGPfdtau56cMRrWOASP72rbdW/1+2AO1ivoQ69z+4Kxt7e61
fk+tVkjKzrCYy2f9nkYJ+XcK7b11c6zZxgW+97+oKscTjpd4/Gkdu3BUc3zg
1AFrP659mVlxfR+q+1cWDgAAAAB12cIV8+2hZ75l/+0//hODUePj37/3Jes7
vJcVFNSfGjzgbq3YsSIkf2o1qpXdzqfHa0puls07ccDvaYSVW5Bvr66aZoNi
N/o9lSqhx1vwZxUpGSmlXj43L9cWbl4YtkdKQxr0CwcAAABQV737yZsl8ron
f/uwvfLh8/bHZi8yGNU2Xmv6gv3yj0/Z33/jvxU/9u5/4muWl1e/1n4CKiO/
IN9aj2kdkjvpvH+YDYyNsi7bV/k9jVJl5t22uBuJllNQP45jA+cMLPE4DO5J
HE5SSpKt27POhswbErYevj6PxhGN6QcDAAAAoE4KzIebdnzLDp6IsrTc0wxG
jY0L1/bagDEd7R/v/xtyYjR4yuBCcqfBjcus32wolL8+OGOAJaTX/vui0fpI
G3Ww7vfRCe5JPHPdzEpdX/2KD546aCt3rLQZa2fYsPnDrNuUbtZiZAtrNrSZ
tRnbxjpP6lwvRu/pve3Q6UPV9JsAAAAAgOozd+mc4nx46KTuvmeFjIY9onbO
t3+6/2/d4/EPH/ze7z8PoMapr2vfmX1DMuKJKyb6PbVaYfKRXdZ043y/p1Eh
17LS7Udzh9vMY7F+T+WeHD1/tMRjsevkrn5PCQAAAABQxR586j6Xx33U6W3f
80EGQ2P2stHuMfk/vvrX1BKjwTlz5UzY89f1/YZO+fmT80da7LUEv6dSYap3
fmT2YFty+rDfU7lrqgMO7i+sNRUBAAAAAPXDiTMnimuI405v8j0bZDA0UrJO
2H1P/F/3uOwzrKfffyZAjZq4fGJIPqy6YuWjDV1yTqa9u252nbsvTqZct+/O
GmQ7Es/5PZW7FlzbfvhM3c28AQAAAAAl9R3ey+Vwz778mO+5IIMRODoP+sQ9
Np968XG//0yAGqN+w8H1mhVdI6whSLud4/cU7lr8zWt2PCWpzuXbntkbZpd4
TK7YscLvKQEAAAAAqsin3b7I4d746EXfM0EGI3CMmd7XPTa/++wDfv+ZADVm
9a7VIfmw1vMqKCzwe2q+u5Gdad+ZOdAK7hT6PZV78vSCUXbw+mW/p1FpMXEx
JR6XoxeP9ntKAAAAAIAq8knnj1wO9/YnL/meCTIYgWPC7IHusfmdp+/3+88E
qBGqL9VaYMEZ8Yrt1GvKmEPbrO3WZX5P455tTDjp+k6cSEnyeyqVcjHpYonH
Zdtxbf2eEgAAAACgipARM2rrICNGQ3P+6vmwa9UlpyX7PTXf3fn8jj0WOcwO
37ji91SqxLIzcW4duwvpKX5PpcJUy95saLMSj820zDS/pwUAAAAAqAJkxIza
OsiI0dDM3Tg3JB+OiIzwe1q1wuZLp+35JRP8nkaVmnUs1h6fO8xu5mT5PZUK
6zezX4nHZ9zZOL+nBAAAAACoAmTEjNo6yIjRkKhG89PRn4ZkxDGHY/yeWq3w
wYa5Fnliv9/TqHILTx2yxDpUixu8bt3KHSv9nhIAAAAAoAqQETNq6yAjRkNy
+MzhkHxY5/Vn3872e2q1gtZ4u11P1+27lHHL/rh6hmXk5fo9lXLpM4vAx+iY
JWP8nhIAAAAAoAqQETNq6yAjRkMyYfmEkIx44vKJfk+rVlh+5ojLiOsrrVXY
MWaFvbJyquUU5Ps9nTIFr1vXblw7v6cEAAAAAKgC95oRX0+Pt/GzB1jH/h/Z
gtUTfc8V73Yk3jxkwyf3sE4DPrJte5f6Pp+6PBKS9tnAsZ2sy6BPbE/c6rve
DhkxGors3OyQtcDo9fqF/DuF9vDswXY8JcnvqVSrwjt3rHn0Qnt33Wx3m2ur
cOvWpWam+j0tAAAAAMA9uteM+EryIXvu9R8XbeP/tY+7vFuh60TvWmD/57v/
aP/+/f9lW/cu8SXHDJ7Dmcu77PEXHrK/+cp/dpm33zlrXR5Hz2yxB3/yVfv7
b/xXm7NszF1vh4wYDcW2w9tC8mH1Ji6op70VKmPt+WP2u+WT/Z5GjVA2rIxY
WbFqi2urAbMGlHis7juxz+8pAQBq2Ordu21XfLydunTJZm7YYHfu3KnU9aev
X2fjV6yo9PU8ul5qZqYVFob/XDU7N9c6TJrk5ljedjpN/sx6TJ9uy3fssNf6
9LZrKSl3NScAAOo6MuIv5kAdcdUNMmKgciIiI0Iy4rkb5/o9rVrhjTUzbPHp
w35Po8ao10SvXWstrxZ/PrBoy6ISj9XIqEi/pwQAqEGJycn26bhxdjMtzXrO
mGF7jh+v9DYGzp1r3aZNveuM+OrNm/Z8p452+OzZsD/PzctzuW/sibLnpoy5
6fDh9v6QwTZv8yZ79KNmdjGpfp+7BABAaao6I76VfdLlguo9MXflOBsysZv9
+q2n7b1Wr9juw6tt79G11rjdH+0fv/nf7R/v/xv7oM1rtnnPIruacthGTOlp
L777U7c9Xf/UxR1uHylZJ2zG4hH22/d+5i6/cM0k18dAmW7g/uatGm8R4zvb
+21eddfbdXiVm9Ov3vyJvfD2M9Z7RFs7fzU27BzWbJkdkhEnpR21sTP72UuN
fuHm9EnXd23fsfXuZ+qh4M1BPTZebfIrN79ZS0e5+Ya7r04kbLfOgz4uuj9+
Yr/7089s1LTedvVWXKX2NXvZaHvlg1+6sXTDFHcbG7X+g7uPx87oZzfS4yt9
ee3jwrW91ndUO/t9o5/bL157wpp2fNN2HlpZ4duqnP3tT37nbpd+jw889RUy
YqACUjNSQ/JhjYRrCX5PzXcX02/Zt2cOtNxa3qO3OsRcPmvD92/2exphBa+v
2HNaT7+nBACoQfEXLtizbdpYzJE4e71vHxu7fFmls97qzogrY2d8vEXMn2c3
UlOt3cQJLvsGAKAhquqMWJmhMtr//uX/5Gp0/8fX/j/3Mw3lkspxlc1631Nv
B2WKrbo3sr/96n+x//vwP9s3fvTv7vrKGy/dOOCyzX/59t8VX0f/r+upN0Tg
/r7yg39x+/vOM1+zQyc32kPPfN1t89tPf83+93f+3l2mSfs3LHL52JA59B/T
oUSvCW2308Dmbnv/+tA/2H1PfDGnx371HYs/t9Vln8pAv/Tg/7T/9cDfFm9L
c4jZtyzkflIvi5/+4XG3jW8+8X/t3777j27bXSNaWHLGsQrtS3m2/vX29R+P
fMldNvB+Wb1lVqUvr57Syo29+9Db//d/fr/Fn91S7m09dn6bPfrcA8Xf/7uv
/7W7LWTEQPk2HdgUkg93m9ytVvcaqClbL5+xkQe2+D0NX9zKzbZnFoy2MYe2
+T2VEFm5WSGPWX0PANAwHD1/3h58v5EtiYmx33brau0nTbRjCRes9fhxLmf1
LNy61ZoMH2Yp6enF35sVFWWjly51GXGrsWOt+/Rp9uvOneypVq3srQH97cK1
a+5yqgMeunCBPd36U/tZu7bu571nzXQ9JFS3/KtOneyfX3nZnmzV0gZEhp7P
ElhHrBx6/ubNbj8/b9/Ofti8udu/LnO7aOj6cefOutsTGR1d/XcgAAC1VHVl
xPr68V8/5Gphewxt5bLXh579hrtOcJ+H/cc2uFxS+ej6mEg7cHyDfevJL7sc
df32udas41sus/zZq49b3OlN9mbz336x/YCM2Ms8lblqG3NXjLV/uO+/2c9f
+5HLmSdFRrjc8snfPmznEveU249Y/RKULf/Tt/7W1UPr6+/+9D77n1//a5s8
b3Bxbqp96v9Vh/x/vvdPbp/ad/D9NH3RcJed/vD5b9vJhB02c8lId1nlwNp/
RfaljFZ1wcrZ9f9exrzj4Ap3fc199LQ+lb68Ml79bnR/6H7R/a8cOzhzLu22
as76f2XQa7fOcfXQ+pqMGCjf0HlDQ/K2ZTHL/J5WrZCel+v3FHx1NSvdHp87
zGYdi/V7KiF6Tu1Z4jGr2uJ7pQzh3UED3fv3McuWWmZOjk1Zu8aSbqXYyl07
i3tK5uXnW1pmZvH17rWnZTDlAyOXLK7QZcvrh1mdAnttXkm+YS/16GHrYmNd
VtNn1izbeviwvdCls/2yYwc7dOZMjc8PQMOiY7iOOZsPHXRf61itY/rX3n6r
+Pit49YfevVy2bFy2W++967LZb3Ld/zsM9f3QXSZ33XvZtdv3XJf61j7Sq+e
tmDLFvd1eXXEWUXPIbq8jou7jx1zl/V6SKhXxnMd2tuibVur7f4AAKAuqs46
4ndbvlzcJ0J5p+p7w2XEy6KmuQxTdalT5g9xdb7f+9k3XcY4dcEw139C21Ot
rXpLqEeC6oODM+LXm75gNzOPh8xRtbAftn39i9rjXz/k8uDyMmJl08qsNSf1
WlBPCPWrcPMY8FFxbqqsVZluWT14Nef2fZu66778/nNujrq8el+oN8aS9ZMr
tC9tX9dTz44vP/ov7j7Tfac+ET/5/SNu7sM+61HpywfOVX2Zdf8qD/7nB/5H
0eWnlntbB0/o4ralbWrb6uXx1R/8bzJioBwZ2RnWeHDjkIz4YtJFv6fmu4PX
L9uvlkzwexq+u5CeYo/MHmzLzsT5PZUS1IM48DGrHsX3Slmwarz2nzrlvl6z
Z4+NWLzIvadXbZqXC2udpFd793ZZg9zr+crBlEsoc66IqjzXubIC84+Eovvo
sY+b29xNm+yDIUNc3Z5y61sZGS5j0fngAFCddAzWsVifUen/VQ/8cs8e9tHI
ETZqyRJ3GdUa/6J9ezt/9arLiP/Yt6/Lhj2bDh6033Tt4v5fx7boAwdKbL/t
hAnWP3KO+7oyGfGKnTvtp23buOcZz7a4uHLXswMAoKGpzoz4T5++UqGM2KtD
9XoVeEN1r8ortX1tr8/Itu763vaCe014+9Nl1D9B11Wdrtf3QJepaEas/hbK
SL/+2L+5vhXa7isfPu+20bzzOyVyU2XQ5WXE6nGh66oGOrhfcWX3pcxXebJy
3FWbZ7pc9unfPxqSEVf08ppD1M75rreHekno/tIIlxGHu609h33q5vr8G0+5
jFm13vf/+D/IiIFybI/bHpIPd5zQkT4TRTpvX2UjGmifiWAnUpLc/VGb7D2+
t8Tjts+MPve8zeCMeNKqVfZGv77ufbz6Xu47edJ9v7oz4sqoLRmx6Nxt5Sm6
v3R+tu4PMmIANUnHIB2XMrKz3fkfyof1ed+fIiJcXwf1mdDnWAWFhe7Y3XnK
5BLHbvUFVi2yR/W+OrdDPSP0fPClV15x/SZ0ncpkxKpFVk8M1S2rv4Xqh3V8
BAAAJdWGjFhr0KnPgvpLHDmzucT2tZad1njT9noNa+2+p1pjZZhlZcTTFg53
ubN6G+vyGvq6ohmxV9v8tR/+q+uFobXdtJ6c9qPeyZXNiL1+Ga81/bWbY0LS
PlsRPd31bZi/ekKl9lXVGfHhU9Hud6P7p12fJi4vVq+LimbEqofWXL2+Htqe
7ncyYqBsoxaNCsmIF2xa4Pe0fJdXWODWqtOadfiLBScP2u6rF/yehpOelR7y
2L2ZdvOethmcEU9YucLVxkbt3+f6Xq6N3ePWRdKa8//62qsuG9A5zeX1tJSN
+/e73EF9LJQ3q5eEelCGE1hHPHtjlKtl7jVzhqttC9x2af0wVff84dChbj8a
Om/60vXr7mfqh6m8Y/3eve4c7OGLFtmn48aV6NWp7EP71+W0LeUpP/m0lauB
U09O5S4SmH+cS0x0tXvqA6oaO60nJWTEAGqSjuPKYnUc12d3M9avdzmv6olP
Xrrkjodev99wn+/tCsiIdd2vvv2Wvdm/nztm67ip46VXp1yZjFiUS+tYqLxZ
x/Ivv/lG8c8AAMAX/MyI1dN2S+xiW7dtjltTTv0JlGcqw9Q2tMbdtr1L7Z0W
LxXX4KoPQ+teH3xRE1xKRqxM1ruMfqbvqS+vMsvgjNibQ3BGrNxY+bF+vnnP
Irt4fX/xmnODxnWuVEasEVhrq9xb2asyWPUBVkZemX1VdUbs5eFa409r5Ok6
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
lanqecerf1UvJK1HqLpxZcHlPWeW17Nf+1fvJe85VM9vymX1PFjROmLdroc+
/NA9p3rrwV5JvuH6S01fv859NvyHXr1clqt8WP2dLt+4Uea8tJatnku9263X
Drq8at21PWW2el2i/Yg+F77vvXet/aSJxa9VlOPqOnru1hz1+a/WwNVnw8Fz
FO+1iG63XjuU9nvRnPT70+9Rv2P9rgHgXtT2jFhD/Xq1bp36T6h+WD0kOvRr
5tZ283tujOobZMSor6asnhKSEU9bM83vafnuQnqKPTRzkOXfaXi1PXdrUOxG
e2HpRMvMu+3L/vW5RttxbUs8llftXHVX26poRrw2do+ru/FqgMt7T6osOPic
zs9Wr7bX+/Yp0ZvSU5mMOLgfptZi0vtZ1Sh7lA3rfbhy5NIyYr03VO9N3S5v
fTzVzqm2yHv/KMq6dZ611rMjIwYAlEXPScpc9Rw0adWqEufOKKf86ttvuXpb
0XON1glUf6NAek7U85b3HB38fKI89P4/vVehjLisnv3ajnoxqb+TV+OtfFXz
03NkZTLib3/wvvs3kJ4rtWai8mDV4mpNWG+9wvLWEtB1ow8cKP6Z5qLaa2Wy
uk/1OsDLdkXzfbJVS7d+gUfrN2q/+pnmpvtMn/eGm6Nyae+1SHm/F+++1jz0
O9bvWr9zb21IAKisupARMxrmICNGfaRMrcXIFiEZ8eEzh/2emu+G7d9s3Xas
Lv+CKPb5559b+23L7dVV0yy3IL/8K1SDtbvXlngsNxvazK7evFr+FYNUNCNW
3ZLeZ+l9kM61LO89qc7R7DJlinu/pvdbqtvRdePOhe9DWZmMOFw/zOU7dtgP
mzd356m2GDPaHvu4uasf8mqBwmXEXh9i9Uj2zp/Ve+OWY8e42iDNR5l2r5kz
3HZ1nuvJS5fIiAEAIdRLQ3Wnek5dEhNT4twWj3JKnZfifQ655/hx9xykvhGB
/fS1HdUKHzh9ytXeerWyHj0n67PRimTE5fXs13OV6m/1vKfvK0P15h6cEes5
Us/tuo0amqfOtdHt0muEwM9XRf0k9H19XqvPZHV+j6e8eYm2Fxkd7fpKvNGv
r33plVdcvwnlufp8Vxm3R5fVfRXY71o9MFT7q54Wwfd98BzPJiYWvxYp7/fi
5dwe3V/6nXv3iR4LAFAZZMSM2jrIiFEfxZ+PD8mHdX5+vk/5Xm2hrPMnC0bZ
/iRey1ZWYdH7pmYbF9if1s/xpQY7OzfbWowo+blH35l9K907paIZ8d3S9tWH
UnW91b2Ovd676hxQvbcL1/O4ovSeWO+/Ne/g9+UVQUYM4G7l5mXZhavxdj7x
KOPP49Sl/XbkbIwlXD1ml5JO2uXrp+1G6uWiY3663fn8Tvl3ag3RuSz6rFIZ
Zml9e4PXTVMeq6xXPY+Ce+rreVkZseplg7enzFN5Z2kZsZ6/9NxekZ79oj4O
8zdvdn2XlBd7tbfBGbFqjfU8621D59fouVe3S/ls8Dy1fW1Lt0XZqvr7S0Xm
NWP9eldz/Wb/fjZyyWL3fc1F11NGHLg9Ufar+yrws+jgjLisOeozYC8jLu/3
EvyZs2i7+t3rMRB4XhMAVAQZMaO2DjJi1Eez1s8KyYgnLp/o97R8dzMny55Z
MLpWvceqS/IKC+zddbNt9bl4X/a/6+iukMf1jHUzrLASmXV1Z8QNERkxgLuR
X3DbFkQPtjnr+zIqOCLX97OlW0fZ+j3TbWfccjt7+ZBl5aT59jvU55MTV610
5820GjvW5Y6BgjNi9SZQhhnco0Cfq6rm1ssvg8/B0Weh3238ocuIda6M1qcL
zC1V06q6YCmrZ7+e+/VvYD9d5a/qvaAeCpXpNaH+yOrtEDxP5baq0Q3OdMua
lzJu9XrQ7Qj8me5Tr474bjLisuao+8DLiMv7vQTe1/oda176net3fy+fUQNo
uLyM+K2Pf+d7JshgBI5xswaQEaNe0eu41mNah2Rpe0/sLf/K9ZzqiAvD1EKg
4nQfqo542Zk49/81ve9xS8eFPLaHLxju6owr4mZamjt/U++F9B4wXG0MKk65
sN7/670iuTuAylC26XfmWl/Giphxtu/EBkvLTC7/jq8Gyj3VA0nroSkHVQ6p
59fgjFg9Cz4YMsTlnl4/YPXn1bqvY5cvc99Tn1v1S/LOxVEvJ/VE+trbb7mM
eN7mTS7TzfxzX19dX+vC/bhlC/d1WT371ddfvaC83g7e9vU9rSugObeZMN6G
LFhQ5u3V7frKW2+6vsZe5qvbpt5P6hMRLtMta16q41VvCvUs9hxLuGA/aP5R
qdurSEasuuTS5qjb6mXE5f1edFn9TvW71e9Yv+twvUUAoKK6D+ricrgX3/2p
75kggxE4Bozp6B6bj//6Ub//TIAqcfry6ZAMTb1bc2/n+j01372+erpdzkj1
exp1nnL255dMcGvZ1bSM7Iywn4Go//bcjXPt/NXzle4/AQDwx8WkE7Yjbplt
P7yU8eexYc90W7l9gm3eP8+2HlhQ9O9cW7Nzsi3aPKxCeXH0vki7cuNMjX+O
K8oSd8bHux61a/bsCcmI5Vxiov2maxfXX1c98lU3rB74ykFF/X7/2LevOz+l
/aSJLjtVT2Bln8qI9Vmv1n7TOUGqJ357wADrN2e2y409ZfXsV06sPFlrxWn7
ylnVcyL1z/tftmO7fa9JY5ePltVDQ30clGXrdmg7Xm/eG6mprrY2ONMtb14L
tmyxh5s2tU9Gj7YPhw51eez4FSvcGrLqi3E3GbE3N903wXOUwLURyvq96Hep
6+l3y2frAKrC2o2rXQ73T9/6W7ucfND3XJDB8MZP//C4e2y+1+Itv/9MgCqx
aMuikPxs9OLRfk/Ld+fTbtp3Zw2ijriKpORm2dMLRtm4QzHlX7iKXb5x2TqM
7xDyOA8eTQY3cZ+PMGrH0O9s04FNNf54AYD6orCwwDKyU+zazQt27Pwui943
x+ZGDQibFa/dNcW3rLg8yhnVs0D1s5euXw/7c2WWWotOeaZ6BT/Xob3LiEW1
rqqzDezHH1zXWlbPftUoq4ZX2y8tBy5LYPatng3ajvr6V0RZ81Lvpt3Hjrnb
WVgFaxp4eW5F51je7wUAqtK/fPsfXBY3fHJP33NBBkNj1+FV7jGpceXqZb//
RIAq0W1yt5CsLCau5nO82kZZZseYFeVfEBWWmJlmj0UOs9nH99X4vtOz0q3/
rP7l5sSM2jUaD25syWn+nAsNAPWRcuPE5LO29eDCsFnxut1T3bqAd3xYb7aq
BGfEfgtXHw0AqJwOfdq6LO5LD/6dxexf7ns+yGjY48K1vfbocw+6x+Sjz33P
7z8PoEpcv3U9bC6Tlunfeia1xQtLJ9q2y2f8nka9o/rsh2cPtovpNf8+KS8/
z+ZHz7eWI1v6nn0yKj5S0itfswUAKF9m9i3bd3x92NrixZtH2KFTmy0pJaFS
a73WBqqDbTJ8mFsLrjZQDbL6U6Skp/s9FQCos3Jzc+0rj/6by+T+93f+wRav
m2ypOad8zwoZDW/sPbrWfvDLb7vH4v/82n+1w8cOlf8ABuqAqH1RIXlMv5n9
/J6W71Tv+uCMAW6tNVS9nIJ8S7udY0eTr/qy//yi/e87uc/1VGkxooXvGSgj
/FC/ibW719bK854BoD7Jzs2wvcfX2dwN/cPWFs+LGmib9kXa4TNb7czlg5Z4
44ylZt6wvPzcEsfoG6mX7ezlQwzGXY9Dpze7zybOJx51n0/kF+T5+JcBoLbJ
zMwszok1HnrmG9Z7RFubFBlhUxcMYzCqbUyZP8SGTOxmz73+ZPHjT/nwgbj9
5T9wgTpi6LyhIbnMqp2r/J6W786lJtv0+D1+T6Neu5CeYt+ZOdB2X73g91Tc
+9u8ovcgyo4ZtWewzg0A1Kyc25l25Mw2V0NckfXuNCLX97PIUrJlBqMqxuod
Ey02fo2lZdJ7CsAXOfGv3/yF/c1X/ktxVsdg1PR4+OffsUNHD/r95wBUmezb
2W6NruCM+GLSRb+n5rsTKUnULtaA7VfOupw47kbtOBcUAACY6y1xMemE7Ylf
bcu3jfU9I2QwvLH98BKyYgBOdna261H82PMP2wNPfsPuf+JrdWI88NTX7Scv
f9eeefV7Ycf3f35/8WWfeunb9uL7j4SM37z/sH3nmaq5zf/wzf9lf3/fP4WM
+3701bve5teLrvsfj4cfX3bbrcC2f/w1+9azX7dv/fwbZY77f/L1Gvm9fato
Po/8/CF7s9mrlnApwe+HP1Dl9h7fG5IPtx/fvsFno9ezM+z+6f2sgD4TNWLt
+WP2vVkRdvrWDb+nAgAAwsjMSbUDJ6NtYfQQ3zNCBkO9Ty5dP+n3nwUAVNqd
z+/Yxr2zSz2+6XMwL48pKMy12AvDbc/5wSHj7I3VVTanJ174jf3HI4+GjITL
l+96mzoftMvoQfZcszfDjvU7t1ZoOwWFBTZtzbRyexQui1nW4HMs4F5NXjU5
5G9r9obZfk/Ld7OOxVrz6IV+T6NBWXjqkP1o7nC/pwEAAIKoH+zeY+vCvpeN
ip3p1rw7femAXbl+xg6c2GgxcUtt19GVDEalx864ZbZ+9zRbtX2ibTkw31bE
jCszKz6ZEOv3nwcAVEr8uZ2lHtOWbR3t+vx7rqXtD5sP7zk/xHLzq27991++
/sewGfHREyfuabup6Wn2StsmYTPiV9s3s6yc7AptR9mv+qGWlxNrbXpyYuDu
6BzClqNahvxdHTl3xO+p+e711dNt9bl4v6fR4GidwFu52W4AAAD/3c7PsbW7
ppR4D7sgerAdPBltmdlV9/4UKI3ykgtX4231jklhM5Wryef8niIAVMjNtESL
3NCv1Iz4xq1LxZdV1nn48pSwGfGZ6yurdF5/+ODDsBnxzn377nnbq2OiS60l
nrCwcvWJu+N3W9MhTcvMiedFzyMnBu7CqUunQv6emg9r7taJasiUT35zWj/L
zmcNZT8sPn3YfrpwDDkxAAA+C5cPbzkwz3JuZ/g9NTRAes9/6uI+t0Zi4GNy
yZaRJeruAKA2Uu+F0j7r0tB6sYHScy6WUkM82DJy774HRDiNWn0aNiNev2XL
PW+7sOh2f9S/c9iM+Pnmb1vC1crdlhMJJ6zFiBZl5sRzN84lJwYqadGWRSF/
S2OXjPV7Wr5Tz4MPN8z1exoNlo7lvXevs98sm2RZ+bf9ng4AAA1SuHxY5/Xz
ngt+u3LjdEi2svPICr+nBQBlOnFhT6n58IY9M1yf4kCnr68Imw/HXZ5a5c/F
rbp1D5sRL1xZNfXK8WdPllpL3HHkgErfnsTkROswoUOZOXFkVCSvWYBK6Da5
W8jfUUxcjN/T8l1SdoZdyUz1exoNmo7l7bYts9dWTbPcBl7XDgBATbtzp9D1
hA18/6p+w0BtoV4nwRnLtZvn/Z4WAISVnZth8zdGhM2H1b8pKyetxOXzC7Ms
9vzQsBnxtfSqfz7uNigibEY8dW7V1c4Nmjq21Jx4x6G9ld5eamZq2EwrcMyJ
mkNODFTA9VvXw/4NpWWmlX/leiynIN9GHazY+pqoXjonpenG+S4rDhZ7LcFS
crN8mBUAAPXfkbMx5MOo1QrvFNiq7RNKPE63H17i97QAIKwdcUtLrSE+d+Vw
yOWvpO4Omw/vvTDCCu5U/bm2g8eOC5sRj/zssyrbR3Jqir3YslHYjPidLi3t
dl7le32mZ6Vb9yndy8yJZ2+YHVKjDaCkqH1RIX87/Wb283tavtt86bS9tGKK
39PAn+UVFtjR5KuWkZdb4rjeJGqeLTkd+lwKAADuza30JIvc0L/4vevRc9v9
nhIQVlLKhRI5y9wNA+hLDKDWuXbzQqn5sHpMBNe5fl70vvfgpYlhM+Jzyeur
ZY4TZswMmxH3HT68Svczf/3KUmuJZ6++u8/5KpITz1o/i5wYKMPQeUND/m5W
7Vzl97R812vXWht5YIvf00CQ1luWWrcdq4ufPz87stM6xlTtWq4AADR0hXcK
bfXOv6yns273NN5TodbS68Jl28ZQ8w6g1tLz6srt48Pmw1p/81bG9ZDrpGaf
K3WtuqzbSdUyz8glS8JmxO1796nS/eTl59ufurcOmxGrxjgt8+7WxFVO3GNK
jzJz4pnrZvKaBggj+3a2NRncJORv5mLSRb+n5rtnF462g9erdo1Q3Lv0vFx7
bvE4G7wv2n19+MYV++nCMT7PCgCA+uXwma1/qcmMGlD0nuum31MCyhQX8Jj9
oiZvut9TAoBi8ed3llpDvP/EhrDXOXltSdh8+OiVWdU2z5UbNoTNiJu271Dl
+9pz5GCptcRTl8276+1mZGdYz6k9y8yJZ6wLXRsQaOj2Ht8b8rfSfnz7Bt/L
OzEzzR6cMcD1wUXtk5yTaU/NH2kT43ZYwZ1Cu29aX0u9neP3tAAAqBdS0q+5
mibvvevxC3v8nhJQrozslJDcJSMrxe9pAYBbh25e1MCw+fDizSMsvyC0r7DW
qiuthvhGxpFqm+uWnTvDZsRvftS8WvbXdUxE2Iz4t60aWfpd1hKLy4mnlZ0T
T187nZwYCDB51eSwfbwbuvUXjlvLzYv9ngYCqB9x/M1rxZ9fKMf/YeRQW3Xu
qL22arpFXzzl8wwBAKj79Dyr+suy+iMCtZUer4HZy7Hzu/2eEgDYtkOLSq0h
vnA1Pux1rqUfCJsP70sYZYV38qttrvvj4sJmxL95+51q2d/Zywml1hJPX77g
nratnLjXtF5l5sTT1kyzO9QGAq4fTstRLUP+Ro6cq77PpOoKvRdSJona41za
TfvR3OH2g8ih1mX7Ktt6+YydvnXd4pOv2uC90TYwNsrvKQIAqsnq3bttV3y8
nbp0yWZu2FBnX8tr3qmZmVZYWFihy19JvmEv9ehh62Jjrf2kidZn1qxqv+16
r1rcH3FDf3pMoE45mRBbInuJ3jvH7ynVCZU9NgGouMTks6Xmwxv3zi71c9j4
xMiwGfH55Op933v6/PmwGfHTv3+p2vbZa8KwsBnx71q9X/Q6JPOetp2Zk2m9
p/cuPyemnhgN3KlLp0L+NpoPb275BdX3mVRdoP4Sr62aRkZcC+n589St6zbm
0DZ7cdlndv/0ftYkap49ML2/qykGANQ/icnJ9um4cXYzLc16zphhe44f93tK
d+3qzZv2fKeOdvjs2QpdPiEpyR77uLnN3bTJPhgyxJoMH1atGU5BYb4t3Tqq
+L3rgZN8/oq6JT2rZL+JuRv6W0FBnt/TqvUqe2wCUDGqy1sRMzb8OnVFx6e0
zOSw17tdkF5qn4mM3OpdM+lSYmLYjPiJF35Tbfs8c/FCqbXEM1cuuuftVyQn
nrtxLudNoUFbtGVRyN/F2KVj/Z6W77QG2tMLRvk9DVSA+hLPP3nAfr10gv3b
pO52m1wfAOqd+AsX7Nk2bSzmSJy93rePjV2+rM7WEd9NDjN66VKLPnDAtsXF
2dCFC6r1tsed2Vb83nXRpmGWl59bbfsCqoPe3y/fNqZEDnPlxmm/p1XrkRED
1ePkxb2l1hAfPLWp1OslpsaGzYcPXhxf7Tnm1aSksBnxD5//VbXut/u4IWEz
4t9/+oFlZmfd8/azcrKsz4w+ZebEy7cvr4JbAtRN3SZ3C/mbiImL8Xtavht1
cKv12LnG72mgknIL8qn9BoB66Oj58/bg+41sSUyM/bZbV9dzwctJ9544YX/o
1ct+2raNPdOmtTUfNdLVHUtBYaFNX7/Oftaurf28fTs3pq1b574vqs2dtGqV
9Zg+3V7o0tmebNXS9XKIO3fWGg8bar/q1MmeaPGJu4xqd48nJLjLLtq21fV/
eK5De7ffwG3O2bjRJq9ZXWL+yrg7fvaZq3/WNv/5lZfdvgZERrqf5+bl2bCF
C10Orjn+pmsX23zooPvZucREN6cbqanWP3KO21Z1CV5P5/SlA9W2L6A6xR5b
WyKH2Xt8XbXuT8eHLYcOuWOBBB979Lc9bvlyu52XF/bntfXYdDEpyT4cOtTN
X6Pp8OF26fp197Od8fFu+5k5rBkNlCa/IM8Wbx4eNh/WOTtlneNw9MrMsBlx
ws3N1T7v60Wvo8JlxI/84rlq3e/phPOl1hLPXr2kSvahnLjvjL5l5sRR+ziH
Cg3P9VvXw/49pGWm+T01372ycqptYv0zAABqtUNnztjTrT+1TQe/yFOVvyg/
bjQ4wv2/6o2Vl3iZsf7V1/q+DJ4/3x5p1tSi9u9zX19LSXE5iGrp1PdYlL0o
e9a+Yk8ct4c+/ND1e0hJT3c/V7/gF7t2dXmPDJw717pNm1qi1ld9lJXzSHCt
ni6nefwpIsJuZXyxdve+kydddqR/a4pqkrYeXFj83nX1zkn05UOddfn6qRJZ
zLJtY6ql7k7HmYVbt7p89f0hg+3g6S/qlYOPPcpadWyZFRUV9ue18dik49Er
vXrahJUrXA6toZz7j337Fr1fzCx6L3nL+s2Z7eagz6+SbqVU+f0L1HVHz24v
tYb44rXS+2bl5t8qtc9E5u1r1T7vlNTUsBnxd3/6s2rfd7exg8NmxC+1/tCy
crKrZB9ZuVnWd2bZOfGOIzuqZF9AXbFuz7qQv4N+M/v5PS3fZebdtm9M7WvZ
+fQtAwCgtlLO0Xr8OJdRBLpw7ZoNmjfXTly8aL9o397VugVSJqIaO2UuEfPn
ud4Vefn5xdv8aOQI6zJlSnGOohpf1Skv27Hd5TDf/uB9928grSf3++7dXW5S
2RxG2ZDyJeU8gYYvWmSdJn9WYz01Atep00hKSaiR/QLVQbV76kMc+Ji+kVp1
/Tv1tz5+xQqX27abOMHV+3t0bAl37NFxQutt6m++LhybVu3aZa/16W1ZAXXC
qhl+tXfv4uxaMrKzXT2z7gsdk89cuXLX9ytQn9zOy7b5GyPC5sPrdk8r83Or
K7d2hc2HD136rEb65aZlZITNiL/99NPVvu8TF86WWkscuWZple1H/Ym7T+le
akbcOKKxHTjF+VRoOJQHB/8drN61uvwr1nMX029Ztx3cDwAA1GbKJVR3F5hV
BNK507/u3MnVugXS18pEdh875mr1AvtW6N+WY8e4/r8eZTTKSRZv2+byF50T
7tX+ec5fveq+fzYxsdI5jOapesGuU6da39mzi4fqil/u2aP43PTqlHM70xZu
Glr83nVPPP22UPdtO7SoRCaj/hP3Shmp+jDo/AV9FqUeMMFKO/aU9/PadmxS
Tq1+FYHHJY2nWrVytcXBNB/1A9Jt0/HLq3cGGqoDJzeWWkOclHKhzOvGXZ4a
NiO+lFIzfUEzs7LCZsTfevKpGtl/l9GDwmbEL7dpbNm5Vdff5lbGLes4oWOp
OXHTIU3t2IVjVbY/oLZKSU8J+zdw7Wb1n7dQ22Xl32YtS/hKr931vkOv+XHv
dO6j6myUwXjjB80/crU66t2neh0AdU9qZqarj1MP0HB2HD3qzrO+mVayh5bO
w1ZPY61/pxwmsFbXy2G8870lOIf5ZccOIceNhKQkl8OcvHQpbA6juSg3keAc
ZvuRIy5v0vZV8xc49p86VSN1xIFZmvoj5hfcrvZ9AtXt0vWTJTIZfQ5SeKfw
nrap1xQ67rw1oH+pvWBKO/aU9/PadGzSZdT/+L2IQSHHpfV797rthqP99541
037YvHmpx2agIcjOTbe5GwaEzYc37Yss+7p5N0rtM6Gf1YTc3NywGfF9P3qi
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
Guinc9736Zf79wlX2z0wQAU1NfSHzz8Tj8E9wr2GpKeJ5yOHD34TXhYszeHF
/+38/Og9W9sntSrge+F08W/P4KDwrHeiosRzUUv3ZkQE/ee7W+iCjw+NjI/T
qydP0vOHDwk/HFeQT0Ojo7TDyUnEN/tV7V04UjhVuOq1xqAPe39/4WJ/e/Ag
3YuLo9aenmWXg1jfOHOGbP18n8QVnpVF//PJLnrt1CnhefGavnC/s+g6P6u8
XDhhkF1RIbww3nMA5w3PDU+MWsN/OX6cHmSkP3nvj965I957rG9pHjG2Hd4j
bEtsU2w/FTR2lC/rhxMLfNZdB8VQVHb4SR1xz0ip0rjWy5Vbt6WO2H7hc2GN
RKQlSB3xBycOqA6NMSK7EwMpoGb5e32WCu6Z7XHeo+OJO/o6VIdmltyvzKOh
SfX3QxmGYRiGYRiGWR8HU0Npb3Kw6jCsiuyycB0Hl1kauuLfPW5ro33XXIWf
vBEeLnynhqWOGB5Uu85nYlGR8LxgqZ9t7+0V+a3Fjx8vWp9jYCB9dusm+SYl
0t/OnF7UXw7rhpfVOGK4XzhhTS4tnns7KlL4YA3IFYbPRe7sWmPQl5cF1/u9
j7aJvOXVLAf++qWjRxfVbcayP73uRn/64uiKjlgTN3KotYF/xnJL6uvoF/v2
ivVoQA5xUGqqWLa+WhN4D7FNsW2xjbGtTUVtS8Gyfjgq65aSHnXawMXkN12W
OuKxqW6lsa0XBzc3qSN21spXtya6+3uljhijs9cytyGzMudyYulKUarqMIyG
va+9jiPOLs9WHRbDMAzDMAzDMIxBiWqooJ/6OFptvxlVBCc763i4lq4qvc+v
aWkRebFwwMFpadIeT9qOGI7z89u3FjnOTK082KV+Fvm9P9yxXeS7nvHyejKw
zr+eOE4nPDzo2F33RcvDz3CZGkcMvxqWmbkoJjwHrtY1NJQOuLkJp/wvr79G
6aWla44BTvfI7dviNWLg9/CtyBlG3QhNbCst50pIyKLna4AHx+MrOWK8Vvz7
oYPDouXj/cZ64Yjx9//6+uv05tkzdC0sTGw/DSvVI8a2xTbWvEbtvzU08K5l
9enL+uHQ1Ks0MaW+zszkzKC8X13DJZr/h9r85vVy4coVqSN2vXtXdWhGY9up
g1JH/DAlTnVojJEIry8jj/Ic1WEYjYCkAB1H7JfopzoshmEYhmEYhmEYg9E1
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
TVVmf5/jO/KVQvPct7U0BdXa+rFlDemqQ7IaXrp/gVpGuBbTSonL9TFyxGUN
GarDYhiLgfuUPwq4TDFNlapD0TAy2Sr1w0WtHqpDU05RWbnUEf/mr++oDs0h
6BsakDpiTL2D/arDY/RIbq0V9SYYhlkbCfkJGjflFuq26m1g3L9hzYnPbnxm
8tqxcMR7blynCw8fir/n5ueFM97ncZNmZp/3rsHP/R4e4nHMZ+yHyelJSitO
o8tBl2njhY3KPa45p3P3z6l+uRmGMSP4/vrjh1dEvzFzAicdXl9m1n1Yiqqm
HI3Tyy1/ojokq+HNyLuU2FKjOgybYGZ2ivxiThs54sFR0+c2MIw1k97eQN/2
cxFjEayFrpECqSOu6eZe5FlP86WO+A8ffaw6NIfho+OfSh1xbJZ93Iu3F5B/
YS89mxlGBS3dLRo3tfPKziX7pL+I5MJkI8/1+e3PaXRi1KTxPspIp3//ZAO9
c+6s6EmH2sMfODuJusRww6hD/L6Tk1GNYsa+gC8urisWdU18YnxEjeLEgkS7
mDLLMmlimnvkMoy9gzqywwufZcgnRu208dlps+wHntge6k20dFVqnF5ywQPV
IVkNGDN+qzRTdRg2QVNnuZEffpRylcfuMA7JtsQgOp0TqzqMRRp6o6WOuG2Q
8/yTMjKkjvivW7eqDs1hcH/oLXXE571Wn2PHmA+cz5FHvBanxTDM89zcba7b
NG63vW/1PQHwHjTsL4bp1L1TNG6Bfu4t3d2UWV4ufjIMwzCMrTCwcI7ckRQs
6gVENpSb3FVdL063i7psfUPtGq/3JPOW6pCshrvlOVZZW9QaSSsKNnLEeRXR
qsNiGCX0TozR17zPUfPIgOpQBGXt3lJHPDDO4ySiEhOljnjDXq6HaymySwqk
jvhP+zbxfUYrA/0/ekycq8gwjgTG7ut7XeQEr4X5Z/OiVoWhJz5w84DIV2YY
hmEYRk5WRyO9/PAK/TXKx6S1ZZFD/NV7ZzXj7pyfJlDX+IjJ9mEJJqZGNF4v
MNFFdUhWw9jMtF3kipub+fk5Cog/b+SIO/vqVYfGMMoo7eug0Zkp1WHQs/+Z
p9xGF6kjnpodUh2ech5FRUkd8fZDh1SH5jCMT07QLze/LfXEje3sOqyJ10Jv
Un53q+owGMZmicqO0jhdj8dr7wswu3AN6vLAxcgTb3LZRGHpYTyGnmEYhmGW
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
29tFtqzNYEfHxuadWWjvx2vacX9ybkW5dD09vp5nCnPPM8/MAADL0dpVR94R
h5Xnq5a8hadeo6Z2ZAfP41R2PB1KDVddhkm0dNZKf24GhnpVlwZgU550ttLf
/M/SyPjMs83GxjUzrlc3MtZvwmotx5mrV6UZ8bEzZ1SXBlOk5mZJM+L3N32D
mX8KrYj0Jc3YqOoyAKxGT38PLXdarpcTt3a1qi5LCX5/3D03mX7t7UIfhFyh
iKpiiq8to78HnKMXJi6r7pGvhwYAALZrSDNANU1FYo4uttm3J7VZYnZAfesT
0oxgjfv5CK0spK/Cb6ouwyTSCkKn5cPRj2zjsQOYE+7T+yz0Ol14/HDG2/QO
1Uvz4aya8yas1LI4nz8vzYhPXrqkujSYYmh4iN5Yu1iaExeUl8y+AzAKzofR
RwxgWMd9jutlxGFpYapLUmp0fIyCy/LotcALYt7Ea4Hn6WeejmItOwAAAACV
SjpaxN8n1m5sfJRuRztPy4grGnJVlwZgkyq72+kn149SfV+X9PqmnixpRlzS
FGjiSi3H4RMnpBnxRU+sw2WO7E8elWbEHsG3VJdms7YlBNO9Cqx3DGBIMVkx
ehnxYU/MyGf8fhTnwosf3KB/dt9DThlRqksCAAAAG8ezQb8Ms/5e2trm4mn5
sG+kI42Mama/MwAYhVtmLC2L8JZeV9H6QJoR13UmmbhKy+Hg6CjNiD1vIXM0
R4HRodKMeO1RB9Wl2SyevXUmJ0F1GQBWpau3Sy8j5q29p111WWYlv62BMptr
VJdhEzp7OymrNIsepD6g6w+u04lbJ2jHxR2048IOcvZ1FussYnv+LSA+gIZH
hlV/ewEAwABGnzET1FrEZ9+elhEn5d5RXRaATeP3qPg8hsL2pmnX5dVfl2bE
nf1lCiq1DFv27ZdmxH7BwapLA4maxnppRsxbZ0/37DsAg7tekEY7EkNUlwFg
dRy9HPUy4siMSNUlgQ0Znfh7M+FxwrS5J9gMuyXnJ6v+VgMAgAHYxQVSVLX1
zj8c1gySd8SRaRlxQ1u56tIAbF7/yLB4n2pMZ13n8aejlFbpLM2Ih0exxuRM
1trvlGbEwWG2sS6ppeHzjL/YtUGaEUemJqouzyZF15TS56GYzQJgaBEZEXpZ
0p4rezD7G0yivKGc9l7dqzw/tfZtpfNKqm6qVv3tBgAAAziQGmbV51aW1mZO
y4cDYt1oXCeTAgB1XDNj6Wj69z1F/cNN0nw4s/oMXlM+w9ebNksz4vC4ONWl
wQxOeV+VZsSHLp1SXZpNKu1soZdsYI0GAFPjeRPLjy/Xy5RKaqy3PwXMA8+U
WO6k/3PHn3M/sU+UD0VnRlP2k2xKL06n9KJ0KqwqxDbPrae/R/W3GwAADMS7
OJM2xlnvOlBhqVenZcSZxTjHDcBctAz00k89HcUamuLz3lxpRlzcdFtxpebt
89VrpBlxQmqq6tJgBimPM6UZ8Tt2S0kzMqK6PJszODoi1q0DAMO7EHxBL6s7
f+e86pLAipXVl9Eql1WTP29r3NZQaGoodfdhlhMAAMCzpDVW0dt33FWXYRRt
XfXT8mHeOnqmzz8FAHU8CtLo/ZArok+4si1SmhHXdljv+Q6G8MGyZdKMOD07
W3VpMIOh4SF6c92X0pw4PT9HdXk2qVczhPMVAIyA+4b1+jmPL6eO3g4ltQwM
DdF2d3dKKSiY0+09wsPofEjIjOcg8uVdfX00NvbsNV5uREbSmTtBZncuI9dz
zNeHAhKs4+8sXpduw6kNkz9ruy7torbuNtVlAQAAWIT2wX76sccRq3xNlJQb
NC0fDk2+bJWPFcCS8Tzi1wMv0K2SbMpv8JJmxO39OC/1Wd5YtEiaEecWFqou
DZ5h33lXaUZ8wuuy6tJs0kf3rlF2S53qMgCsDv/tvfeK/lzYO4lq1o8e0mho
r4cHpRcXzen2jj4+tPva1Rmz3cb2dnrNfgc9Ln/2WifH/fzI/vIls8yI1546
RRfuWseanQHxAZM/YxtPb6SWzhbVJQEAAFgM/pvNLjZAb80oazAw1EveEYen
ZcQV9bmqSwMAidzWBvrTrVOUXuUqzYiHRrpUl2jWXvnwH9KMuHSW16ygVkRK
vDQj/mjbKqt7XrYEK6P8KLgsT3UZAFYpLjtOLyPedGYTjY6Nqi5rVsiILYdm
REN2p+wmf8YelTxSXRIAAIDF6dMM0+j4s8+PsjSPy+Kn5cP+sa4Tr7nN/29R
AFvVNdhECWVO0/LhR1Un0f8/i9+/+ZY0I66tr1ddGjxDT18vvbp6kTQnLihH
77ypHUoNt+p1fAFUGtIM0boT6/Ry4rTCNKMcq7KxkU4GBoh/+8XGknd0NIVn
ZNCSY450Oz5er4+YZ09wfvuXzZvp1R3baZnzcQpMTKRdV65Q/+CgyIjtzp6l
PR7X6I2d9vSSnR0tOnqEqpqaKK2oiF63t6f/+eEH9KLdBjrq7T1jTXyMzRfO
i7o4U355y2Z6f+9evX7m0bExMdvila1b6K/btortWliYuJzdjIqiy6H39fZb
UFVFOy5dEv/2ioqkEwH+tN/zOr3lsEuvVq3EvFx6Z7eDOAbXfjb4Dq1wc53M
iGuam+lrZ2f640Y7USPf7m5KsriuuKaGDtzwpPzKStpy4YK4Hz8mnrWhi2vk
Wrj2uJycWedwGEpSXtLkz9b2C9vNLo8HAACwBLuT7pNPcabqMgyGc2DOg6dm
xI+fxKkuDQCeobU3n37nvY88so/qZcSFjb6qSzN7v/zr36QZcUsbZvCZu62u
h6QZsXvATdWl2ZzrBWm0I9Hye+kAzJVPlI9eRux409Gg+89+8kTkm5zB+ifE
i8ucb92iv2/fRn/btk3MBC6rr6cP9++jsPR0kSHuu35d3Kf7u5yT98HZKu+D
L+Pc9/99uUTkxozXFOVMdqWbm/j8efqI/2PpV+Tk50vDGo24jHPrP2/eREXV
1eJzzms5N2747rmbP/LnfDmT9TTzXOU3d+0U/+Zaf7JsKQU9lNfKj+1PmzaK
nJjx3A3OfP9t4vFxRsxZ9KoTJ+jwTa/JXJpzcM6qOWfmPJuzdK6Zb5OQmyty
8+isrMl6Onp66L09e0RdfDzO3DmL5mxe+7iN5eiNo5M/W2FpYUY9FgAAgLU6
m5NIB1Kt53m0oiF3Wj7Mcyd4/gQAmK+q9mhySTkicuKk8u/7iavbY1WXZvZ+
/NIfpRlxz5TeHjA/d2LCpBnxl7s3on/exKJrSunzUE/VZQBYrcb2Rr2MmLfK
xsoF7ZN7VKMyM+mDfXvpH/v3U2xOtl7fKmeyv1ixXPQWM+4N1mbEnHty/plX
UaG3T74P989qM+JPDx0SeatWTHa26NP99jHNLSPmfXK22tn7/esRznq3uV8U
x2jq6BA5dvKUtfQ4a+WMm6+fS0Y8U618H+6N5kxY9/7NnR30wpo1IiPmnuor
D0L1+o75uHx8rosz4h9+sWgyf2cut2+JPmvt15zzYq6hb+LrrFXR0EBbL14Q
+TKv/9dthL9Nevp79NZE7B3A6z4AAID5CK8qoiVhXpOf83otMROvkywRv55+
kHJ5WkbM69cBgHkrbPCm1Aonet1/P+2MPTyZEbf1Yd212fzwhd9IM2Ld14lg
nprbW6UZMW+V9TWqy7MpTf09dCo7fvYbAsC8ufq56mXEx24em/f7YSHJyWI+
xDcuLjNmtNy/y/N2tbmobkaclJ8v8tP27m69+4SmpYl5DJxlci6788plvVw1
WSeXnZoRl9bW0meHD4n+Wr7NEe+b4r5T69DyiYmhxY5HRb8u36els1Pvev6c
95NaWDhrRvysWrln+OODByg4KUlv/5ztful0bHLWBN83p6yMzgUHi3kSnFv/
08cf0cO8PJER8/yJBp1zlHjWBX8POIPn+253dyf3e/ek34vWri465usjepmf
NZdjPnTnTDh5Oxl03wAAANaOe2U0360TUdbVSr/3dZu8jtds4fMtLVFrZ+20
fJi3ti7M5AQwZ/z6MKPqhMiEg/KP0f+7tofuFR4Tnw9q2lWXZ9ZGRkel+fAP
fv0C+lAtxJoju6QZsdf9QNWl2Zxm9J4BGFV+Zf60XuLUgtTn3g/nkdwTy3nj
rbi4GecYTF0rTjcj5tz1bQcHkV3qupeSIi7XZsTPymWnZsR8H+5l5v3zLAnt
5dp5xFMzYu7J5UyZ82o+5tS8mmc3cF7N8yFktfD9OFtmz6qVe4S5z5rzb12c
EXPGzhkx9/7yv3+8dCltPHeOrj54IHq0+fFpM2Lel26Oze9F81xivm19W6uY
jcE5+UwelZSIGck8j8KQzgWdw5wJAACAeeDMgPuGdz389j3ekfEx+sHl/TQ8
NkodQ/307x6HqXt4cJa9mKeHjwOn5cNhqVdVlwUAsxga6dSbQbwl+hCtjzxE
GVVuE7+zsObIs/ROvB6VZcT/8eJLqkuDObp5P0iaEa8+slN1aTbn194u1IKc
GMCoTgec1suIt5zdQkPDQ/PaV/l3cwx4jgPP7Z26ftqzMuLalhYxU0J33Ti+
Ha9Px/2y88mIZ8KzJt7ds1tktbq4r5bnTfA8Bj4m9+Xq4lnFfDk/Tn4sPF9Y
txaek8yPnT2r1rHvZg1rZxtr9Q4MiHkbnBFzDszzIKqbmyev58fHx58pI2ac
qfN8CV6nbt3p05OzjLX42JyXc37MOTXPvzDkOnb9g/202nX15M8TzzQBAACA
uevRDNFLfifJt/jbNQaOpUfR0OgIXcpLpnUx/oqrm5+BoR7yDj88LSOubMhT
XRoAzKK9r1gvI+aZE8nlTpRejdmgs2mdeP0my4j/65W/qi4N5qiqvnbGeRNN
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
/JE4fnhGhtgX18d45sQ3Li5if7zxvmpbvp357RcbK2ZW8H2WHHMUx+f5FZWN
jSb9ugIAACzEw8eB0/JhnjvB8ycAwDL0DTdK8+FH1aeka9QFl+XRK/5naGR8
TEG15slz4rWGLCPedfSo6tJgHuIepUgz4vc3fUOjY6Oqy7MJvD7DnbJc1WUA
2Czul8x5kkNnAs7Q9vPbafuF7eTs6yzmFmOzjW3/tf10wOMAXb53WcyTWOO6
5plZsW+0r9GfI5s7O+iI90368+ZNdPimF7V0dopZDm/stBfXZT95ImY9cE7M
OA8+cMOT/u3LJSIj5p/r435+9JWT02Sm/KikRGTB/DG1sFDcdteVK5Mzhzkf
ftFug8h4ZX3Ebv7+tPXiBfFvnnnMfcR8ThLnx6/Z7xD75WPxuoxcw9jYmNh4
VvGnhw5Rd18fOd+6RX/fvo3+tm0b3YiMpKqmJvJPiBf3/9rZWTwuAACwHPwc
cuVBqHhuupuSTCkFBXO+L7+3uO/6dbp47654DvrH/v2UUVws3ruMyc42YtUL
097dIF2nLq88UXVpAPAcmrozpRlxcZO/9PacG396f+J3Vm6SiSs1X+43bkgz
4kNubqpLg3noHxygN9YulubEWUX5qsuzCYdSw+l0tmHWFwIAgIXjtQ0THifQ
GreZs+KQhwuf5yBTVl9Pm86fE/237vfuUe/A9/MttBlxY3u7yHY5E+YsV4tf
n7+wZo3IZxva2kRvcU5Zmd7+Oee1v3xJ9CX/es3qyd5f1trVJfbPufN8M+J7
KSni8v7Bwcn7cS/0RwcOUGTmI3Ly86VfrFg+rW+Ys2TuceZ84IN9eykqM1Nc
BgAA5o2z3RMB/uL9RX7+4vcD54Jv996ePeK+FQ0NFJiYKM5R4eegX61eZbD1
Vw2N15EJT/OYlg8HxLrRCNazArAoZS13pRlxXefMGXBFdzu9fcfdhFWat1OX
L0szYudzmE1gqXadcZJmxGd8PVSXZhOyWmopuaFSdRkAADBFS2cL7bu2bzIX
Xum8Uu/fTe1NBjtWaW2t6PnljJZfJ3P2OpU2I66eeB3OOWxwkv7fr5yp8lwI
zojTiorEa22Hq1fpkJfX5MbH4Aw2ITeX3ty1U/Qna3VNvF5/d89uis7KmndG
zBnwy1s26x2Tt5fs7ERd3NvMM5N1s+2pHpeXi1kVr+7YTiHJyQv90gIAgBHx
+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
WtG3s/Eb29vpNfsd9Li8XHyeWlhIbzs4iNuZo9vx8XQ+JGTW26UXF4kMV5vL
y/DXhr9Gs+H8nHP2Zc7HyTc2RnzNa5qbRf787p7d4vsAAAAAAAAA8zc82iPN
h3kbHOlQXZ5RHUgNo20JwSY/bkJqqjQjXrRmjclrAfPH2ciXuzdKM+L3Nn5N
XT3mmSOZm46hfrFmJdiOYY2GPjt8SPSpcj78xdGjIlOsbWmhv23bRoXVVfPe
N/f4bnO/SM2dHSLnjH/8eNptpmbE3Ff7l82bRZ75yaGDdDb4jriNpWXEc2XI
jJhx1u/k50utXV3iPvz1QUYMAAAAAABgGM09OdJ8OKf2kurSjK5HM0S/uulM
iXXlJj1uRFy8NCNetnGTSesAy/EwO33GXuITXpdVl2cxhscwm8OWDGk0Yg4E
9+6eCgyk369fR/dSUsRsgv/x/nv0x412IqdlPDOCZ0e8vGWzyHE5g9Rmm8U1
NaIfOb+ykrZcuCDmHfgnxIsZFjyz4pCXl5hlMdXUjJjv/5NlS0UP8ju7HUTG
zHMnXre3p//54Qf0ot0GOurtLTJizlZ5Dgb3O2tr4vkWWtxD+42Li7icN+6x
5ex7Ku6Z5pp5n7o4v3W4epX6J+qOyswUNfB+eC7G50cOixkdzC82VsyDCM/I
oCXHHMWcB90+Yq7ja2dn8bXkOl/ZukX0bGuPwY+De6z5+8C5PN/mWlgYjX43
V0M3I+bvl+vt26KOv27bSm857KLYnG9neHDez1+b3Ipy8fXjmhgyYgAAAAAA
AMMoaQqQZsTV7TGqSzOJmJpS+o23q5hRbCp3IyKkGfHqHTtMVgNYlqdPn9JW
10Mz5sTltVWqS7QIfO5ARXe76jJAMc41Ocssqq4Wn/Ms2z9t2jg5U5jzyMM3
vURW2jswILJObX7Kl3O/L+e/s5maEc9E1kf8oyWLxfzdgaEhcRnnw5wha+cr
fLh/H124GyLOM+DtXHAwfXrokMiEp9bAWTDn0dqatZcd8b5JVU1N4muh7YPm
6zinXeHmKnJc51u36O/bt4l8lzNxnpehzXX5+lUnToiviTbz5fkZnO/yfvnr
9uOlS2nR0SPifqy+rVX0SHuEh4nPtfvi4x7386OvnJwm5xc/KikRtfHHmSAj
BgAAAAAAWLjx8RFKr3KTZsTdg1WqyzMZu7hA2vXQdHNd/e/dk2bEm/buNVkN
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
bG5ERj6zRp7zymtmpXy3ZtlCaHsdX92xnXLKyha8P2s0NjZGRRVPKCAqlE55
XxX572IHO3pt9aIZf66xTd9+5LKVfr/ta+V1mPPmF47zdQAAAAAAAFhVe7Q0
Hy5ouKm6NLN0pyyX/nTrFA2Njhhsn1+sXSvNiONTUgx2DLAtaXnZM2Yi79gt
pYbWZqPXwGtSvbHTXtk537zO1Y5Ll8R80tnw+f/2ly/NmBH3Dw7Sh/v3UVh6
ukFqw8xUfdzbXlVfS0ExYbTnnDO9txG5piG2/3N2J/15/cwzyrF9TnZOe1X/
+AMAAAAAACjHr8uzas5JM+Km7kzV5Zkl/pqtiPQll0cxBtvnP77+RpoRp2bi
ewDzd8bXY8Zc5Ot9W6i7b/bsdCFUZ8TPAxmx6XV0d9GDh7F05Mpp+mjbKuVZ
obVtr6xZRP/rggP9zQxqMeftwMUTqv8rAAAAAAAAKNczVDfjnAnNqHHzI0vW
OTRg0HkTby9eIs2Is/PzDXYMsD3DGg19s3/bjNnIesfdNDg0ZLTjzzUjrmxs
pJOBAZT95AltPHdObzYEZ7bnQ0LIOzqahiYej8vtW/SnTRvpla1bxLpfB254
ijkQvPG/H5WUiJkRS487UXRWll4fcVRmJr1uby/Ws/rz5k30+ZHDVN7QIK7j
jHjzhfOijtfsd9DLWzbT+3v3Unpxkbh+akZc09xM37i4iH3xxuuP1ba0iHqv
hYVRXE6OmJcwE1vNiHv7+0UuzLNgX8XcCKNuL236in54crvyOsx5W3FwB7V0
tKn+bwEAAAAAAKBcVVuUNB8ubPBWXZrZ41kTn96/TgMjmgXv6++ffCLNiIue
PDFApWDLKupq6I21i2fMSHjOq2bEcHNTdM2WEXMm/LWzs8hk/RPiqb27W8zo
Dc/4fq3M1q4uetvBgZILCuh2fLzIVVs6O8V1XX19Ire9FRdHvQMD9I/9+8X9
OR+OzHz0/7P33t9R3Vn67t9w1/3hu+70jNdMf6d7utt2j7vbOefQbhzb2G1M
dABEEDlnkUQQOQgQSghETgIJhAChnHPOOeecvK/eDy65JJVyVR1V6X3WOgup
6tQ5+xQlqeo5+7xbAuLj1f5RR05JifLKD2Nj1WPhcvdeuCA/OeyVjs5O5Yj/
OHOG2HueU24doA64ZOQa6zti+F18fezGdeWBsRy5dk2+sbOT2u6acFyzdu9S
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
u1DNW4zLypQf9+6Rj1atkpcXzFfrdHZ2qnwOrHvR/6F6nt5fsVzViecUsxp1
+EZGqu2hJtSGbAvMV8JzstnNVSJSU5XznbnLXrKLi0d03Mj51vURn7zlpbbT
pTfvHf+f+L9Mys1R2/1hzx5VAxZsK7+sTK2H1wDqxmvC1GSVew/4M1XTxLnn
WoBer0lXHeV0QkjPbbe7fx4MOeKfli7TsFJCxg+eqVFq7qNfXprWpUwY8PcN
cwknL58zqCf+59KflFMm5iWyNE/9PdGxwO+iOOn9XSGEEEIIIaaho6tVYvJP
aO5JdcsPt7eoZbjr/+v6ZtkeuE19jWyKoF+yJh6k24tbzPA883haYgtOSkld
VPd74zatXxpDUlpdJds8zsibSxbL1jPuUlZdLZFpaWrGIO4LSUqS30+fpvyt
LvcWfhjOFJ6xby8rvof/nWFv35NVAe8Jt4l/cf9GFxflPWsbHuc0Rqenq3mG
H65aqW7bff68cqzvLV8ubnfvqv3M2bdP1afzraHJycqzwouOtIaBcLh4UZYd
P6a+xuP/Nme23I2MUN/DO8Olosa0/Mfzh+CF8bzFZGQoL/vnH36Qnxz29uQ4
F1aUy6S1a8XZx1t9j+cS28DzC7Ae3C48cX1Tk/xz0yblzOGHsV88FyM5bvj1
LzdtFO+wMOXDsR7+D3X4RUcrf43HYr1jN64rv43lyLVr8o2dndonXgPYJ44N
rw39bRiT2uacAX+GEgrdLPJci7WQWVMhT7psl9y6x//317x9DDrieatWa1wp
IeODlY9uSEYN56VpQWNzk5y47CEf2Uwd1BWfvuap/t4R84BcCd3fEJBYWSIt
He0aVkQIIYQQMnHAbLWC6iBJK72q6ZJackX+cXmXhOddHPZj1vsflaV+h9XX
n1zZJQt9D5q97pTiCxJbcEq5dmQPJxWflfhCF5VFPFpXHJGzX3Ir70tLe43W
L49+ZBQWyuKjR5SzRC8sHKWOvo74OZu5qrdYR3lNjbr/UXxcP09ZVFGhemzh
TfWBf1118oRkFRUpdxmf1btH1N7znHK4cJT4+pmfflR9tABu+tTtW8pt6oCz
hUdGz+tIa9Dvre17v84Ro4av7bZIW/vjzzN4zNz9+5Qr1z0evcrwulcDA5Qj
fur7Wf2ygOFrP1u/Xrlq1Hjg8uVe98NZwyPrnhc4YfQVj+a49R1xTffz+Mm6
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
LyW1kVLZmCr1LQXS0l5N12VmUvPzZeWJEyq7eigwD2HRkSNy6Kp2OSSRaWny
99WrVIZ3X8ZDfaakvbNRwnL29nPEBdVBWpdGyISiqfvz27mUKDUzCz2Nh2Me
SXkTr70ZioSUFIOO+KN/fWuW/W8IuiWzfT0548yCQL5LbWuzRJbmSV2b9Z7/
JYRMHHKLC2TSghn9PLFu+WDuFOWMP1/8g1q+37hUbLatsYrF7sQBSc/L1vq/
gBAywYBjDMveY3CmExfLWMJz9kls/klJKj4r6WXXJbfST8rqYqWhpYgOWUPG
g4OdyI44r8rf4M9KR2ez1qURMmGBG1768Kr8wXmr8o9BRdl0kAMQm5ho0BF/
POU7s+y/uaNdza+7mMb5npZAfVuLfHXztNiH39O6FEIIMSoZeTnKAw/kia15
mbZuEbM1CCFmpaW9RnPHycW0S0z+CUkvvSaF1UFS3Zghre21/Ew+ApDHcNrb
W4K6P6/r9xEn5uTIcsfj4uLjI59v2CDvLFsqby1ZIrdCQ1W2w2wHB/mvKd/K
k7NmynT7nVJSVSUtbW2y98IFtd67y5epPOv7MdE9+0Luwy5PT3X/BytXyKzd
u+Tyo0ey5tQpaeyuw/P+ffG4d098wsNl2s4dci0wUPJKS+X73bvl9UW28vbS
JaqOG8GPe2UHcsSG6kNdjjdvKneso7ahQVafOqm2s8HZWR3bD3v2yIerVsqb
SxbLkmNHpbzm16xR1IL7UT8W7CO/rExtE8/hg5gY6ew0/Ryrjs4W5YP7/izk
VT00+b4JIUODXkenhBB58/xB5SEb21u1LmncERUfb9ARfzJtmtlqSKwskadc
d0hVS6PZ9klGTllTvbx36YisCrghnXp/wwkhxFqobaiXvW6O8vH86Zp7W3Mu
ON4u/l4nhJgZQ5mdXKx7icjZr/IssivuSkVDkprtRXoDr7rN44xyoVvPuEtZ
dXUv5xqSlCS/nz5N+Vtdpi8c6qu2C5Ur7duni+/hf2fY2/dkVUSkpiqni39x
/0YXF+V7a3+ZgRidni6v2doqJ4vbdp8/L++vWC7vLV8ubnfvqv3M2bdP1dfx
i3sNTU5W/jmnpGREfcQPY2PVfnCcOnDbFxs3KM/7ybq1yvuGp6So+1rb2pQ3
hsfG8eOYvty0UY7duK48MJYj167JN3Z2qnYcC9b9aNUqufDwoXq8qciu8On3
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
8HIr70ti0RnV/6u1f+QyvpeMspsTetYhIWT0ICPBJydZ4iuKVN/m5hBvyaqt
1LosRVj3+wRDjviLWbO0Lq0feO5ePbdPmtrpNkcL5iz+2XWnhBbnaF0KIYQQ
Qggh/YDX3HfpouSVlsrio0ektqHBrPsPS0mWj9eslrLq6lFvIzItTf6+epXy
3BcePpSj16+PuS79bep/PRiXHz2Sv82ZLY/i4+TZuXPkkr//mOuwBtBPjJl0
5fXxKmM4ruC05s6Ry/hfkBsCN4w5iYQQYgzKmxpka+gdedp1h8ouvpWdJO0a
5uxGxsYadMSfTZ+hWU2DgcwJ5HeQkeOUEKJ62jEHkBBCCCGEkPGI482b8q+t
duIfFydvLVkiEampZt2/sR2xsRiNI65paJDljsfVeg4XL8rD7s9+E5W2jgYp
q4uVtNIrRusTjsw9JAmFrmqbWRV3JK/ygZqXV1AdpJbC6mDJr/KXpKJzEpPn
KPEFbqpPmcv4XjCjMCrvqPr/jS9wkcxyL6lsSFEzEQkhxBS0dnbIlYw4+ez6
SXnrwkGVD4vbzE1MQqJBRzxp6jSz1zIc6tpa5HmPPeKba973ipYOXmuveu6X
/PrRv9clhBBCCCHE1By7cV1emGcjdyMj5MlZM8UnPFzdnpCdLVO2b5P3VyxX
90/dsV1yS0slJiNDedCaPv3GJ295qZyHs35+yjtvcHZW7vdV24Wyxc1N4rIy
5ce9e+SjVavk5QXz1TqdnZ09jhg9t8hneG/5cnl76RI57e0tHZ2/9vYgvwE5
DrgPLnvZ8WM9XnmwPmL9x725ZLHYHNgvRRUV6j70Tn+/e7e8vshW3f/OsqUq
b6PvNnVf34uKGvTYrwUGitvdu5Kany927u7S0Nxs/P+wcQp6hRtaS5Szhccd
jQPG3Lmk4nOSWX67ezsBajZZbXOONLdVSWdXu9aHSAghxAqpaW3u/hvTJS+e
3SszfTzkfn66csbmID452aAj/vu3U8yy/9EQUpwjf3G3l+qWJq1LGfcg5yS8
JFe59cZ25iURQgghhBDLAw4UvvZqYID6vq29XdY6OclsBwflZeF04Ut1IKf3
s/XrVZbxLk9PlbcA5wxKqqqU0/1w1UpJy89XtyHfF74WvhmO+E8zZyofrXO3
hRXlMmntWnH28VbfY703Fi/qyfdtbWuTrWfc5dttW6W+qamXz0X/LvzxQI+D
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
fjLi7DJc9Qn3mDrVzflV5uq/rdi1y85eCf6O5CYjVv+uZgr7MuKnZcjKozVf
+Fky4uyO3XjggMugVb+y4nX79mbZT0YMAAAAAABQ/C1buzZkRvx9y5Zel5aj
Uyk3rFz0QKsUM8x+P6GHHblxOc/n0NyJiF1r3FpyWgfvF2M628FrF/NdW9SR
3faPqP52Ivlavs+FolUYGbEy2ikrV7qM+N79+1mutXDrVrcuXqDAjFjrwwX2
Cat/V/OEc5MRa504zT5OfzJP2HeNIXNmu1kUT8uIQx0r45cttW8iItw1yYgB
AAAAAABKps07doTMiD9r0MDr0oLcvn/P9eSuOHPExhzYYh02L7Yvlky2v0f1
d9lu5ZnDnnlOhNbK0zwLnSf6SPBs2LxQf/PHC8fZ6ZQb+ToPvJHbjPhyYqLL
iHfF/6uHPaeM9sTFi1apRXNbv29f5n5lw1rXzZcz+wvMiE9fuuSO1+xgn8kr
Vtivv/wiVxnx+atXrWrrVm4uso/Wm9P1VYfuW7OFB8yc6fb5Z8ShjtVrmkGs
jFtr1pERAwAAAAAAlEz74+JCZsTv1anjdWlBai+e6OYR110eZZ23LnVziVef
O2rHk65Zesb9nE+QC8qYU++lF8i5UDLlNiNWP3CrUaPspZ9+dGu35ZTRyoIt
W6xco0bWcPBga/rzcCvfuJFb5y1UPhqYEevngbNmunXplOU2GDzI2o4ZY592
7ZKrjFi2Pf7vXZmwen8bDRvqap+6alXm9edv2Wx/a/CDfd23j51KSMjMiAOP
Vb9xxWZNbfi8eZbxuC4yYgAAAAAAgJLr5JkzITPi1z/6yOvSAE/kNiN+VrfT
02330aO248gRS719O8/Ha8bF1rg418crymjzkq/q/eob1vWV7eZFfo4NhYwY
AAAAAADAe1evXw+ZEb9Y9U2vSwM8UdgZMf6NjBgAAAAAAMB7d9LTQ2bEvy//
itelAZ5QVtk/JsZeDwtzMyH8Zzeg4Gjtve8GDLDXwprZyIULvS4HAAAAAACg
zHr06JH9rnz5kDnxzXz+W3L9m3rNS9Uc09zQfNeC+Pfrzyq39R49f966Tp5s
oxcvKvSaAp/JkbNnLWzECEu8ebPQr10a6PudcPmyrdm0yUZMnGi9hgy1Lv37
W/2w5vZmrdr2Sf361rRjuIV16lxqtnf7dbZmxaCOgtxad+tuc5cssfS7d73+
SgEAAAAAAJRKFd//IGRGfPTEiXydN/3ePesyaZLtjD+Sq/cv2b7danXv7rJa
L9y6cyfLGl2hpDxZA2zInNluTa/CFvhMlE+3GzvWklJTC/3aJZHma8fMX+By
4No/NLAXKlcJ+d0uzdsvhrS1X71e0fM6CmPr2KeP118xAAAAAACAUqnmd9+H
zGPWbdlSpHWUhIxY64S91aaNHT57pkhq8vqZlAQXLl2ykZMm2zuff+F5hlkc
tl90b2y/ev9tz+sorI25xQAAAAAAAAWvWXh4yCwmeu7cPJ/rwYMHtn7fPpu4
fHmWPmLlrx3Gj7OYdevs2wH97Z327ezVpk2sd/Q0l3+OWDDfXvrpR/uv2rXc
vnX79rrzrY6NteodO9ibbVpblZYtbejcOXb38Xl9lOe+16G92/9hp3CbsW6t
tRkz2mW48efOubWwDp0+ba1GjXK13Lx1ywbOmmmVWjS3qq1buZmzeo9qyCkj
3hoXZ9XatbX/95OP7Y3mYa7maatX27ilS7K8L+7MGdfrK1GrV7me425TJtv7
4R3d9er06W1nLl/OfP+u+Hir2a2b/bNVS6vcsoU1GjbULly7FvKZBPYR+x+r
56O11jTn1VeHnsXkFSvsky5d3P3qPUt37Mi8H31OaY/vu6S5nphok2Nm2if1
v/U8syxu23+3rG+//PJjz+sojO2PFV+zjIwMr79+AAAAAAAApU7f4cND5jED
Ro7M9TmU287asMHebd/eZcB7jx/PkrlqRoPyVe0/+WRGQ8L16y6znLNxo/s5
sGd2++HDbn/ssWPuZ83grRfRz+XEoixa+w+cOul+Vm7aYPAge75eXXessmnt
V+7aa1qU7T950mXUH3XulJmjJj+uSzXOXL8+V33E565ccVmr5gK7Zzd9unWa
OCFLb6PmGSvXlj7R0faXb+vbvM2b3M+aL6yMV2uhyb4TJ1xevXbv3sznqFy3
fv8I9/fAZ6JnoUz8SlJiyGN1n1/27mWpt2+7Z6Bn0XH8+MzjlQ9rjTDdh56B
3q/no6xe5yzuTj1+7u169nJrKnqdVxbX7Zfff2b//dOXntdR0NtvXi7n5ogA
AAAAAACg4E2ZOTNkJtOya9ccj1X2O3LhwsweVv8ZvYEZ8dtt27i+VR/lquET
JrgeW/HPQ7WveWSkDQvoZd599Kh9EB5ul27csB8GDXTX9qdcWJmsLyP+7Vd1
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
jIi7j+sQvbdOn972dts2Vr5xI/u6bx87e+WK25eclmadJ010+95oHuaOXb5z
p9sX2Ee8Kz7eanbrZv9s1dK9r/XoUXY1KcntiztzxtqMGW2TV6ywT7p0saqt
W7n36F5ka1ycez5pd1hjEQAAAAAAoKxIT0+3v1aqFJQTxyxY4HVppYJ6tZ+b
0NPuPcjwupQySxmsctR327e3bwf0d1nvw4cPrX9MjH0TEWFJqanufbuPHnWZ
qf7MePDA2o0da1/06mmpt2+7jFXHD5s711LS0uzDTuEuW1Ue67uGcmCd//bj
/6Z2xh9x+5Ud95oWZftPnnT5q15T/iyJN29avYh+LidWBqzMdv6WzW6f8uTw
CROs4eDBrpZ+M6Zbi5GR7nVRPlypRXOXIQ+ePdvlwLLvxAn3+tq9ezPr0vW/
7N3L3cf2w4ft+Xp1reP48a5OUT78WlgzO/f4XLpPvV91946eZleSEovugwIA
AAAAAIBnOvbpE5QR1/juO6/LKjWS0m97XUKZpCxX/bW+XtpTfj3BCdevu8xX
mao/5a3tx411GfKNlBTXW9xj6lTXI6weYuWqylrfatPGImJmZDlWearOuS0u
zmXEv/2qjs3euMHt0/maR0a6jNmf8ugPwsPtwKmTLttdFbs7c5/y3zkbN9qd
u3et8bBh1mH8ONcLLapD5754/VpmRqxrKEdWxutP+fNHnTu5LFgZ8cuNfrKj
589n7lfv83sd2tumgwcyX9M9jlm82D07nfPExYvP8hEAAAAAAACghNh3KC7k
2nWnzzFDN78S0lJs6J71XpdRpmhOQp/oaJe5qv/WN//B344jR+wfPzZ0vbo9
o6IyN/UVf9q1S+b8B/X/qu/2lSaNXZ+tKD9V5rpo29Ys51R+q+OnrlrlMmLN
elAW7TtGMyY0m8L/esp9VYcy4r7Tp9svatd2vcvKto/55bjKb1WH+nt13OaD
BzN7in0Zsa6hXmT/nFmUHes6ehbKiFWHb/aE+DLkNXv2BD0nXWPupk0uQ9a9
+dcEAAAAAACA0kPzEKrWrBWUEfcfEel1aSXe0tOHrf6KaK/LKFPUz/tx585u
tq/6dENRxqoMWX26mtvgv2kWhHJV0d//UK+uy3F9s4mVxer8y3buyHJOZcTK
gDXPVxmxfxareRb6WXlu4PU0I1nnFF1j+Lx5Vqt7d/vftWpap4kTMrNgZbkx
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
RfSzXtOirPvUKVmy3+g1a1xG7J/F6l6rtm5lZ69cyXwt48EDazlqpK3du9f1
JJMRAwAAAACAvPgmLCwox+vQu7fXZRVrtRZPtNXnjnpdRrG2dvPmoN8/PF/h
VduxZ4/XpaEIdOnfP/Nzb9i6TYGdV/MgPu/ZMygjVi/u4m3b7OL1a1n6iNV3
3GbMaJu8YoV90qWLy1bVh7v0SW7tnxEnp6W5GRXzt2zOPK9eax4Z6V57Wta5
bOcON+PCn86p2Q8nExIyX9t7/HiW11R3g8GDXO3nr161T7t2yTyPsuKO48db
3+nTs5w34fp1N7vhwKmTma/pPr8fOND1VucmI76WnGytR4+yyi1buB7smt26
ZXn/7fR0N79Dz0rXUp/z3E2bXD3Khf0z4pzuk4wYAAAAAIDib/7y5UEZ8f9U
+WdQBoN/a7NxgaXdu+t1GcXW0RMn3DwJ/++U8mLlxigbjp86leV3A+np6QVy
XuW/5Ro1soaDB7v+W2WsgZRZKvdV/qtZuc/Xq+uyzdtPalA+/FpYM5elBvYR
a5/Or15dzbHQ/F/lp8pes8s6leUqh16wZUuW19Xbq6z6i149LfX2bbualGTv
tm9vw+bOzewVVt/vNxERmbOUlYF3mTQpc79evx3w7HTMW23auNp9NHtj3NIl
7u85ZcSq5cvevVzf8t0nz0/nfKN5mOvD1rW7Tp7sMl7dtyjzfT0szN5p3869
5p8R53SfZMQAAAAAABR/tx7/b/rAPE8beV5o6Rn3yYefQlngW7U/C/o+ae4E
ypYqn9bI/Pw3bt9eYOdVH22/GdNdj+svP//M5aXD582zGykpbn9gRqwZFP5z
ftVDq/3KLAMzYmWafaKj7f3wjjZt9Wqr2KypxZ875/blNSMW1aRz9Zg61c2C
UO7qy3z1p35e6jeL49KNG262RHbrzSnDVb4dtXpVlvup3z/CTj3p480pI9b1
PggPdz3S/nTfqlHn0Xp0B0+dyrI/ImaG68MOzIhzuk8yYgAAAAAASobG7TsE
ZXp6DcH67Vxtw/Zu8LqMYst/xoBvmzJrltdlwQNdBwzI/A70HDy4UK6hPmL1
wGr+hPp/NachMCOu3rGD6231UTaqzHLNnj0h5xGrF1Yzj/+zRo0sua9/1qn+
W62Vp17m9fv2WZ0+vV1urZ83HjiQmSuLepLVy/xKk8Yuv/VZFbvbZbuBM31H
L15knSdNdH3MPurVnbBsmVuvT/mw/8xizcHoNHFC5ms5ZcTKetX3G7jmnZ6H
5nGs2LXL5b2+zN1H2fKHncJDZsRPu08yYgAAAAAASoZVGzYE5XrPvVLBUm7e
9Lq0YufduaNsW8Jpr8soltZs2hT0PQrr1NnrsuCRtZu3ZH4Pqtasle/zqS91
6Nw5Idel02wczczVnIbAjFg9s/55pzLijzt3zjYjVgaqXt7/qPGpzVy/PvN1
/6xT51Atyma1qbdXsxb0d+W7czZuzDxO5/5Dvbou3/Wf2asZxqHuJfHx/92d
vnaty6rlcmKiy5KVW5+4eDHLe5VVN/15uG0+eDDztZwy4p5RUVnmWfgo29b9
rdy92z0z9Sf708xkvZ5dRpzdfZIRAwAAAABQMtzPyLAXq74ZlO9FzZ7jdWme
uv/wge28/O91qJLv3rHnJvS0uw8yPKyqeLp6/br9rWrVLN+f1z78yFID/j07
yo476enud02+70Pc0fyt86ieYa3ppjm3gZR3th0zxlqMjMxXRqzeXWWomtcb
vWaNm1Phm7nwLLMmlLOqJ1c1az089RunBfQNP43yYfX2Ko/O8Osr9tGc4B8G
DcxyzpwyYt2X+q4DZzmPX7bUzUY+femSmynhf7zuUdm31rcLlRE/7T7JiAEA
AAAAKDm6DxwUlBF/WLeu12V5Slnw7yf0sJv3/jVXc9npw/bF0skeV1X8KD+q
06hRlu/Ob14uZ3sPHfK6NHisWXh45neiU99++T7flJUr7X++/97NdPDR9089
uX+q/43N27wpXxnxom1bXU+w5hf71qxTvqne3rxmxOptbj16VOZsXs270Jpv
mvUQ2MMbit7TO3qatR83NsvcCf/9fadPd8/EX04Z8fmrV10GrL5g/9febtvG
Fm7d6s47YOZM91w0u0PZtPqaNaNYOXBgRpzTfZIRAwAAAABQchw5fjwoI9Z2
PGDdorKm9uKJtvrcv/ofO25ebJH7NmXuu5iWnN1hZcqYqKig783PEyZ4XRaK
ge2xsZnfib+8Uclu56GHNhTllZELFthv6nzp5hpo3bo/16/v1q7TunXa/6wZ
8bHz590adcqZfZSH1uzWzTqOH5/njFhr3lVu2cLO+s3m3X30qL30049u5m9O
lL9Wa9fW/o/33rX/68MPsmy6/yXbt1u9iH4u3/WnjFjP5P98v3rQcb/7qo67
121xce7ZqW+4eWSku2/f8/M9Z83ZUA6s59NrWpSbn6GeZs3A8M+Ic7pPMmIA
AAAAAEqW976sE5T19Rk2zOuyPDU4dp312L7C/V19xFdup7q/rz9/3P46pa8l
pKU87fBS71B8vP2ufPks35naPzQI2feIsufRo0dW+ZNPM78bw8aNK5Dzqnf1
8NkzboauZkHcDZibkFuh5hFnp7hlncqv/dfGyyvlwIdOn7YdR464c/m/rv7h
wLX0Jq1Y7mZIaH+oecTZKW7PDQAAAAAAPN3EGTOCMuKX3q5mGRlld/7u9ktn
3Dp1dzLuub/LyjPx9sKUvrbLb1ZxWaRc7s1atbN8X16oXMUSLl/2ujQUI4F9
5lrbsLgoyRlxYdG8CK2/1z8mJvN3PZofUb1jB5u4fLn7mYwYAAAAAIDSKzE5
OagnVNvazcFrMZUV6Rn33UziqYd32Q+rZtjiU4fsf6b0s31XL3hdmucGjBwZ
9F1Ztnat12WhmFHPb83vvs/8jvyx4mu2dPUar8tyNINCeajm8/48f162c4KV
byoj1XyG3OTJJZ36k5UBvx4WZu+2b28VmjaxPtHRmevcbTl0yM2X+LBTuJvn
kZ2y9twAAAAAACgtGrRqHZT7/dSunddlearW4on2ycLx1mL9PPvb1AiLu0Gf
rGZMaF06/+9Jy65dvS4LxdSNpCR7tfr7Wb4v3zZvYWs3by7T/06hJFDGDwAA
AAAAypZVGzYEZcS/L/+KJaeU3bm7vXestF+M6WwvTo2wY0lXcz6glFNm9M7n
X2SdSVKtmqXcvOl1aSjG4k+csPLvvhf0f1+0lt3H9b6x1t26W0RkpDXtGG6d
+0VY5KRJbGVkGzlpsh08csTrrygAAAAAAHjifkaG/f3Nt4JynAnTp3tdmmdG
H9jiMuILqclel1IsDB07Nuj7sXrjRq/LQgmQkprq+s0Dvz9sbNrOXWCGDwAA
AAAAxUXPwYOD/rf7Gx99nO2sztIu+e4dS0q/7XUZxYJ6QQNnVjcL7+R1WShh
jp86ZX2GDXP9517nkmzFZzt55ozXX00AAAAAAPDE8dOnQ/7vd80ORdmlubHV
63yV5TuhnvOkZPqr8WwePXpkl69etS07d9rkmJk2IDLS6oc1t8btO1jf4cPZ
ysjW7+efbeuuXV5/HQEAAAAAQICvGjcOyoj1GsouzQ0N/E4sW7PG67IAAAAA
AAAAFAL1DIfqJVaPMcqeQ/HxQTMmfmrXzuuyAAAAAAAAABQSzR7WDOLAjDi8
b98iryUlLc1GLlxoXSZNsovXrxXqtXTfyY+v9+DBA/fzkbNnLWzECEu8ebNQ
r1uc3bp92yp/8mmW78Hfqla164mJXpcGAAAAAAAAoBBNnDEjKCP+Q8WKlljE
82f7x8TYV3362L4TJyz93r1CvdalGzfsnfbtbP/Jk+7no+fPW7uxYy0pNbVQ
r1ucte7WnRkTAAAAAAAAQBmUmpZmf379jaB8sNeQoUVWg/p6fxwyxEYvXlQk
1wvMiMu6BctXBH3+7Xv19rosAAAAAAAAAEWk+8BBQRnh8xVetavXrxfaNdPu
3LGJy5fbku3b7YdBA+1XX3xuL3z/XWZWPG7pkizvjztzxvX6+v7eZsxom7xi
hX3SpYtVbd3KqrRsaUt37Mh8/7XkZGs9epRVbtnC/tmqpX3YKdw2HTxgO44c
sXfbt7f/qPGpvRbWzPpERwf1EQceW7NbN9sZf8Ttu/W47g7jx1nMunX27YD+
Lmt+tWkT6x09zfU/X0lKtKFz59jpS5cK7dkVpPMXL9pf3qiU5bOvWqOm3UlP
97o0AAAAAAAAAEVEWfDzr1YMyok79Yso8GspQ1Weqvy117Qou5qU5OYCKyce
u+RfuXDf6dOt08QJrr/YZ1tcnFXv2MH9ffvhw/Z8vbrWcfx4u/0ky1Q+rMz3
3JUrlnr7tn3Zu5c7/90ncysWb9tmFZo2sWPnzwf1EcceO2bvdWjvagt17Nq9
e+2N5mFuDobmJldr19blzCcTEtz+hMfPTxn1nI0b7d79+zZ74wZ3/u8GDLC9
x48X+DMsKPczMuzjet9k+cyfe6WCHSnGNRckfXfajhnjvlt5pe/mkDmz3fe4
4eDBdiMlJVfH6Huq32/8NHSI+92Gvvf6zgEAAAAAAABe6zNsWFBG/Lvy5e1C
AfXDnrh40VqMjHRZ6pjFi7PkYs+SEb/c6CfX/+uj3l/lvOoVVg73QXi4W5fO
R3nvsLlzXR78tIw41LHu+URHW8tRI12v8dtt27geaB/VGT5hgnWbMjnLPa3b
t9f1IH/atYutjo3NXCOvuOg/IjLoM58cM9PrsoqM+r61RqKvRzwv9Jmr13zw
7Nm5PkbXqdSiuS3fudN9X/Vd/ahzpzI9BxsAAAAAAADFR1Jycsi5xK26dsvX
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
FTdfYK5ffq396lX19REXt4w4p3tWlppTRqzMXP3VmkGse63Tp7fLaUMJvEfN
79CziztzJsv7VLNeD5U3q/dZ+XXgPIt+M6a7eRPKeTWz+azf/eq6Op/2ad6E
/2xhfUZD5sx2c51Vh57ViYsXs5z70OnTrlc4VEasGRbqV/bn6wH37/EGAAAA
AAAA8Oy2x8bab14ulyUnrvj+B3Yunzmxf0Z7/upVlw+qL9hHrykD9OWDA2bO
dO/3rY2m+Qaa9auMVBmsel/9jz989oy93Ogn16+aU0asmbnKT3fFx7t9RZER
53TP8rSMWK+1Hj0qcwax5jjo+spxQ61ZF3iPeobq9VW26zu//mw7Zox7PSPE
7GmdW73a/jUrv1cGvH7fPjefQrMlfGvgiWY+PFf3a9cfrfxbubj/Gn7jli5x
6wjqNd2LMn3f3Gu9phkWodbQ882EViat5+ajnmb9viCw5xwAAAAAAADAsxsT
FRU0c6LcO+/ayYAe1Lzwz2hFa4wp71MPrTLKis2a2vB58zKzSv05c/16q9Gt
qzuu17Qol6Eqy1VeqH1/b9jQmgwf7mYN1IvoZyMXLnT5ZMy6dU/NiJWNanbu
Sz/96NZeK4qMODf3/LSMeNrq1W79OP+eXfXo6h5C9dAG3qMoV1Y+q+egbFhz
iFVL4IxiH+X0qlM16bgWIyPt1aZN7Of581yuq6y62YifXV3Krz/r2cOtKddw
8GA3V0Jr+Ok4zZTQ/q/69HGZuH9vszJ/PXvVo98B6NiUgHX9RJ+B8mbN7NBz
Vx+179yhZikDAAAAAAAAeHaPHj2yZuHhQTmx5lAcOX68wK6jbFSzBbR+mX8u
qNeVt94KmKMwacVyN1/Bl6lqhq/yQc0teBCiD7Y4yu6ei5IybM2BeNqad6L+
ZN927Px5V7NvzTn/95y5fNnNO754/VrI86jvV/t1jsDPSccfffy6ZlP49wdn
V48om1bmr3z+abObAQAAAAAAADy7jIwMaxbeKSgnfr7CqzZ6yhS3v7AoA9Sa
aFozzZcpqtdVfa+sTQYAAAAAAAAARUP5bNuePYNyYm0ffF3XDh87VmjXjj93
zs2Z0MwCzZut0LSJm5kQuOYbAAAAAAAAAKDw6N/3d46ICJkTa3vvyzo2YuJE
N6s4/e5dN6eioDFPAAAAAAAAAAC8o9x33tKl9kLlKtlmxf7bb1562X5brjwb
W7HYKlSvbtPnzfP6PyMAAAAAAACgxLt6/bo1bN0mVzkxG1tx2n5f/hX3/QUA
AAAAAACQP+opXrZmjdX+oYHnuR8bW162lNRUr//zAQAAAAAAAEoV9WVOmTXL
PmvQwP6nShX79Uve54BsbIHbHypWtKmzZ3v9nwsAAAAAAABQ6qnH+P79+5aR
kcHGVmw2rbsIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AMD/3x4cCAAAAAAA+b82gqqqqqqqqqoCW6n4HQ==
    "], {{0, 843.}, {1417., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{687.99356486967, 409.49687500000107`},
  ImageSizeRaw->{1417., 843.},
  PlotRange->{{0, 1417.}, {0, 843.}}]], "Output",
 CellChangeTimes->{{3.6003389929126253`*^9, 3.600339006235973*^9}, {
   3.600339095561942*^9, 3.6003391148044643`*^9}, 3.600339478076908*^9, 
   3.600343135144915*^9, 3.600343869366168*^9, 3.773390818391554*^9, 
   3.7733909512990437`*^9, {3.937976872188757*^9, 3.937976898805065*^9}},
 CellLabel->"Out[9]=",
 CellID->1564704013,ExpressionUUID->"8080252a-ec12-449d-85c7-b24abd5ce9e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How we do the parsing ", "Section",
 CellChangeTimes->{{3.600339863789555*^9, 3.6003398819119253`*^9}},
 CellID->995370029,ExpressionUUID->"4ccdbf98-48b6-4a85-91dc-0ccc893d319a"],

Cell["\<\
We are going to program parsers for the grammar rules in the graph of the \
previous slide.\
\>", "Text",
 CellChangeTimes->{
  3.6003391327104607`*^9, {3.600339399385809*^9, 3.600339405075227*^9}, {
   3.600339894433014*^9, 3.600339907033156*^9}},
 CellID->286467273,ExpressionUUID->"4aea02d8-cb65-4b8c-b6cf-c917e214952b"],

Cell["\<\
The graph follows closely the Extended Backus-Naur Form (EBNF), [Wk2].\
\>", "Text",
 CellChangeTimes->{{3.600339910667282*^9, 3.600339982213316*^9}, {
  3.937999150655369*^9, 3.93799915665234*^9}, {3.9380009566003313`*^9, 
  3.938000957770464*^9}},
 CellID->2144604384,ExpressionUUID->"5958ec38-056e-4b28-ac49-a27766e5e7b7"],

Cell[CellGroupData[{

Cell["\<\
Here is the EBNF for the integration command language we consider:\
\>", "Text",
 CellChangeTimes->{{3.600339988112949*^9, 3.600340009488206*^9}},
 CellID->1000350640,ExpressionUUID->"3e4138ea-5f57-4d9d-9e01-e079dbf88cc7"],

Cell["\<\
<request-preamble> = 'compute' | 'what' , 'is' ;
<compute> = <request-preamble> , [ 'the' ] ;
<integral-type> = [ 'numerical' | 'symbolic' ] , 'integral' ;
<integrate> = [ 'symbolically' | 'numerically' ] , 'integrate' | 'integrate' \
, ( 'numerically' | 'symbolically' ) ;
<function> = '_String' ;
<variable> = '_IdentifierString' ;
<range-named> =  'R' | 'R+' | 'R-' ;
<range-interval> = [ 'from' ] , '_WordString' , [ 'to' | 'and' ] , \
'_WordString';
<range> = ( [ 'in' | 'over' ] , [ 'the' ] , [ 'interval' ] ) , ( \
<range-interval> | <range-named> ) ;
<var-range-spec> = ( 'for' | 'of' ) , <variable> , <range> ;
<integral-request> = <compute> , <integral-type> , 'of' ;
<command1> = ( <integral-request> | <integrate> ) , <function> , ( \
<var-range-spec> | <range> ) ;
<command2> = ( <integral-request> | <integrate> ) , <function> ;
<command> = <command1> | <command2> ;\
\>", "Program",
 CellChangeTimes->{{3.6003400493735857`*^9, 3.60034014229669*^9}, {
  3.600340724593755*^9, 3.600340852696751*^9}, {3.600340906593354*^9, 
  3.600340929670134*^9}, {3.600340964878559*^9, 3.600340968235499*^9}, {
  3.600343163578311*^9, 3.600343172991065*^9}, {3.600343893384946*^9, 
  3.600343948451599*^9}, {3.600349113555666*^9, 3.600349120025098*^9}, {
  3.600351384620268*^9, 3.60035140796486*^9}, {3.600379451097136*^9, 
  3.600379464979945*^9}},
 CellID->243734117,ExpressionUUID->"ef41be15-9c55-4f83-85d8-d077101ededc"]
}, Open  ]],

Cell["We are going to write a parser for each EBNF rule.", "Text",
 CellChangeTimes->{{3.600343982912092*^9, 3.6003440034077263`*^9}},
 CellID->1187989590,ExpressionUUID->"07ee7ef3-82ae-4ad0-8d27-c01f98e50ea9"],

Cell["\<\
Later in the talk we are going to show that using the package \
FunctionalParsers.m we can generate the parsers from a string with the EBNF \
of the grammar.\
\>", "Text",
 CellChangeTimes->{{3.6003440067487793`*^9, 3.600344080212592*^9}},
 CellID->1385572971,ExpressionUUID->"ce0b45c9-a262-4b2b-998f-02d2dcf4b492"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parsing <compute>", "Section",
 CellChangeTimes->{{3.6003395431495743`*^9, 3.600339545161783*^9}, {
  3.600339842110106*^9, 3.600339854742909*^9}, {3.600344246594384*^9, 
  3.600344247585428*^9}},
 CellID->12255529,ExpressionUUID->"c019b7aa-2c03-42d4-959d-25113e4868ac"],

Cell[CellGroupData[{

Cell["\<\
The first grammar rule we consider is <compute> that has the \
<request-preamble> as sub-part.\
\>", "Text",
 CellChangeTimes->{{3.600348469881712*^9, 3.600348553941237*^9}, 
   3.600388580130815*^9},
 CellID->1967729438,ExpressionUUID->"51336893-31d3-45e7-b17d-272f9162a21b"],

Cell["\<\
<request-preamble> = 'compute' | 'what' , 'is' ;
<compute> = <request-preamble> , [ 'the' ] ;\
\>", "Program",
 CellChangeTimes->{{3.6003485386709023`*^9, 3.6003485428955812`*^9}},
 CellID->380500666,ExpressionUUID->"5038e3bf-f6ec-43e1-a01d-9909edfc1ae7"]
}, Open  ]],

Cell["\<\
Taking LHS of rule we remove the dashes, \[OpenCurlyDoubleQuote]-\
\[CloseCurlyDoubleQuote], and put the prefix \[OpenCurlyDoubleQuote]p\
\[CloseCurlyDoubleQuote] in order to derive the symbol of parser \
corresponding to that rule.\
\>", "Text",
 CellChangeTimes->{{3.60034855750622*^9, 3.60034868639895*^9}, 
   3.600388583787187*^9},
 CellID->2015876343,ExpressionUUID->"3b3b370a-5dda-4d81-9519-441ed1f2f315"],

Cell[CellGroupData[{

Cell["Here is the parser for <request-preamble>:", "Text",
 CellChangeTimes->{{3.600348805712178*^9, 3.600348822133374*^9}},
 CellID->2131681729,ExpressionUUID->"e4a32aa2-8e67-4e99-b568-a692cb3d9ed6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pREQUESTPREAMBLE", "=", 
  RowBox[{"ParseAlternativeComposition", "[", 
   RowBox[{
    RowBox[{"ParseSymbol", "[", "\"\<compute\>\"", "]"}], ",", 
    RowBox[{"ParseSequentialComposition", "[", 
     RowBox[{
      RowBox[{"ParseSymbol", "[", "\"\<what\>\"", "]"}], ",", 
      RowBox[{"ParseSymbol", "[", "\"\<is\>\"", "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.600348547727539*^9, 3.600348550255623*^9}, {
  3.600348689464839*^9, 3.600348774242919*^9}},
 CellLabel->"In[426]:=",
 CellID->705136402,ExpressionUUID->"7c81abf1-7707-4c52-93b0-49dd5105ef2f"],

Cell[BoxData[
 RowBox[{"ParseAlternativeComposition", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&&", 
       RowBox[{"\<\"compute\"\>", "===", 
        RowBox[{"First", "[", "#1", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rest", "[", "#1", "]"}], ",", "\<\"compute\"\>"}], "}"}], 
       "}"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], "&"}], ",", 
   RowBox[{"ParseSequentialComposition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&&", 
         RowBox[{"\<\"what\"\>", "===", 
          RowBox[{"First", "[", "#1", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rest", "[", "#1", "]"}], ",", "\<\"what\"\>"}], "}"}], 
         "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#1", "]"}], ">", "0"}], "&&", 
         RowBox[{"\<\"is\"\>", "===", 
          RowBox[{"First", "[", "#1", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rest", "[", "#1", "]"}], ",", "\<\"is\"\>"}], "}"}], 
         "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}], "&"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.937999283474498*^9, 3.9379996903899918`*^9, 3.9380004076113167`*^9, {
   3.938000489852824*^9, 3.9380005219139214`*^9}, {3.938000592038842*^9, 
   3.938000607940373*^9}},
 CellLabel->"Out[426]=",
 CellID->1659492992,ExpressionUUID->"a011bc4a-49e1-4649-bb1a-875f80307b4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Which more compactly can be defines as:", "Text",
 CellChangeTimes->{{3.600348828915406*^9, 3.600348843540957*^9}},
 CellID->1412744268,ExpressionUUID->"f28205e6-32ed-4896-a934-41013b1b00d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pREQUESTPREAMBLE", "=", 
   RowBox[{
    RowBox[{"ParseSymbol", "[", "\"\<compute\>\"", "]"}], "\[CirclePlus]", 
    RowBox[{
     RowBox[{"ParseSymbol", "[", "\"\<what\>\"", "]"}], "\[CircleTimes]", 
     RowBox[{"ParseSymbol", "[", "\"\<is\>\"", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.600348547727539*^9, 3.600348550255623*^9}, {
   3.600348689464839*^9, 3.600348731016835*^9}, 3.6003488269826937`*^9},
 CellLabel->"In[427]:=",
 CellID->1413711044,ExpressionUUID->"56a4ff16-aa5e-4303-a743-50aa45515872"]
}, Open  ]],

Cell[TextData[{
 "The symbol \[OpenCurlyDoubleQuote]\[CirclePlus]\[CloseCurlyDoubleQuote] is \
an infix notation shorthand of ",
 StyleBox["ParseAlternativeComposition", "Program"],
 ".\nThe symbol \[OpenCurlyDoubleQuote]\[CircleTimes]\[CloseCurlyDoubleQuote] \
is an infix notation shorthand of ",
 StyleBox["ParseSequentialComposition", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.600348854421652*^9, 3.600348919997017*^9}},
 CellID->482446100,ExpressionUUID->"c2473f71-a6d1-4f5f-95d1-da208b508f0c"],

Cell[CellGroupData[{

Cell["Let us test the parser with the integration command string", "Text",
 CellChangeTimes->{{3.600348924674264*^9, 3.60034894362129*^9}, {
  3.60034902424037*^9, 3.6003490325987883`*^9}},
 CellID->1720835275,ExpressionUUID->"a2f86077-c34e-4576-9851-9865c1a681d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"icom", "=", "\"\<what is the integral of Sin[x] over 0 1\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6003489620071697`*^9, 3.600349003823308*^9}, 
   3.60035182831453*^9, {3.600367481591578*^9, 3.600367488113469*^9}},
 CellLabel->"In[428]:=",
 CellID->1916192776,ExpressionUUID->"8b10ef05-626f-4c1d-ae65-27db8cf07ffe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["which we split into tokens first:", "Text",
 CellChangeTimes->{{3.600349041981324*^9, 3.600349055009315*^9}},
 CellID->1787215820,ExpressionUUID->"4bee5d2a-4afd-40aa-b9be-7e89c1e41129"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pREQUESTPREAMBLE", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6003489509602957`*^9, 3.600348960105685*^9}, {
  3.600349010482122*^9, 3.600349017124486*^9}},
 CellLabel->"In[429]:=",
 CellID->882516151,ExpressionUUID->"ed8fb059-4334-4547-ae06-40df1346da0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"the\"\>", ",", "\<\"integral\"\>", ",", "\<\"of\"\>", 
      ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", ",", "\<\"0\"\>", 
      ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.937999283499419*^9, 3.9379996904234037`*^9, 3.938000407637005*^9, {
   3.938000489878827*^9, 3.938000521945574*^9}, {3.938000592064822*^9, 
   3.9380006079674873`*^9}},
 CellLabel->"Out[429]=",
 CellID->1728592955,ExpressionUUID->"d2c35f4e-dd42-46a7-9be5-0524814d5ddc"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The parsing of <request-preamble> is successful, but in order to see than we \
need to explain the function parser definition.\
\>", "Text",
 CellChangeTimes->{{3.600349954459251*^9, 3.600349978633809*^9}, {
  3.600350122027564*^9, 3.600350161200478*^9}},
 CellID->1926883675,ExpressionUUID->"2140b7ec-46e9-4ed3-870f-350274e646c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parser definition", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.51430857274755*^9, 3.514308578875259*^9}, {
   3.5589812665514297`*^9, 3.558981271690132*^9}, {3.558982032324813*^9, 
   3.558982041187623*^9}, {3.558982071337878*^9, 3.558982092554455*^9}, {
   3.558982461921489*^9, 3.558982467272991*^9}, {3.559457890495723*^9, 
   3.559457894424337*^9}, {3.559460436813368*^9, 3.559460442948214*^9}, {
   3.560781891260036*^9, 3.5607819112550573`*^9}},
 CellID->1080528965,ExpressionUUID->"074439a2-e476-4d81-84fa-d49813b061c2"],

Cell[CellGroupData[{

Cell["\<\
First definition: We define a parser type to be a function that transforms a \
list of characters or tokens into (1) an unparsed list of tokens and (2) a \
parse tree:\
\>", "Text",
 CellChangeTimes->{{3.56078191687293*^9, 3.560782013140167*^9}, {
  3.560782104961995*^9, 3.560782128841597*^9}, {3.560784470267807*^9, 
  3.56078447100725*^9}, {3.600350202164358*^9, 3.600350220680461*^9}, {
  3.600388591212142*^9, 3.6003885954647427`*^9}},
 CellID->1328595723,ExpressionUUID->"135727df-f40e-4cb7-aa70-cc42db4341c6"],

Cell["\<\
P: _String \[Rule] {_String, _ParseTree }

or 

P: {_String...} \[Rule] { {_String...}, _ParseTree }\
\>", "Program",
 CellChangeTimes->{{3.560782017128257*^9, 3.560782069722925*^9}, {
  3.560782154696721*^9, 3.560782193863615*^9}, {3.5607822660299664`*^9, 
  3.560782269421823*^9}},
 CellID->173354955,ExpressionUUID->"54c36667-905c-44a0-9d66-92679e5224d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

It is better though to generalize this definition to allow a list of results:\
\
\>", "Text",
 CellChangeTimes->{{3.56078208434062*^9, 3.560782095634037*^9}, {
   3.560782134124763*^9, 3.560782144712674*^9}, {3.5607822026468487`*^9, 
   3.5607822511256313`*^9}, 3.560784486243314*^9, 3.600388608764552*^9},
 CellID->1588903353,ExpressionUUID->"ff999654-0d92-4885-8564-6467b659b4e7"],

Cell["P: {_String...} \[Rule] { { {_String...}, _ParseTree }...}", "Program",
 CellChangeTimes->{{3.560782017128257*^9, 3.560782069722925*^9}, {
  3.560782254421812*^9, 3.56078230372449*^9}},
 CellID->739503426,ExpressionUUID->"a16dc637-9b13-4ec2-81c0-ca87433fe872"]
}, Open  ]],

Cell["\<\


(This is related to the so called \[OpenCurlyDoubleQuote]method of lists of \
success.\[CloseCurlyDoubleQuote])\
\>", "Text",
 CellChangeTimes->{{3.560784490919139*^9, 3.560784525030024*^9}},
 CellID->1346215593,ExpressionUUID->"171adb7e-ca5a-4f5f-b4ab-6444d9acc459"],

Cell["\<\
The functional parsers are categorized in the groups: basic, combinators, and \
transformers.
1. The basic parsers parse specified strings and strings adhering to \
predicates.
2. The combinator parsers allow sequential and alternative combinations of \
parsers.
3. The transformer parsers change the input or the output of the parsers that \
are transformed.\
\>", "Text",
 CellChangeTimes->{{3.6003500638536997`*^9, 3.6003500799524307`*^9}, {
  3.600350258632926*^9, 3.600350283984993*^9}},
 CellID->2105250406,ExpressionUUID->"cc30e854-a767-43f4-a329-39e795e9f763"],

Cell[TextData[{
 "The parser ",
 StyleBox["ParseSymbol", "Program"],
 " is a basic parser; ",
 StyleBox["ParseAlternativeComposition", "Program"],
 " and ",
 StyleBox["ParseSequentialComposition", "Program"],
 " are combinators."
}], "Text",
 CellChangeTimes->{{3.600350317870096*^9, 3.6003503677756147`*^9}, {
  3.600419378106174*^9, 3.600419382976985*^9}},
 CellID->1003005670,ExpressionUUID->"76a5c61a-75ba-4a26-85d5-759b64d5b264"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parsing <compute>, continued", "Section",
 CellChangeTimes->{
  3.600349991821375*^9, {3.600350112366194*^9, 3.600350117325222*^9}, 
   3.600419276450315*^9},
 CellID->1917150387,ExpressionUUID->"a4b40371-04a1-437e-a511-f9a68b6fa316"],

Cell[CellGroupData[{

Cell["So far we have the parsing result:", "Text",
 CellChangeTimes->{{3.600350042333519*^9, 3.6003500609281273`*^9}, {
  3.600350379749166*^9, 3.6003503866082172`*^9}},
 CellID->701914721,ExpressionUUID->"8566d90e-d793-45a0-8002-e179e9609f6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pREQUESTPREAMBLE", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6003489509602957`*^9, 3.600348960105685*^9}, {
  3.600349010482122*^9, 3.600349017124486*^9}},
 CellLabel->"In[430]:=",
 CellID->953042876,ExpressionUUID->"a2f5ebcd-4799-4048-9536-cc8fc1641f06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"the\"\>", ",", "\<\"integral\"\>", ",", "\<\"of\"\>", 
      ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", ",", "\<\"0\"\>", 
      ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9379992835062923`*^9, 3.937999690436819*^9, 3.938000407643812*^9, {
   3.938000489892458*^9, 3.938000521958556*^9}, {3.938000592080358*^9, 
   3.938000607980934*^9}},
 CellLabel->"Out[430]=",
 CellID->1303018069,ExpressionUUID->"5617d200-9263-4504-a38f-63a08a1234d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The parsing of <request-preamble> is successful. Looking at the grammar rules\
\
\>", "Text",
 CellChangeTimes->{{3.600350004803059*^9, 3.600350031532331*^9}, {
  3.600350392559663*^9, 3.600350430720364*^9}},
 CellID->1858577606,ExpressionUUID->"f0dbae96-4ef0-4070-8492-84cbd9328396"],

Cell["\<\
<request-preamble> = 'compute' | 'what' , 'is' ;
<compute> = <request-preamble> , [ 'the' ] ;\
\>", "Program",
 CellChangeTimes->{{3.6003485386709023`*^9, 3.6003485428955812`*^9}},
 CellID->1964178427,ExpressionUUID->"94ac8850-92e7-491c-badd-703421d2df45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
we are ready to define <compute> that combines <request-preamble> with an \
optional \[OpenCurlyDoubleQuote]the\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.60035043658333*^9, 3.600350448405233*^9}, {
  3.600350486916396*^9, 3.600350511766019*^9}},
 CellID->828200905,ExpressionUUID->"0fb5c71c-40d2-4090-b9b2-66d6c7bebae8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pCOMPUTE", "=", 
   RowBox[{"pREQUESTPREAMBLE", "\[CircleTimes]", 
    RowBox[{"ParseOption", "[", 
     RowBox[{"ParseSymbol", "[", "\"\<the\>\"", "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.600350449743044*^9, 3.600350479831353*^9}, {
   3.60035051479432*^9, 3.6003505148952303`*^9}, {3.6003505537751923`*^9, 
   3.600350568425416*^9}, 3.600350609579976*^9},
 CellLabel->"In[431]:=",
 CellID->1731094128,ExpressionUUID->"6e2251b0-8547-4bc3-aac1-c5563604538e"]
}, Open  ]],

Cell[TextData[{
 "The definition of <compute> uses another combinator parser ",
 StyleBox["ParseOption", "Program"],
 " for optional tokens."
}], "Text",
 CellChangeTimes->{{3.60035062389555*^9, 3.600350638452729*^9}, {
  3.600350974161221*^9, 3.600350975135796*^9}, {3.600351031669552*^9, 
  3.600351070121153*^9}, {3.600351128454878*^9, 3.600351129724553*^9}},
 CellID->390559740,ExpressionUUID->"188253ee-c2ac-4836-8696-9d9d89cf082a"],

Cell[CellGroupData[{

Cell["\<\
The parsed result contains two possible parsings, one with \
\[OpenCurlyDoubleQuote]the\[OpenCurlyDoubleQuote] parsed, and one without:\
\>", "Text",
 CellChangeTimes->{{3.600351134539329*^9, 3.600351189417441*^9}},
 CellID->1427524948,ExpressionUUID->"f9c1f73e-7b5b-459c-958c-d96298cbc857"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pCOMPUTE", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600350592331835*^9, 3.600350593969925*^9}},
 CellLabel->"In[432]:=",
 CellID->724496752,ExpressionUUID->"8d11aeae-64ba-4ea3-b843-f64c430cf8a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"integral\"\>", ",", "\<\"of\"\>", ",", "\<\"Sin[x]\"\>", 
       ",", "\<\"over\"\>", ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
       RowBox[{"{", "\<\"the\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"the\"\>", ",", "\<\"integral\"\>", ",", "\<\"of\"\>", 
       ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", ",", "\<\"0\"\>", 
       ",", "\<\"1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283522888*^9, 3.9379996904562674`*^9, 3.9380004076611*^9, {
   3.9380004899129553`*^9, 3.938000521978011*^9}, {3.938000592099016*^9, 
   3.9380006079998493`*^9}},
 CellLabel->"Out[432]=",
 CellID->1933937224,ExpressionUUID->"0bfa167c-5220-41e4-8cc1-75bd0676dfbd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can use the parser combinator ParseShortest to select the one parsed the \
token \[OpenCurlyDoubleQuote]the\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.6003511939864607`*^9, 3.600351231639072*^9}},
 CellID->384632374,ExpressionUUID->"9565ba1b-c964-4924-a64e-6b0ff6514917"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseShortest", "[", "pCOMPUTE", "]"}], "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600351236998097*^9, 3.600351246637475*^9}},
 CellLabel->"In[433]:=",
 CellID->590532348,ExpressionUUID->"ee1e31da-7b6e-40ce-95cd-5ea513f96cc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"integral\"\>", ",", "\<\"of\"\>", ",", "\<\"Sin[x]\"\>", 
      ",", "\<\"over\"\>", ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
      RowBox[{"{", "\<\"the\"\>", "}"}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9379992835339117`*^9, 3.937999690471685*^9, 3.938000407674045*^9, {
   3.938000489919569*^9, 3.9380005219861603`*^9}, {3.938000592110971*^9, 
   3.938000608008958*^9}},
 CellLabel->"Out[433]=",
 CellID->1517926423,ExpressionUUID->"0f8c3482-4aef-4d32-8d9d-b05972b90a88"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parsing <integral-type> and <integral-request>", "Section",
 CellChangeTimes->{{3.600351421679881*^9, 3.6003514292590923`*^9}, {
  3.600351657501586*^9, 3.600351670922639*^9}},
 CellID->1555240049,ExpressionUUID->"ddfcc8d0-a591-4fd7-ba4e-926a93bc6925"],

Cell[CellGroupData[{

Cell["The definition of the parser <integral-type>", "Text",
 CellChangeTimes->{{3.600351434693171*^9, 3.600351504364585*^9}, {
  3.600351693852788*^9, 3.600351697157708*^9}},
 CellID->1896035906,ExpressionUUID->"a9d76347-4b54-4114-a7b5-8a69f4ec59ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pINTEGRALTYPE", "=", 
   RowBox[{
    RowBox[{"ParseOption", "[", 
     RowBox[{
      RowBox[{"ParseSymbol", "[", "\"\<numerical\>\"", "]"}], "\[CirclePlus]", 
      RowBox[{"ParseSymbol", "[", "\"\<symbolic\>\"", "]"}]}], "]"}], 
    "\[CircleTimes]", 
    RowBox[{"ParseSymbol", "[", "\"\<integral\>\"", "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.600351516470134*^9, 3.600351519764471*^9}, {
  3.600351557896099*^9, 3.60035163224681*^9}},
 CellLabel->"In[434]:=",
 CellID->165634309,ExpressionUUID->"0c6a86b1-8d70-412a-bdd7-29ee2c696a0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["follows directly the EBNF rule", "Text",
 CellChangeTimes->{{3.600351699678405*^9, 3.6003517119858007`*^9}},
 CellID->677024851,ExpressionUUID->"5765e361-2380-4b61-b017-e777eaa04a66"],

Cell["\<\
<integral-type> = [ 'numerical' | 'symbolic' ] , 'integral' ;\
\>", "Program",
 CellChangeTimes->{{3.600351720292286*^9, 3.60035173087643*^9}},
 CellID->1388308951,ExpressionUUID->"2267e095-eded-4140-ab17-1a4dca96f7e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Now we can define <integral-request>\
\>", "Text",
 CellChangeTimes->{{3.600351738616584*^9, 3.60035177272546*^9}},
 CellID->898714802,ExpressionUUID->"c60b7a3f-5bc6-4f94-abaf-a0c2614fca18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pINTEGRALREQUEST", "=", 
   RowBox[{"pCOMPUTE", "\[CircleTimes]", "pINTEGRALTYPE"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.600351779000626*^9, 3.600351804126483*^9}, {
  3.600351897313369*^9, 3.6003519077868567`*^9}},
 CellLabel->"In[435]:=",
 CellID->1447187863,ExpressionUUID->"333cc271-0e71-4ec6-8ab7-b6e6c7a4fb08"],

Cell[CellGroupData[{

Cell[BoxData["icom"], "Input",
 CellChangeTimes->{{3.600351962786577*^9, 3.600351964665167*^9}},
 CellLabel->"In[436]:=",
 CellID->486627519,ExpressionUUID->"70144814-065c-4452-a557-8e29419dc846"],

Cell[BoxData["\<\"what is the integral of Sin[x] over 0 1\"\>"], "Output",
 CellChangeTimes->{
  3.9379992835571213`*^9, 3.937999690502719*^9, 3.938000407700726*^9, {
   3.938000489944964*^9, 3.938000522009384*^9}, {3.93800059213929*^9, 
   3.938000608032514*^9}},
 CellLabel->"Out[436]=",
 CellID->1831148648,ExpressionUUID->"1c536255-bc31-4cc5-b4d8-e888001254c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.6003518119940023`*^9},
 CellLabel->"In[437]:=",
 CellID->1130984057,ExpressionUUID->"2aef125a-8a0b-46f7-851a-08d0b970fc03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
        RowBox[{"{", "\<\"the\"\>", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\<\"integral\"\>"}], "}"}]}], "}"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283568416*^9, 3.937999690515596*^9, 3.938000407713895*^9, {
   3.938000489951193*^9, 3.938000522015904*^9}, {3.93800059215057*^9, 
   3.9380006080387383`*^9}},
 CellLabel->"Out[437]=",
 CellID->527181779,ExpressionUUID->"18bd51d3-05cf-4604-961e-40e4cf38edd7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Picking only the important part", "Section",
 CellChangeTimes->{{3.600367595743812*^9, 3.600367603774186*^9}},
 CellID->1071286402,ExpressionUUID->"7468feee-a479-42e0-9a8c-9faede33e0d6"],

Cell["\<\
In many cases the semantic meaning of a grammar rule can be identified only \
by some part of the parsed input. 
For example, in the context of the integration language the phrases \
\[OpenCurlyDoubleQuote]compute\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]what is\[CloseCurlyDoubleQuote] are needed in order to \
extend the number of admissible sentences, but as soon as they are parsed \
they are no longer of interest. What is of interest is to know what type of \
integration is requested: numerical or symbolical. (If the type is not \
explicitly specified we are going to interpret as \
\[OpenCurlyDoubleQuote]symbolic\[CloseCurlyDoubleQuote].)\
\>", "Text",
 CellChangeTimes->{{3.600367606783012*^9, 3.6003680306943693`*^9}, {
  3.600368062948601*^9, 3.600368088015604*^9}, {3.600419410329895*^9, 
  3.600419444978648*^9}},
 CellID->607661966,ExpressionUUID->"5a70fb67-bf62-4f92-9787-a4e0725617c6"],

Cell[CellGroupData[{

Cell[TextData[{
 "Instead of using ",
 StyleBox["ParseSequentialComposition", "Program"],
 " (\[CircleTimes]) in the parser definition for the rule \
<integration-request> we can use ",
 StyleBox["ParseSequentialCompositionPickRight", "Program"],
 " (\[RightTriangle]) :"
}], "Text",
 CellChangeTimes->{{3.600368115982095*^9, 3.600368228797421*^9}, 
   3.600388611810401*^9},
 CellID->1689921077,ExpressionUUID->"e231449d-b8e0-41a1-9ce9-28f82abf4687"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"pINTEGRALREQUEST", "=", 
    RowBox[{"pCOMPUTE", "\[RightTriangle]", "pINTEGRALTYPE"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.600368110876256*^9, 3.600368112463923*^9}, {
  3.600368230667238*^9, 3.600368235571992*^9}},
 CellLabel->"In[438]:=",
 CellID->2032309564,ExpressionUUID->"06e1d4a1-0326-4cf5-90b7-5e4a5a1c3e1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.6003518119940023`*^9},
 CellLabel->"In[439]:=",
 CellID->1299436613,ExpressionUUID->"8a032a7a-e8c1-4f69-b619-2dfe4cfa5ae2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\<\"integral\"\>"}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.937999283584787*^9, 3.9379996905356607`*^9, 3.938000407734771*^9, {
   3.938000489969626*^9, 3.938000522033495*^9}, {3.9380005921762877`*^9, 
   3.938000608059587*^9}},
 CellLabel->"Out[439]=",
 CellID->1974115778,ExpressionUUID->"c8b47ef3-7a0a-4f6b-be3f-24ac2540e18b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compare with the parsing with the previous definition using ",
 StyleBox["ParseSequentialComposition", "Program"],
 " (\[CircleTimes]) :"
}], "Text",
 CellChangeTimes->{{3.600368341220786*^9, 3.6003683730919123`*^9}, {
  3.6004194754672403`*^9, 3.600419482898209*^9}},
 CellID->1869948348,ExpressionUUID->"b0a45af5-23e5-4256-bb97-29f03eb81b9f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"pCOMPUTE", "\[CircleTimes]", "pINTEGRALTYPE"}], ")"}], "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600368379878996*^9, 3.600368394277433*^9}},
 CellLabel->"In[440]:=",
 CellID->1946194638,ExpressionUUID->"20dbd5ee-9585-4119-b205-20c927c27835"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"what\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
        RowBox[{"{", "\<\"the\"\>", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\<\"integral\"\>"}], "}"}]}], "}"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283591426*^9, 3.937999690550161*^9, 3.938000407741259*^9, {
   3.938000489981563*^9, 3.938000522046039*^9}, {3.938000592189767*^9, 
   3.9380006080664263`*^9}},
 CellLabel->"Out[440]=",
 CellID->341534696,ExpressionUUID->"00fbc6fb-1898-4f6d-9ee5-cff05be814d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["If the type of integration is explicitly specified as in", "Text",
 CellChangeTimes->{{3.600368404716432*^9, 3.600368440446212*^9}, 
   3.600388614510441*^9},
 CellID->1369853409,ExpressionUUID->"467fee17-c156-4631-9f92-10cdef0bd344"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "nicom", "=", "\"\<what is the numerical integral of Sin[x] over 0 1\>\""}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6003682638975782`*^9, 3.600368307685754*^9}},
 CellLabel->"In[441]:=",
 CellID->2101549223,ExpressionUUID->"3e884a3f-9125-41ae-9c17-6e6980702024"]
}, Open  ]],

Cell[CellGroupData[{

Cell["then the new definition of <integral-request> outputs:", "Text",
 CellChangeTimes->{{3.600368446386664*^9, 3.600368468560327*^9}},
 CellID->1074248752,ExpressionUUID->"2cfacc74-4259-4bbe-92a8-3b48463a3970"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "nicom", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6003518119940023`*^9, 3.6003682487952213`*^9, {3.600368292734171*^9, 
   3.600368311712328*^9}},
 CellLabel->"In[442]:=",
 CellID->1003754535,ExpressionUUID->"d8bb447d-e692-4fa1-8305-945b88133b61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"numerical\"\>", "}"}], ",", "\<\"integral\"\>"}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283614962*^9, 3.93799969057312*^9, 3.938000407760229*^9, {
   3.9380004900064983`*^9, 3.9380005220637293`*^9}, {3.938000592208263*^9, 
   3.938000608084824*^9}},
 CellLabel->"Out[442]=",
 CellID->2097330888,ExpressionUUID->"a2b5813d-32e6-48ef-8ae5-d09c35fd68a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transforming the parser results", "Section",
 CellChangeTimes->{{3.600351932648377*^9, 3.600351952254343*^9}},
 CellID->1618422560,ExpressionUUID->"39331205-1967-4ad8-86d5-06817a4d455f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Obviously we can (and should) go further and throw away also \
\[OpenCurlyDoubleQuote]integral\[OpenCurlyDoubleQuote] using ",
 StyleBox["ParseSequentialCompositionPickLeft", "Program"],
 " (\[LeftTriangle]) as in"
}], "Text",
 CellChangeTimes->{{3.600368482523541*^9, 3.600368568436202*^9}, {
  3.600368661501856*^9, 3.6003686964205217`*^9}},
 CellID->800093018,ExpressionUUID->"1d259b85-c30f-4a4b-8aee-347356f4a6bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pINTEGRALTYPE", "=", 
   RowBox[{
    RowBox[{"ParseOption", "[", 
     RowBox[{
      RowBox[{"ParseSymbol", "[", "\"\<numerical\>\"", "]"}], "\[CirclePlus]", 
      RowBox[{"ParseSymbol", "[", "\"\<symbolic\>\"", "]"}]}], "]"}], 
    "\[LeftTriangle]", 
    RowBox[{"ParseSymbol", "[", "\"\<integral\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pINTEGRALREQUEST", "=", 
   RowBox[{"pCOMPUTE", "\[RightTriangle]", "pINTEGRALTYPE"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.600368586139617*^9, 3.6003686544024687`*^9}, {
  3.6003690338036013`*^9, 3.600369036378487*^9}},
 CellLabel->"In[443]:=",
 CellID->1768239659,ExpressionUUID->"3f6356a7-2d96-4d11-864c-d2fee284f477"],

Cell[CellGroupData[{

Cell[BoxData[{"nicom", "\[IndentingNewLine]", 
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "nicom", "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.60036873915235*^9, {3.600368819928749*^9, 3.600368820580668*^9}, {
   3.937976917582782*^9, 3.937976947057354*^9}, {3.937977239641515*^9, 
   3.937977274050809*^9}},
 CellLabel->"In[445]:=",
 CellID->1925241627,ExpressionUUID->"1aa2b4a5-9293-4b13-836a-31a433f63064"],

Cell[BoxData["\<\"what is the numerical integral of Sin[x] over 0 1\"\>"], \
"Output",
 CellChangeTimes->{
  3.937999283632951*^9, 3.937999690599256*^9, 3.9380004077863083`*^9, {
   3.938000490027341*^9, 3.938000522083136*^9}, {3.938000592228199*^9, 
   3.9380006081048822`*^9}},
 CellLabel->"Out[445]=",
 CellID->1043652758,ExpressionUUID->"1fea2ac8-754e-40a3-aced-8864de0b0655"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", "\<\"numerical\"\>", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283632951*^9, 3.937999690599256*^9, 3.9380004077863083`*^9, {
   3.938000490027341*^9, 3.938000522083136*^9}, {3.938000592228199*^9, 
   3.9380006081056128`*^9}},
 CellLabel->"Out[446]=",
 CellID->25475010,ExpressionUUID->"1fa3547f-30b6-4d41-b110-1eb64052498a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
But now if do not specify explicitly the integration type we are going to \
have an empty successfully parsed part:\
\>", "Text",
 CellChangeTimes->{
  3.600368663553494*^9, {3.600368727380678*^9, 3.600368812622117*^9}, 
   3.600388616929152*^9},
 CellID->1399915640,ExpressionUUID->"5ae5c926-cc94-46cf-98ea-84334ca8fb9c"],

Cell[CellGroupData[{

Cell[BoxData[{"icom", "\[IndentingNewLine]", 
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.600368723580118*^9, {3.600368825553817*^9, 3.600368827431725*^9}, {
   3.937977289202536*^9, 3.9379773065700274`*^9}},
 CellLabel->"In[447]:=",
 CellID->551324948,ExpressionUUID->"8b33d2a4-3635-4088-8f3b-8e92a452ed4b"],

Cell[BoxData["\<\"what is the integral of Sin[x] over 0 1\"\>"], "Output",
 CellChangeTimes->{
  3.937999283640037*^9, 3.937999690614324*^9, 3.938000407800129*^9, {
   3.938000490041597*^9, 3.9380005220973873`*^9}, {3.938000592241569*^9, 
   3.938000608118671*^9}},
 CellLabel->"Out[447]=",
 CellID->809247317,ExpressionUUID->"984494b8-488c-482f-a014-698d5497c2ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283640037*^9, 3.937999690614324*^9, 3.938000407800129*^9, {
   3.938000490041597*^9, 3.9380005220973873`*^9}, {3.938000592241569*^9, 
   3.938000608119327*^9}},
 CellLabel->"Out[448]=",
 CellID->1005720368,ExpressionUUID->"37080e4a-0daf-4bc6-821e-6d526849a35e"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Of course when we interpret the parsed output we can imply from no integral \
type specification that the integration is symbolic, but it is better if we \
can modify the parsed output of the rule <integral-type> to indicate the \
integration type.\
\>", "Text",
 CellChangeTimes->{{3.600368867862618*^9, 3.600368899395031*^9}, {
   3.600368986471414*^9, 3.600368997079853*^9}, {3.600369074773636*^9, 
   3.600369109592484*^9}, {3.600369152230633*^9, 3.600369185385044*^9}, 
   3.600388620045433*^9},
 CellID->1873947878,ExpressionUUID->"fcbc8813-0c7b-4260-9130-4af1fca45095"],

Cell[CellGroupData[{

Cell[TextData[{
 "This can be done using the parser transformer ",
 StyleBox["ParseApply", "Program"],
 " (infix shorthand \[CircleDot]) that applies a function to the successfully \
parsed part."
}], "Text",
 CellChangeTimes->{{3.600369190121168*^9, 3.600369225356439*^9}, {
   3.600369386042569*^9, 3.600369399429685*^9}, 3.600388621946796*^9},
 CellID->446818644,ExpressionUUID->"5d07be76-8391-4abe-9a6f-f5e134a123fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pINTEGRALTYPE", "=", 
   RowBox[{"ParseApply", "[", 
    RowBox[{"IType", ",", 
     RowBox[{
      RowBox[{"ParseOption", "[", 
       RowBox[{
        RowBox[{"ParseSymbol", "[", "\"\<numerical\>\"", "]"}], 
        "\[CirclePlus]", 
        RowBox[{"ParseSymbol", "[", "\"\<symbolic\>\"", "]"}]}], "]"}], 
      "\[LeftTriangle]", 
      RowBox[{"ParseSymbol", "[", "\"\<integral\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pINTEGRALREQUEST", "=", 
   RowBox[{"pCOMPUTE", "\[RightTriangle]", "pINTEGRALTYPE"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.600369041577158*^9, 3.600369046980958*^9}, {
  3.600369119124983*^9, 3.600369147136475*^9}, {3.6003692365530157`*^9, 
  3.600369247690856*^9}, {3.60036966818635*^9, 3.60036966970518*^9}},
 CellLabel->"In[449]:=",
 CellID->2078119796,ExpressionUUID->"51df9fb6-8512-4f39-b3e0-bcf2968c8316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600369055812757*^9, 3.600369065752925*^9}, {
  3.600369435477359*^9, 3.600369445196739*^9}, {3.6003694993552427`*^9, 
  3.600369530247723*^9}},
 CellLabel->"In[451]:=",
 CellID->285376564,ExpressionUUID->"9dc29f56-319b-48c3-b902-4d6732849b95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"IType", "[", 
     RowBox[{"{", "}"}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283658803*^9, 3.9379996906363087`*^9, 3.938000407817503*^9, {
   3.938000490063107*^9, 3.9380005221162987`*^9}, {3.938000592260262*^9, 
   3.938000608137285*^9}},
 CellLabel->"Out[451]=",
 CellID->298439439,ExpressionUUID->"97ffa624-ac39-4910-b6f2-33775067077d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "nicom", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600369055812757*^9, 3.600369065752925*^9}, {
  3.600369435477359*^9, 3.600369445196739*^9}, {3.6003694993552427`*^9, 
  3.600369535658576*^9}},
 CellLabel->"In[452]:=",
 CellID->992927397,ExpressionUUID->"05447624-0264-463c-9dae-b0a153dd304d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"IType", "[", 
     RowBox[{"{", "\<\"numerical\"\>", "}"}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.9379992836713037`*^9, 3.937999690651095*^9, 3.938000407824139*^9, {
   3.9380004900697517`*^9, 3.938000522129545*^9}, {3.938000592273522*^9, 
   3.9380006081503696`*^9}},
 CellLabel->"Out[452]=",
 CellID->1497335528,ExpressionUUID->"51d56ecf-65d7-42d3-a0b4-0b2debff891a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transforming the parser results, continued", "Section",
 CellChangeTimes->{
  3.600369301759646*^9, {3.600369358807474*^9, 3.600369368116508*^9}},
 CellID->35340542,ExpressionUUID->"14b9f55f-0c71-456d-b83d-09a990ee0579"],

Cell[CellGroupData[{

Cell["\<\
Let us apply a more complicated function to the rule <integral-type>. For \
example, \
\>", "Text",
 CellChangeTimes->{{3.600369381768804*^9, 3.600369422390688*^9}, {
   3.6003695398308573`*^9, 3.600369593213416*^9}, {3.6003696389332314`*^9, 
   3.600369649317006*^9}, 3.6003886261449614`*^9},
 CellID->1263002822,ExpressionUUID->"5b07bd93-551d-4a33-8a1b-a85159e57cff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pINTEGRALTYPE", "=", "\[IndentingNewLine]", 
   RowBox[{"ParseApply", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"IType", "[", 
       RowBox[{"#", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "}"}], "\[Rule]", "\"\<Symbolic\>\""}], ",", 
          RowBox[{"_", "\[Rule]", "\"\<Numeric\>\""}]}], "}"}]}], "]"}], 
      "&"}], ",", 
     RowBox[{
      RowBox[{"ParseOption", "[", 
       RowBox[{
        RowBox[{"ParseSymbol", "[", "\"\<numerical\>\"", "]"}], 
        "\[CirclePlus]", 
        RowBox[{"ParseSymbol", "[", "\"\<symbolic\>\"", "]"}]}], "]"}], 
      "\[LeftTriangle]", 
      RowBox[{"ParseSymbol", "[", "\"\<integral\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pINTEGRALREQUEST", "=", 
   RowBox[{"pCOMPUTE", "\[RightTriangle]", "pINTEGRALTYPE"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.600369599955202*^9, 3.600369665498616*^9}},
 CellLabel->"In[453]:=",
 CellID->1560062406,ExpressionUUID->"e7263a49-314d-44a3-9ad6-63b5902cb60a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["With the new definition we get", "Text",
 CellChangeTimes->{{3.600369685274076*^9, 3.6003696924504128`*^9}, 
   3.60038862881007*^9},
 CellID->1341011419,ExpressionUUID->"3a836036-0923-497b-aac9-047edc171284"],

Cell[CellGroupData[{

Cell[BoxData[{"icom", "\[IndentingNewLine]", 
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "icom", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.600369055812757*^9, 3.600369065752925*^9}, {
  3.600369435477359*^9, 3.600369445196739*^9}, {3.6003694993552427`*^9, 
  3.600369530247723*^9}, {3.600369699384453*^9, 3.600369703748424*^9}},
 CellLabel->"In[455]:=",
 CellID->538043868,ExpressionUUID->"7627ebd2-337d-4723-a04f-1d80e7f831f2"],

Cell[BoxData["\<\"what is the integral of Sin[x] over 0 1\"\>"], "Output",
 CellChangeTimes->{
  3.937999283689611*^9, 3.937999690670912*^9, 3.9380004078448677`*^9, {
   3.938000490089485*^9, 3.938000522148321*^9}, {3.938000592292715*^9, 
   3.9380006081682367`*^9}},
 CellLabel->"Out[455]=",
 CellID->1504843550,ExpressionUUID->"00348147-a15c-449e-a22e-ab44e9e8611c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"IType", "[", "\<\"Symbolic\"\>", "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.937999283689611*^9, 3.937999690670912*^9, 3.9380004078448677`*^9, {
   3.938000490089485*^9, 3.938000522148321*^9}, {3.938000592292715*^9, 
   3.938000608168878*^9}},
 CellLabel->"Out[456]=",
 CellID->990634131,ExpressionUUID->"9a222661-e594-4e20-a554-302b24c0b138"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"nicom", "\[IndentingNewLine]", 
 RowBox[{"pINTEGRALREQUEST", "[", 
  RowBox[{"StringSplit", "[", "nicom", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.600369055812757*^9, 3.600369065752925*^9}, {
  3.600369435477359*^9, 3.600369445196739*^9}, {3.6003694993552427`*^9, 
  3.600369535658576*^9}, {3.600369706222678*^9, 3.600369709452601*^9}},
 CellLabel->"In[457]:=",
 CellID->1997135606,ExpressionUUID->"7a62b35d-58c3-4bb3-be21-76a64816703d"],

Cell[BoxData["\<\"what is the numerical integral of Sin[x] over 0 1\"\>"], \
"Output",
 CellChangeTimes->{
  3.937999283702663*^9, 3.937999690686246*^9, 3.9380004078574266`*^9, {
   3.938000490101708*^9, 3.938000522161522*^9}, {3.9380005923058043`*^9, 
   3.93800060818227*^9}},
 CellLabel->"Out[457]=",
 CellID->147124526,ExpressionUUID->"05ffd1bb-0b79-411d-ae4a-7da6f5cc4101"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"of\"\>", ",", "\<\"Sin[x]\"\>", ",", "\<\"over\"\>", 
      ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], ",", 
    RowBox[{"IType", "[", "\<\"Numeric\"\>", "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.937999283702663*^9, 3.937999690686246*^9, 3.9380004078574266`*^9, {
   3.938000490101708*^9, 3.938000522161522*^9}, {3.9380005923058043`*^9, 
   3.938000608182914*^9}},
 CellLabel->"Out[458]=",
 CellID->968230785,ExpressionUUID->"7b902446-c423-4a18-b6ea-5ca670383d37"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other basic parsers", "Section",
 CellChangeTimes->{{3.600370114850247*^9, 3.6003701211253023`*^9}},
 CellID->688727432,ExpressionUUID->"890e3e13-ef03-4fdb-b464-337ea060912e"],

Cell[TextData[{
 "The only basic parse we used so far is ",
 StyleBox["ParseSymbol", "Program"],
 ". A very often used one is ",
 StyleBox["ParsePredicate", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.600370125118493*^9, 3.600370166743945*^9}, {
  3.6003701973246613`*^9, 3.60037023012792*^9}},
 CellID->505092294,ExpressionUUID->"d73fc01e-6782-433f-9436-766ce8bfd3c1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Suppose we want to parse a number string. Using ",
 StyleBox["ParsePredicate", "Program"],
 " we can define the number parser as"
}], "Text",
 CellChangeTimes->{{3.600370237766732*^9, 3.600370314695212*^9}, 
   3.600388631566189*^9},
 CellID->83328667,ExpressionUUID->"eb6c8849-844f-4a7f-b915-3d7c00a0e365"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pNumber", "=", 
  RowBox[{"ParsePredicate", "[", 
   RowBox[{
    RowBox[{"StringMatchQ", "[", 
     RowBox[{"#", ",", "NumberString"}], "]"}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.600370315803813*^9, 3.6003703344183273`*^9}, 
   3.600370410235282*^9, 3.6003705005267687`*^9},
 CellLabel->"In[459]:=",
 CellID->345568425,ExpressionUUID->"3b72493f-24c8-4c0d-af79-4ca137297820"],

Cell[BoxData[
 RowBox[{"ParsePredicate", "[", 
  RowBox[{
   RowBox[{"StringMatchQ", "[", 
    RowBox[{"#1", ",", "NumberString"}], "]"}], "&"}], "]"}]], "Output",
 CellChangeTimes->{
  3.937999283713373*^9, 3.937999690702036*^9, 3.9380004078710318`*^9, {
   3.938000490115814*^9, 3.9380005221694098`*^9}, {3.938000592312688*^9, 
   3.938000608198935*^9}},
 CellLabel->"Out[459]=",
 CellID->1571210176,ExpressionUUID->"65b07de1-cceb-4491-a24f-ac877a5dd364"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ParserPredicate", "Program"],
 " takes a function as an argument and the parsing is successful it that \
functions returns ",
 StyleBox["True", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.6003703495834208`*^9, 3.6003703950543327`*^9}},
 CellID->1172737487,ExpressionUUID->"41873b00-0d7e-4bea-8e36-f338f8606c83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pNumber", "[", 
  RowBox[{"{", "\"\<3432\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.600370412732192*^9, 3.600370426511909*^9}},
 CellLabel->"In[460]:=",
 CellID->594031843,ExpressionUUID->"f342e01a-9928-45cb-afa6-249024dabbd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\<\"3432\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9379992837207727`*^9, 3.937999690715001*^9, 3.9380004078820353`*^9, {
   3.938000490128706*^9, 3.938000522180306*^9}, {3.938000592325429*^9, 
   3.9380006082052298`*^9}},
 CellLabel->"Out[460]=",
 CellID->1870504520,ExpressionUUID->"b8c8c629-37b0-45c5-915e-0c1fd2e39858"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Note that the parsed result is a string", "Text",
 CellChangeTimes->{{3.600370432945298*^9, 3.600370445972658*^9}},
 CellID->241710398,ExpressionUUID->"6fce1736-3b43-4827-8ee3-4275af6a433f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.6003704484109163`*^9, 3.6003704506823378`*^9}},
 CellLabel->"In[461]:=",
 CellID->1535082709,ExpressionUUID->"31cf916c-135b-41b6-b970-3760309f9851"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"List", "[", 
     RowBox[{
      RowBox[{"List", "[", "]"}], ",", "\"\<3432\>\""}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.937999283733881*^9, 3.93799969072289*^9, 3.938000407895021*^9, {
   3.93800049013575*^9, 3.9380005221925783`*^9}, {3.938000592337975*^9, 
   3.9380006082183437`*^9}},
 CellLabel->"Out[461]//FullForm=",
 CellID->556359207,ExpressionUUID->"2c86f6bb-596d-48b7-984d-4f519affb553"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "We can use ",
 StyleBox["ParseApply", "Program"],
 " to convert to a number in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6003704549295797`*^9, 3.6003704819395113`*^9}},
 CellID->266555105,ExpressionUUID->"5b42ab80-1f8d-4eaf-a77e-3e1e2832b098"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pNumber", "=", 
  RowBox[{"ToExpression", "\[CircleDot]", 
   RowBox[{"ParsePredicate", "[", 
    RowBox[{
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"#", ",", "NumberString"}], "]"}], "&"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600370490986313*^9, 3.600370497229987*^9}},
 CellLabel->"In[462]:=",
 CellID->340762093,ExpressionUUID->"0f393f3c-fe9f-4928-b84c-7eb06a0dcbf6"],

Cell[BoxData[
 RowBox[{"ParseApply", "[", 
  RowBox[{"ToExpression", ",", 
   RowBox[{"ParsePredicate", "[", 
    RowBox[{
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"#1", ",", "NumberString"}], "]"}], "&"}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.9379992837422733`*^9, 3.937999690738392*^9, 3.938000407907041*^9, {
   3.938000490149385*^9, 3.9380005221992826`*^9}, {3.938000592349637*^9, 
   3.938000608232523*^9}},
 CellLabel->"Out[462]=",
 CellID->585393011,ExpressionUUID->"7e96d71e-7815-4f05-b304-d5d5be195c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pNumber", "[", 
  RowBox[{"{", "\"\<3432\>\"", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.600370514703246*^9, 3.600370530665654*^9}},
 CellLabel->"In[463]:=",
 CellID->1997094149,ExpressionUUID->"485fd6cb-a872-40d4-95f9-83e3e4306e9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "3432"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283754331*^9, 3.937999690751727*^9, 3.938000407920392*^9, {
   3.938000490162532*^9, 3.938000522211281*^9}, {3.9380005923625317`*^9, 
   3.9380006082391853`*^9}},
 CellLabel->"Out[463]=",
 CellID->1077748970,ExpressionUUID->"8bd8b7ae-e10c-460d-b056-26ff7440559c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"List", "[", 
     RowBox[{
      RowBox[{"List", "[", "]"}], ",", "3432"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.937999283754331*^9, 3.937999690751727*^9, 3.938000407920392*^9, {
   3.938000490162532*^9, 3.938000522211281*^9}, {3.9380005923625317`*^9, 
   3.938000608239794*^9}},
 CellLabel->"Out[464]//FullForm=",
 CellID->1849859992,ExpressionUUID->"7b218eea-7403-4413-9626-3edd8e0f667c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other basic parsers, continued", "Section",
 CellChangeTimes->{{3.60037058641151*^9, 3.6003705912476597`*^9}},
 CellID->2139443280,ExpressionUUID->"0b703a86-e5cc-44a1-8865-80ded5eca5b6"],

Cell["\<\
Here is the full list of the basic parser in the package FunctionalParsers.m :\
\>", "Text",
 CellChangeTimes->{{3.600370759527916*^9, 3.60037078649179*^9}, {
   3.600370873704982*^9, 3.60037090252559*^9}, 3.600388635503873*^9},
 CellID->157021592,ExpressionUUID->"ecb3dea5-c831-49ad-9a66-8a3d82929248"],

Cell[TextData[{
 StyleBox["ParseSymbol[s]", "Program"],
 " \t\tparses a specified symbol s.\n",
 StyleBox["ParseToken[t]", "Program"],
 " \t\t\tparses the token t.\n",
 StyleBox["ParsePredicate[p]", "Program"],
 " \tparses strings that give True for the predicate p.\n",
 StyleBox["ParseEpsilon", "Program"],
 " \t\t\tparses and empty string.\n",
 StyleBox["ParseSucceed[v]", "Program"],
 " \t\tdoes not consume input and always returns v.\n",
 StyleBox["ParseFail", "Program"],
 " \t\t\t\tfails to recognize any input string."
}], "Text",
 CellChangeTimes->{{3.600370809690839*^9, 3.600370845262392*^9}, {
  3.600370918830562*^9, 3.6003709421488934`*^9}, {3.773390853621682*^9, 
  3.77339086256568*^9}},
 CellID->1951978228,ExpressionUUID->"e81ac0f9-5fb9-4cd9-91ee-3d740bc17790"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other parser combinators", "Section",
 CellChangeTimes->{{3.600369885651165*^9, 3.6003698954585667`*^9}},
 CellID->1937886424,ExpressionUUID->"5c346db9-db6f-4e62-92a2-0ee3185ce545"],

Cell[TextData[{
 "Here is a couple of more useful parser combinators: ",
 StyleBox["ParseMany", "Program"],
 " and ",
 StyleBox["ParseListOf", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.6003698997712517`*^9, 3.600369939391048*^9}, 
   3.600388642736977*^9, {3.600419702889673*^9, 3.600419703448461*^9}},
 CellID->1320137766,ExpressionUUID->"e78f6273-e3f0-43ec-8741-dcf45fe20730"],

Cell[CellGroupData[{

Cell[TextData[{
 "Suppose we want to parse sequence of numbers. It is easy to define a parser \
doing that using ",
 StyleBox["ParseMany", "Program"],
 " and ",
 StyleBox["ParsePredicate", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.600369951440633*^9, 3.60037003825683*^9}, {
  3.600370964595318*^9, 3.6003710253995447`*^9}},
 CellID->1901876005,ExpressionUUID->"3de1c4dc-bff1-4054-9145-031ee0cc14d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pNumber", "=", 
   RowBox[{"ToExpression", "\[CircleDot]", 
    RowBox[{"ParsePredicate", "[", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"#", ",", "NumberString"}], "]"}], "&"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pNumberSeq", "=", 
   RowBox[{"ParseMany", "[", "pNumber", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.600370015292102*^9, 3.6003700215986137`*^9}, {
  3.6003709824703417`*^9, 3.6003709836516933`*^9}, {3.600371029181212*^9, 
  3.600371084016992*^9}, {3.600371131904517*^9, 3.6003711350880537`*^9}, {
  3.600371227891573*^9, 3.6003712565127153`*^9}},
 CellLabel->"In[465]:=",
 CellID->1683414087,ExpressionUUID->"3fb2b826-b240-4e50-9982-0d6d26354d5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseJust", "[", "pNumberSeq", "]"}], "[", 
  RowBox[{"StringSplit", "[", "\"\<234 232 -532\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600371086932014*^9, 3.600371109957432*^9}, {
  3.600371309725834*^9, 3.600371332063897*^9}},
 CellLabel->"In[467]:=",
 CellID->43510984,ExpressionUUID->"4ad26312-975f-4438-b738-0d397242dd48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"234", ",", "232", ",", 
      RowBox[{"-", "532"}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.937999283775443*^9, 3.9379996907710447`*^9, 3.9380004079406147`*^9, {
   3.9380004901822433`*^9, 3.9380005222306633`*^9}, {3.938000592382195*^9, 
   3.9380006082585497`*^9}},
 CellLabel->"Out[467]=",
 CellID->1476127925,ExpressionUUID->"7d313ffb-5eed-4219-9b46-ef89d0a51885"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We parsed with the parser transformer ",
 StyleBox["ParseJust", "Program"],
 " in order to get results that parsed out the sequence completely."
}], "Text",
 CellChangeTimes->{{3.6003713398307543`*^9, 3.600371383018262*^9}, {
  3.600371545743738*^9, 3.600371560893632*^9}},
 CellID->1144668108,ExpressionUUID->"2761793d-8f08-411f-b66d-a6e8b58de25d"],

Cell[CellGroupData[{

Cell[TextData[{
 "If we want to parse a sequence of numbers separated by, say, semicolon we \
can use ",
 StyleBox["ParseListOf", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6003711753323936`*^9, 3.600371223468194*^9}, {
  3.6003712616180162`*^9, 3.600371262484047*^9}, {3.600371482989375*^9, 
  3.600371501212447*^9}},
 CellID->1278381330,ExpressionUUID->"972425b5-5b03-4a56-ac42-b39b1ff99878"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pNumberList", "=", 
   RowBox[{"ParseListOf", "[", 
    RowBox[{"pNumber", ",", 
     RowBox[{"ParseSymbol", "[", "\"\<;\>\"", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.600371265328855*^9, 3.600371284887711*^9}, {
  3.600371472908605*^9, 3.6003714733914824`*^9}},
 CellLabel->"In[468]:=",
 CellID->181125075,ExpressionUUID->"f2da808d-5069-4462-bd5d-03af673be9d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseJust", "[", "pNumberList", "]"}], "[", 
  RowBox[{"StringSplit", "[", "\"\<234 ; 232 ; -532\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6003712934585133`*^9, 3.600371327410911*^9}, {
  3.6003714104359837`*^9, 3.600371429033629*^9}, {3.600371462469372*^9, 
  3.60037147108668*^9}},
 CellLabel->"In[469]:=",
 CellID->1184807726,ExpressionUUID->"6d1608de-7e51-481e-8d60-6a55a137e453"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"234", ",", "232", ",", 
      RowBox[{"-", "532"}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9379992837940702`*^9, 3.937999690787627*^9, 3.9380004079598827`*^9, {
   3.938000490201417*^9, 3.938000522247918*^9}, {3.9380005924032297`*^9, 
   3.938000608277686*^9}},
 CellLabel->"Out[469]=",
 CellID->1550945331,ExpressionUUID->"bc43b486-527f-4430-84da-f8f4d5419468"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Two other related parsers are ",
 StyleBox["ParseChainLeft", "Program"],
 " and ",
 StyleBox["ParseChainRight", "Program"],
 " :"
}], "Text",
 CellChangeTimes->{{3.600371803673555*^9, 3.6003718263521757`*^9}},
 CellID->1595075898,ExpressionUUID->"aa972bf3-8a68-4222-99af-382b0071e6e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseJust", "[", 
   RowBox[{"ParseChainLeft", "[", 
    RowBox[{"pNumber", ",", 
     RowBox[{"ParseSymbol", "[", "\"\<+\>\"", "]"}]}], "]"}], "]"}], "[", 
  RowBox[{"StringSplit", "[", "\"\<234 + 232 + -532\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6003712934585133`*^9, 3.600371327410911*^9}, {
  3.6003714104359837`*^9, 3.600371429033629*^9}, {3.600371462469372*^9, 
  3.60037147108668*^9}, {3.600371671424253*^9, 3.600371775638422*^9}},
 CellLabel->"In[470]:=",
 CellID->1402252185,ExpressionUUID->"70a54770-51bc-4a33-848e-5cf8c92fbc81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"\<\"+\"\>", "[", 
     RowBox[{
      RowBox[{"\<\"+\"\>", "[", 
       RowBox[{"234", ",", "232"}], "]"}], ",", 
      RowBox[{"-", "532"}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9379992838061438`*^9, 3.937999690797674*^9, 3.938000407972649*^9, {
   3.938000490214662*^9, 3.938000522259671*^9}, {3.938000592415484*^9, 
   3.9380006082838783`*^9}},
 CellLabel->"Out[470]=",
 CellID->581670831,ExpressionUUID->"08f485e5-ffe9-4e30-91d3-349bb0dc983a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseJust", "[", 
   RowBox[{"ParseChainRight", "[", 
    RowBox[{"pNumber", ",", 
     RowBox[{"ParseSymbol", "[", "\"\<+\>\"", "]"}]}], "]"}], "]"}], "[", 
  RowBox[{"StringSplit", "[", "\"\<234 + 232 + -532\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6003712934585133`*^9, 3.600371327410911*^9}, {
  3.6003714104359837`*^9, 3.600371429033629*^9}, {3.600371462469372*^9, 
  3.60037147108668*^9}, {3.600371671424253*^9, 3.600371787845571*^9}},
 CellLabel->"In[471]:=",
 CellID->1166931117,ExpressionUUID->"2a52c0d9-d069-4488-ad26-7021f1d75d0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"\<\"+\"\>", "[", 
     RowBox[{"234", ",", 
      RowBox[{"\<\"+\"\>", "[", 
       RowBox[{"232", ",", 
        RowBox[{"-", "532"}]}], "]"}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9379992838170137`*^9, 3.9379996908041687`*^9, 3.938000407985084*^9, {
   3.93800049022265*^9, 3.938000522266398*^9}, {3.938000592428788*^9, 
   3.93800060828999*^9}},
 CellLabel->"Out[471]=",
 CellID->796095473,ExpressionUUID->"d0f4ebd2-1b67-484f-bff4-eeb2a10ea560"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The rest of the integration grammar rules", "Section",
 CellChangeTimes->{{3.600371863749732*^9, 3.600371881904685*^9}},
 CellID->1790619015,ExpressionUUID->"587259cb-1233-4cab-b5a6-04909ab04f70"],

Cell["\<\
At this point it should be clear how we proceed with defining the rest of the \
grammar rules of the integration request language.\
\>", "Text",
 CellChangeTimes->{{3.600371886068413*^9, 3.600371921989623*^9}, {
  3.600416594847438*^9, 3.600416605631691*^9}},
 CellID->97956047,ExpressionUUID->"f935f33a-8b70-4b11-8095-14ff35595fcd"],

Cell[TextData[{
 "In order to keep things simple the integration function is assumed to be a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression with no spaces within it."
}], "Text",
 CellChangeTimes->{{3.60037194236313*^9, 3.600371964062503*^9}, {
  3.600375424595788*^9, 3.600375492297122*^9}},
 CellID->1374808327,ExpressionUUID->"f0b68923-d3db-4b4a-bc3e-1a384481c020"],

Cell[CellGroupData[{

Cell["For example", "Text",
 CellChangeTimes->{{3.6004197560668488`*^9, 3.600419758259617*^9}},
 CellID->1626993816,ExpressionUUID->"46464dd6-4503-4996-8e5b-e27cbe6f4434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseJust", "[", "pCOMMAND", "]"}], "[", 
  RowBox[{
  "StringSplit", "[", "\"\<integrate Sin[x]Log[x]/3 over 0 1\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6003755399324303`*^9, 3.600375561219273*^9}, {
  3.6003756198074408`*^9, 3.6003756485063477`*^9}, {3.60037581026315*^9, 
  3.600375814187916*^9}, {3.600375899598235*^9, 3.600375906045224*^9}},
 CellLabel->"In[472]:=",
 CellID->975788261,ExpressionUUID->"29661a90-69e3-45aa-a8e2-dedcef69d5cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"ICommand", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IType", "[", 
          RowBox[{"{", "}"}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IFunc", "[", "\<\"Sin[x]Log[x]/3\"\>", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IRange", "[", 
            RowBox[{"{", 
             RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.937999283823675*^9, 3.9379996908143*^9, 3.9380004079976187`*^9, {
   3.9380004902342463`*^9, 3.9380005222890577`*^9}, {3.938000576946308*^9, 
   3.9380006083011637`*^9}},
 CellLabel->"Out[472]=",
 CellID->1153493901,ExpressionUUID->"c38f0e58-f857-42b2-9455-879b56fc4d3c"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The type of the integration is going to be implied to be symbolic if ",
 StyleBox["IType", "Program"],
 " has an empty list."
}], "Text",
 CellChangeTimes->{{3.600376034319146*^9, 3.600376034823656*^9}, {
  3.600376065988049*^9, 3.600376082401012*^9}, {3.6003790903528767`*^9, 
  3.600379129252571*^9}, {3.6004166614027367`*^9, 3.6004166628505573`*^9}},
 CellID->1888174135,ExpressionUUID->"4e28fef7-ee6b-461b-b07d-f7e44aae113c"],

Cell[CellGroupData[{

Cell[TextData[{
 "For the grammar rules <variable> and <range> we use ",
 StyleBox["IVar", "Program"],
 " and ",
 StyleBox["IRange", "Program"],
 " respectively:"
}], "Text",
 CellChangeTimes->{{3.600379139895865*^9, 3.600379146903893*^9}, {
  3.6003793062735767`*^9, 3.6003793429601192`*^9}, {3.600379821013163*^9, 
  3.6003798342875137`*^9}, {3.6004166692102747`*^9, 3.600416675304031*^9}},
 CellID->1176835226,ExpressionUUID->"de5d391b-ebea-4228-969d-bafad4bbf7f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParseJust", "[", "pCOMMAND", "]"}], "[", 
  RowBox[{
  "StringSplit", "[", 
   "\"\<compute the numerical integral of Log[x] of x from 0 to 10\>\"", 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6003755399324303`*^9, 3.600375561219273*^9}, {
  3.6003756198074408`*^9, 3.6003756485063477`*^9}, {3.60037581026315*^9, 
  3.600375814187916*^9}, {3.600375899598235*^9, 3.600375906045224*^9}, {
  3.6003791706125517`*^9, 3.600379175684293*^9}, {3.600379297166216*^9, 
  3.600379298658864*^9}},
 CellLabel->"In[473]:=",
 CellID->745254512,ExpressionUUID->"c22250f5-ed34-4da7-8b74-ac7c84ae8bd5"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.937999283834524*^9, 3.937999690820129*^9, 3.9380004080118237`*^9, {
   3.93800049024788*^9, 3.938000522330209*^9}, {3.938000592456417*^9, 
   3.938000608308414*^9}},
 CellLabel->"Out[473]=",
 CellID->1437112638,ExpressionUUID->"c63bf7fe-a405-4e4c-b6ef-27335ea9ec88"]
}, Open  ]]
}, Open  ]],

Cell["\<\

Next we are going to generate automatically the parsers using the EBNF \
grammar.\
\>", "Text",
 CellChangeTimes->{{3.6003798838339*^9, 3.6003799087745113`*^9}, {
  3.6003799557773952`*^9, 3.60038002219841*^9}},
 CellID->1367953880,ExpressionUUID->"35611107-a35d-4613-9b98-4148fc58acf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parser generation", "Section",
 CellChangeTimes->{{3.600380030423523*^9, 3.600380035104829*^9}, {
  3.6003800708797703`*^9, 3.6003800834441566`*^9}},
 CellID->240936378,ExpressionUUID->"e5233383-3209-43f3-acb6-9b63eedf6010"],

Cell[TextData[{
 "Using the EBNF of the grammar of the integration commands language we can \
automatically generate the parsers for its grammar rules using the function \
",
 StyleBox["GenerateParsersFromEBNF", "Program"],
 " provided by the package FunctionalParsers.m ."
}], "Text",
 CellChangeTimes->{{3.600380564366351*^9, 3.600380662117525*^9}},
 CellID->1411030451,ExpressionUUID->"f332acc9-968d-4898-8e7c-707adcf20c4d"],

Cell["\<\
In the current version of the EBNF parser functions there is a requirement \
that all elements of the parsed EBNF forms have to be separated by space.\
\>", "Text",
 CellChangeTimes->{{3.600381539867022*^9, 3.600381588082705*^9}, 
   3.600381753348218*^9, {3.600419806537148*^9, 3.600419806803813*^9}},
 CellID->526876136,ExpressionUUID->"56f0b5d1-7386-4477-a990-578bfa6c3091"],

Cell[TextData[{
 "The EBNF grammar string can have the pick-left and pick-right combinators (",
 StyleBox["<&", "Program"],
 " and ",
 StyleBox["&>", "Program"],
 " respectively) and a ",
 StyleBox["ParseApply", "Program"],
 " specification can be given within the form \[OpenCurlyDoubleQuote]<rhs> = \
parsers <@ transformer\[CloseCurlyDoubleQuote] . The application of functions \
can be done over the whole definition of an EBNF non-terminal symbol, not \
over the individual parts."
}], "Text",
 CellChangeTimes->{{3.600381634939148*^9, 3.600381747069219*^9}, {
  3.60038179011397*^9, 3.6003818249083977`*^9}, {3.6004167043548098`*^9, 
  3.600416713780517*^9}, {3.600419838918563*^9, 3.6004198427930117`*^9}, {
  3.6004198751274853`*^9, 3.600419875485805*^9}, {3.7734551799857473`*^9, 
  3.77345519912261*^9}},
 CellID->1132141171,ExpressionUUID->"a34c4913-c766-4ad7-bc1f-a645d28a5704"],

Cell[CellGroupData[{

Cell["Here is the grammar of the integration language: ", "Text",
 CellChangeTimes->{{3.6003806682500963`*^9, 3.600380684561825*^9}, 
   3.6003807398565063`*^9, {3.6003815141357803`*^9, 3.600381520153488*^9}, {
   3.600381841808303*^9, 3.600381851683443*^9}, {3.600416724392367*^9, 
   3.600416725075479*^9}},
 CellID->1191548577,ExpressionUUID->"60462e25-e2a9-4782-8bbd-397421e5b5cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "integrationGrammar", "=", 
   "\"\<\n<command> = <command1> | <command2> <@ ICommand ;\n<command1> = ( \
<integral-request> | <integrate> ) , <function> , ( <var-range-spec> | \
<range> ) ;\n<command2> = ( <integral-request> | <integrate> ) , <function> ;\
\n<request-preamble> = 'compute' | 'what' , 'is' ;\n<compute> = \
<request-preamble> , [ 'the' ] ;\n<integral-type> = [ 'numerical' | \
'symbolic' ] <& 'integral' <@ IType ;\n<integrate> = [ 'symbolically' | \
'numerically' ] <& 'integrate' | 'integrate' &> ( 'numerically' | \
'symbolically' ) <@ IType ;\n<function> = '_String' <@ IFunc ;\n<var> = \
'_IdentifierString' <@ IVar ;\n<range-named> =  'R' | 'R+' | 'R-' <@ IRange ;\
\n<range-interval> = [ 'from' ] &> '_WordString' , [ 'to' | 'and' ] &> \
'_WordString' <@ IRange ;\n<range> = ( [ 'in' | 'over' ] , [ 'the' ] , [ \
'interval' ] ) &> ( <range-interval> | <range-named> ) ;\n<var-range-spec> = \
( 'for' | 'of' ) &> <var> , <range> ;\n<integral-request> = <compute> &> \
<integral-type> <& 'of' ;\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{
  3.937999789340056*^9, {3.9379999865329247`*^9, 3.937999990132477*^9}},
 CellLabel->"In[474]:=",
 CellID->631773482,ExpressionUUID->"ef12e721-ecf1-4908-8cae-f4de922f477b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parser generation, continued 1", "Section",
 CellChangeTimes->{{3.773455656106702*^9, 3.773455657196329*^9}},
 CellID->609278065,ExpressionUUID->"979abf09-a4c5-421d-b6f2-c32aaff0f7ba"],

Cell[CellGroupData[{

Cell["\<\
It is beneficial to examine the random sentences with the grammar we have \
developed.\
\>", "Text",
 CellChangeTimes->{{3.773455660594119*^9, 3.773455699126058*^9}},
 CellID->934409559,ExpressionUUID->"ee6228ca-a246-4505-b4bc-79afa2ec9cc8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "4467", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{"GrammarRandomSentences", "[", 
     RowBox[{
      RowBox[{"GrammarNormalize", "[", "integrationGrammar", "]"}], ",", 
      "30"}], "]"}], "]"}], ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7734557014260387`*^9, 3.773455729602807*^9}, {
  3.773455766765204*^9, 3.773455773388733*^9}},
 CellLabel->"In[475]:=",
 CellID->73547602,ExpressionUUID->"8ea98715-20b6-43e0-adad-729976bdb936"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"compute integral of jdt\"\>", "\<\"integrate numerically msg9nj for \
zcm in the interval from qc24 and 4xg\"\>"},
    {"\<\"compute symbolic integral of o2efqi\"\>", "\<\"integrate oqj\"\>"},
    {"\<\"compute symbolic integral of wnls\"\>", "\<\"integrate pqxhbe9\"\>"},
    {"\<\"compute the integral of dkvqrl39\"\>", "\<\"integrate symbolically \
djwk4g5yap\"\>"},
    {"\<\"compute the integral of tgcbpj87\"\>", "\<\"integrate yro38 \
interval yu6 wpu93v\"\>"},
    {"\<\"compute the symbolic integral of ab4\"\>", "\<\"numerically \
integrate 9wzl8k for vcabgelxs the from ol914yj nxvep\"\>"},
    {"\<\"compute the symbolic integral of az1oplftx4 for krmcpbiyt R+\"\>", \
"\<\"numerically integrate se0b\"\>"},
    {"\<\"compute the symbolic integral of v5ky71\"\>", "\<\"symbolically \
integrate 2abw9tod8\"\>"},
    {"\<\"integrate 9ugasr for nzaowceiyj over the interval from eymj \
dszm\"\>", "\<\"symbolically integrate xtk7v over from lc0 58uqtk12\"\>"},
    {"\<\"integrate b61j of okrjyhgt in the R-\"\>", "\<\"what is integral of \
cd0uor7lq the from hwxd31ysze to k7c1y\"\>"},
    {"\<\"integrate ly2t8ecn4\"\>", "\<\"what is integral of fc6\"\>"},
    {"\<\"integrate numerically bay20s8t\"\>", "\<\"what is integral of fgnc7 \
interval R+\"\>"},
    {"\<\"integrate numerically doaqlry\"\>", "\<\"what is integral of \
srqbdx6pne the R\"\>"},
    {"\<\"integrate numerically fkxyinq over the mcojq2nk5 hufca1q\"\>", \
"\<\"what is the integral of la7\"\>"},
    {"\<\"integrate numerically jhyzb7x43 ctj smy231\"\>", "\<\"what is the \
integral of n3zju8 of ztqjckxl the interval R-\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.937999283943636*^9, 3.937999447510655*^9, {3.937999531384212*^9, 
   3.9379995592756968`*^9}, 3.937999690936864*^9, 3.937999796638186*^9, 
   3.937999918964216*^9, 3.938000408123225*^9, {3.938000490357917*^9, 
   3.938000522441351*^9}, {3.938000592566758*^9, 3.938000608413397*^9}},
 CellLabel->"Out[476]=",
 CellID->803529057,ExpressionUUID->"277b55e0-4a86-4cc6-ac07-9ae4d953d0d2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parser generation, continued 2", "Section",
 CellChangeTimes->{{3.6003818658823833`*^9, 3.60038187375642*^9}, {
  3.6003819743006067`*^9, 3.600381975076501*^9}, {3.7734549970256233`*^9, 
  3.773454997434696*^9}, {3.7734556251112623`*^9, 3.7734556253921137`*^9}},
 CellID->1311449789,ExpressionUUID->"b97bbc7b-8fe1-4e9e-88ca-bef941b22b18"],

Cell[CellGroupData[{

Cell["Let us see how the parsed tree of the grammar looks like:", "Text",
 CellChangeTimes->{{3.6003818771660547`*^9, 3.6003819104317207`*^9}, {
  3.600381947119031*^9, 3.600381952585915*^9}},
 CellID->1911934562,ExpressionUUID->"87c12c9f-e15f-4f6b-b0d0-f5ca0ddb5a3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", 
   RowBox[{"ToTokens", "[", "integrationGrammar", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"ParseEBNF", "[", "code", "]"}], ",", "0.7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.60038191330127*^9, 3.600381925991593*^9}, {
  3.6004227063841953`*^9, 3.6004227109270144`*^9}, {3.937999606680222*^9, 
  3.937999608661647*^9}, {3.938000545794147*^9, 3.938000547864312*^9}},
 CellLabel->"In[500]:=",
 CellID->1086373473,ExpressionUUID->"b2faaa53-b6c9-4297-9bf7-c71ccdc9990d"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"EBNF", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<command>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"EBNFNonTerminal", "[", "\<\"<command1>\"\>", "]"}], 
                 "]"}], ",", 
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"EBNFNonTerminal", "[", "\<\"<command2>\"\>", "]"}], 
                 "]"}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"ICommand\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<command1>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\",\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFAlternatives", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<integral-request>\"\>", 
                    "]"}], "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"\<\",\"\>", "[", 
                    RowBox[{
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<integrate>\"\>", "]"}], ",", 
                    RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"\<\"&>\"\>", "[", 
                    RowBox[{
                    RowBox[{"EBNFTerminal", "[", "\<\"'and'\"\>", "]"}], ",", 
                    
                    RowBox[{"EBNFNonTerminal", "[", "\<\"<plot>\"\>", "]"}]}],
                     "]"}], "]"}], "}"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    "}"}], "]"}], ",", 
                  RowBox[{"\<\",\"\>", "[", 
                   RowBox[{
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<function>\"\>", "]"}], ",", 
                    
                    RowBox[{"\<\",\"\>", "[", 
                    RowBox[{
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<var-range-spec>\"\>", "]"}],
                     "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFNonTerminal", "[", "\<\"<range>\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"\<\"&>\"\>", "[", 
                    RowBox[{
                    RowBox[{"EBNFTerminal", "[", "\<\"'and'\"\>", "]"}], ",", 
                    
                    RowBox[{"EBNFNonTerminal", "[", "\<\"<plot>\"\>", "]"}]}],
                     "]"}], "]"}], "}"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
                 "]"}], "]"}], "}"}], "]"}]}], "}"}], ",", "\<\";\"\>"}], 
          "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<command2>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\",\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFAlternatives", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<integral-request>\"\>", 
                    "]"}], "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<integrate>\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], ",", 
                  RowBox[{
                  "EBNFNonTerminal", "[", "\<\"<function>\"\>", "]"}]}], 
                 "]"}], "]"}], "}"}], "]"}]}], "}"}], ",", "\<\";\"\>"}], 
          "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<request-preamble>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"EBNFTerminal", "[", "\<\"'compute'\"\>", "]"}], 
                 "]"}], ",", 
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"\<\",\"\>", "[", 
                  RowBox[{
                   RowBox[{"EBNFTerminal", "[", "\<\"'what'\"\>", "]"}], ",", 
                   
                   RowBox[{"EBNFTerminal", "[", "\<\"'is'\"\>", "]"}]}], 
                  "]"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", "\<\";\"\>"}], 
          "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<compute>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\",\"\>", "[", 
                 RowBox[{
                  RowBox[{
                  "EBNFNonTerminal", "[", "\<\"<request-preamble>\"\>", "]"}],
                   ",", 
                  RowBox[{"EBNFOption", "[", 
                   RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'the'\"\>", "]"}], 
                    "]"}], "}"}], "]"}], "]"}]}], "]"}], "]"}], "}"}], 
              "]"}]}], "}"}], ",", "\<\";\"\>"}], "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<integral-type>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\"<&\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFOption", "[", 
                   RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'numerical'\"\>", "]"}],
                     "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'symbolic'\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], "]"}], ",", 
                  RowBox[{"EBNFTerminal", "[", "\<\"'integral'\"\>", "]"}]}], 
                 "]"}], "]"}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IType\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<integrate>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"\<\"<&\"\>", "[", 
                  RowBox[{
                   RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFTerminal", "[", "\<\"'symbolically'\"\>", "]"}], 
                    "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFTerminal", "[", "\<\"'numerically'\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], "]"}], ",", 
                   RowBox[{
                   "EBNFTerminal", "[", "\<\"'integrate'\"\>", "]"}]}], "]"}],
                  "]"}], ",", 
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"\<\"&>\"\>", "[", 
                  RowBox[{
                   RowBox[{"EBNFTerminal", "[", "\<\"'integrate'\"\>", "]"}], 
                   ",", 
                   RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFTerminal", "[", "\<\"'numerically'\"\>", "]"}], 
                    "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFTerminal", "[", "\<\"'symbolically'\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}]}], "]"}], "]"}]}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IType\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<function>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"EBNFTerminal", "[", "\<\"'_String'\"\>", "]"}], 
                "]"}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IFunc\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<var>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{
                "EBNFTerminal", "[", "\<\"'_IdentifierString'\"\>", "]"}], 
                "]"}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IVar\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<range-named>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"EBNFTerminal", "[", "\<\"'R'\"\>", "]"}], "]"}], 
                ",", 
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"EBNFTerminal", "[", "\<\"'R+'\"\>", "]"}], "]"}], 
                ",", 
                RowBox[{"EBNFSequence", "[", 
                 RowBox[{"EBNFTerminal", "[", "\<\"'R-'\"\>", "]"}], "]"}]}], 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IRange\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<range-interval>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\"&>\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFOption", "[", 
                   RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'from'\"\>", "]"}], 
                    "]"}], "}"}], "]"}], "]"}], ",", 
                  RowBox[{"\<\",\"\>", "[", 
                   RowBox[{
                    RowBox[{
                    "EBNFTerminal", "[", "\<\"'_WordString'\"\>", "]"}], ",", 
                    
                    RowBox[{"\<\"&>\"\>", "[", 
                    RowBox[{
                    RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'to'\"\>", "]"}], "]"}],
                     ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'and'\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "EBNFTerminal", "[", "\<\"'_WordString'\"\>", "]"}]}], 
                    "]"}]}], "]"}]}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IRange\"\>"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<range>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\"&>\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFAlternatives", "[", 
                   RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"\<\",\"\>", "[", 
                    RowBox[{
                    RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'in'\"\>", "]"}], "]"}],
                     ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'over'\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{"\<\",\"\>", "[", 
                    RowBox[{
                    RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'the'\"\>", "]"}], 
                    "]"}], "}"}], "]"}], "]"}], ",", 
                    RowBox[{"EBNFOption", "[", 
                    RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'interval'\"\>", "]"}], 
                    "]"}], "}"}], "]"}], "]"}]}], "]"}]}], "]"}], "]"}], 
                    "}"}], "]"}], ",", 
                  RowBox[{"EBNFAlternatives", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<range-interval>\"\>", "]"}],
                     "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<range-named>\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}]}], "]"}], "]"}], "}"}], "]"}]}], 
            "}"}], ",", "\<\";\"\>"}], "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<var-range-spec>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\"&>\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFAlternatives", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'for'\"\>", "]"}], 
                    "]"}], ",", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'of'\"\>", "]"}], 
                    "]"}]}], "}"}], "]"}], ",", 
                  RowBox[{"\<\",\"\>", "[", 
                   RowBox[{
                    RowBox[{"EBNFNonTerminal", "[", "\<\"<var>\"\>", "]"}], 
                    ",", 
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<range>\"\>", "]"}]}], 
                   "]"}]}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
           ",", "\<\";\"\>"}], "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<integral-request>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\"&>\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFNonTerminal", "[", "\<\"<compute>\"\>", "]"}], 
                  ",", 
                  RowBox[{"\<\"<&\"\>", "[", 
                   RowBox[{
                    RowBox[{
                    "EBNFNonTerminal", "[", "\<\"<integral-type>\"\>", "]"}], 
                    ",", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'of'\"\>", "]"}]}], 
                   "]"}]}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
           ",", "\<\";\"\>"}], "}"}], "]"}], ",", 
        RowBox[{"EBNFRule", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"<plot>\"\>", ",", 
             RowBox[{"EBNFAlternatives", "[", 
              RowBox[{"{", 
               RowBox[{"EBNFSequence", "[", 
                RowBox[{"\<\"<&\"\>", "[", 
                 RowBox[{
                  RowBox[{"EBNFTerminal", "[", "\<\"'plot'\"\>", "]"}], ",", 
                  RowBox[{"EBNFOption", "[", 
                   RowBox[{"EBNFAlternatives", "[", 
                    RowBox[{"{", 
                    RowBox[{"EBNFSequence", "[", 
                    RowBox[{"EBNFTerminal", "[", "\<\"'it'\"\>", "]"}], "]"}],
                     "}"}], "]"}], "]"}]}], "]"}], "]"}], "}"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"<@\"\>", ",", "\<\"IPlot\"\>"}], "}"}]}], "}"}], 
         "]"}]}], "}"}], "]"}]}], "}"}], "}"}],
  StripOnInput->False,
  Magnification->0.7 Inherited]], "Output",
 CellChangeTimes->{
  3.93799928398914*^9, 3.9379994493347816`*^9, 3.937999562177907*^9, 
   3.937999609145261*^9, 3.937999653742097*^9, 3.937999691007778*^9, 
   3.937999799380422*^9, 3.937999920922838*^9, {3.938000408191703*^9, 
   3.938000434567914*^9}, {3.938000490425721*^9, 3.9380005484722652`*^9}, {
   3.938000592617526*^9, 3.938000608451758*^9}, 3.938000663196966*^9},
 CellLabel->"Out[501]=",
 CellID->1994351636,ExpressionUUID->"cecb1a7f-7126-49d0-8012-c8d5a1543db8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parser generation, continued 3", "Section",
 CellChangeTimes->{{3.600381960743677*^9, 3.600381968460422*^9}, 
   3.7734549999044523`*^9, {3.773455628575818*^9, 3.773455628935996*^9}},
 CellID->772993917,ExpressionUUID->"d78b68e5-e7f8-4695-be51-b06bc5697f7b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let us generate the grammars with ",
 StyleBox["GenerateParsersFromEBNF", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.600381990196321*^9, 3.600382020199346*^9}, {
  3.600382137317939*^9, 3.600382153750249*^9}},
 CellID->1580182316,ExpressionUUID->"b59e096c-1b8b-499a-ab43-47214197e610"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", 
   RowBox[{"ToTokens", "[", "integrationGrammar", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"GenerateParsersFromEBNF", "[", "code", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LeafCount", "[", "res", "]"}]}], "Input",
 CellChangeTimes->{{3.93800000269867*^9, 3.9380000071799107`*^9}, {
  3.938000599406143*^9, 3.9380006040108833`*^9}},
 CellLabel->"In[502]:=",
 CellID->193922563,ExpressionUUID->"4b60d3d3-fdec-4521-9bba-cad902917380"],

Cell[BoxData["969"], "Output",
 CellChangeTimes->{
  3.937999284037991*^9, 3.937999691057856*^9, 3.937999802363603*^9, {
   3.937999912436002*^9, 3.937999923654488*^9}, 3.938000007696712*^9, 
   3.938000408265172*^9, 3.938000443877164*^9, {3.938000490497897*^9, 
   3.9380005510837803`*^9}, {3.938000592689583*^9, 3.938000608496194*^9}, 
   3.9380006655570793`*^9},
 CellLabel->"Out[504]=",
 CellID->1052206058,ExpressionUUID->"5b2edf94-ca0f-4799-8845-569d3f400d53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "and tabulate the parsed results of a set of commands with ",
 StyleBox["ParsingTestTable", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.600382141521676*^9, 3.6003821515805893`*^9}, {
  3.600416759266801*^9, 3.600416759410738*^9}},
 CellID->1523823842,ExpressionUUID->"b87a4744-220a-4a8b-b705-faed520c547f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"commands", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<compute the symbolic integral of Sin[x]*x^2 over 0 to 10\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<what is the numerical integral of t^4+Log[t] for t in the interval \
0 to 10\>\"", ",", "\[IndentingNewLine]", 
     "\"\<integrate Sin[x]*x^2 over a b\>\"", ",", "\[IndentingNewLine]", 
     "\"\<integrate Exp[-x] over R+\>\""}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParsingTestTable", "[", 
   RowBox[{
    RowBox[{"ParseShortest", "[", "pCOMMAND", "]"}], ",", "commands", ",", 
    RowBox[{"\"\<Layout\>\"", "\[Rule]", "\"\<Vertical\>\""}]}], "]"}], "//", 
  
  RowBox[{
   RowBox[{"Magnify", "[", 
    RowBox[{"#", ",", "0.8"}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.600382043130453*^9, 3.6003821220064983`*^9}, 
   3.6004228419398127`*^9},
 CellLabel->"In[505]:=",
 CellID->17338372,ExpressionUUID->"09bd73f6-7dba-4c18-837b-81048e3a8f04"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      StyleBox["1",
       StripOnInput->False,
       LineColor->RGBColor[
         Rational[2, 3], 0, 0],
       FrontFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       BackFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       GraphicsColor->RGBColor[
         Rational[2, 3], 0, 0],
       FontFamily->"Times",
       FontSize->16,
       FontColor->RGBColor[
         Rational[2, 3], 0, 0]], 
      StyleBox["\<\"command:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[
        0.5]], "\<\"compute the symbolic integral of Sin[x]*x^2 over 0 to \
10\"\>"},
     {"\<\"\"\>", 
      StyleBox["\<\"parsed:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"ICommand", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IType", "[", "\<\"symbolic\"\>", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IFunc", "[", "\<\"Sin[x]*x^2\"\>", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"IRange", "[", 
              RowBox[{"{", 
               RowBox[{"\<\"0\"\>", ",", "\<\"10\"\>"}], "}"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]},
     {"\<\"\"\>", 
      StyleBox["\<\"residual:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"{", "}"}]},
     {
      StyleBox["2",
       StripOnInput->False,
       LineColor->RGBColor[
         Rational[2, 3], 0, 0],
       FrontFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       BackFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       GraphicsColor->RGBColor[
         Rational[2, 3], 0, 0],
       FontFamily->"Times",
       FontSize->16,
       FontColor->RGBColor[
         Rational[2, 3], 0, 0]], 
      StyleBox["\<\"command:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[
        0.5]], "\<\"what is the numerical integral of t^4+Log[t] for t in the \
interval 0 to 10\"\>"},
     {"\<\"\"\>", 
      StyleBox["\<\"parsed:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"ICommand", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IType", "[", "\<\"numerical\"\>", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IFunc", "[", "\<\"t^4+Log[t]\"\>", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"IVar", "[", "\<\"t\"\>", "]"}], ",", 
               RowBox[{"IRange", "[", 
                RowBox[{"{", 
                 RowBox[{"\<\"0\"\>", ",", "\<\"10\"\>"}], "}"}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]},
     {"\<\"\"\>", 
      StyleBox["\<\"residual:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"{", "}"}]},
     {
      StyleBox["3",
       StripOnInput->False,
       LineColor->RGBColor[
         Rational[2, 3], 0, 0],
       FrontFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       BackFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       GraphicsColor->RGBColor[
         Rational[2, 3], 0, 0],
       FontFamily->"Times",
       FontSize->16,
       FontColor->RGBColor[
         Rational[2, 3], 0, 0]], 
      StyleBox["\<\"command:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], "\<\"integrate Sin[x]*x^2 over a b\"\>"},
     {"\<\"\"\>", 
      StyleBox["\<\"parsed:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"ICommand", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IType", "[", 
            RowBox[{"{", "}"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IFunc", "[", "\<\"Sin[x]*x^2\"\>", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"IRange", "[", 
              RowBox[{"{", 
               RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]},
     {"\<\"\"\>", 
      StyleBox["\<\"residual:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"{", "}"}]},
     {
      StyleBox["4",
       StripOnInput->False,
       LineColor->RGBColor[
         Rational[2, 3], 0, 0],
       FrontFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       BackFaceColor->RGBColor[
         Rational[2, 3], 0, 0],
       GraphicsColor->RGBColor[
         Rational[2, 3], 0, 0],
       FontFamily->"Times",
       FontSize->16,
       FontColor->RGBColor[
         Rational[2, 3], 0, 0]], 
      StyleBox["\<\"command:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], "\<\"integrate Exp[-x] over R+\"\>"},
     {"\<\"\"\>", 
      StyleBox["\<\"parsed:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"ICommand", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IType", "[", 
            RowBox[{"{", "}"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IFunc", "[", "\<\"Exp[-x]\"\>", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"IRange", "[", "\<\"R+\"\>", "]"}], ",", 
             RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]},
     {"\<\"\"\>", 
      StyleBox["\<\"residual:\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0.5],
       FrontFaceColor->GrayLevel[0.5],
       BackFaceColor->GrayLevel[0.5],
       GraphicsColor->GrayLevel[0.5],
       FontColor->GrayLevel[0.5]], 
      RowBox[{"{", "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Right, Right, Left}},
    GridBoxDividers->{
     "Columns" -> {True, True, False, True}, 
      "Rows" -> {
       True, False, False, True, False, False, True, False, False, True, 
        False, False, True, False, False, True, False, False, True, False, 
        False, True, False, False, True, False, False, True, False, False, 
        True, False, False, True, False, False, True}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0.75}}}],
   "Grid"],
  StripOnInput->False,
  Magnification->0.8 Inherited]], "Output",
 CellChangeTimes->{
  3.937999284175047*^9, 3.937999326433856*^9, 3.937999691190301*^9, 
   3.937999804217433*^9, 3.938000010005065*^9, 3.938000408402849*^9, 
   3.93800044798818*^9, {3.9380004905447807`*^9, 3.938000552124914*^9}, {
   3.938000592738126*^9, 3.938000608533073*^9}, {3.938000639016934*^9, 
   3.938000667321542*^9}},
 CellLabel->"Out[506]=",
 CellID->1010725675,ExpressionUUID->"5c9aa3c4-50f6-4578-907b-80e7c06124fa"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpretation", "Section",
 CellChangeTimes->{{3.600382171729528*^9, 3.600382175552236*^9}},
 CellID->1495725859,ExpressionUUID->"5361a1e9-9ba8-4729-887a-7d54b55c4c2b"],

Cell["\<\
After we have generated the parsers of the integration requests grammar we \
have to write an interpreter of the parsed results.\
\>", "Text",
 CellChangeTimes->{{3.600382178523058*^9, 3.600382234975601*^9}},
 CellID->220940431,ExpressionUUID->"08c1c169-bde5-4a85-8be4-ad1c2df49462"],

Cell[TextData[{
 "Because of the way the parsing results are structured we can just write a \
definition for the function ",
 StyleBox["ICommand", "Program"],
 " and the integrals are going to be computed during the parsing with ",
 StyleBox["pCOMMAND", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.6003822370006227`*^9, 3.600382333583124*^9}, {
  3.600419938861315*^9, 3.600419941737715*^9}},
 CellID->346598154,ExpressionUUID->"7f9de90a-0821-471f-8554-f711884f9b5d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Instead, we are going to write a function ",
 StyleBox["ICommandInterpreter", "Program"],
 " and use another function, ",
 StyleBox["InterpretWithContext", "Program"],
 " (also provided by the package FunctionalParsers.m) to trigger the \
computation of the integrals."
}], "Text",
 CellChangeTimes->{{3.600382342076758*^9, 3.600382456546826*^9}, {
  3.600419964241535*^9, 3.600419966853138*^9}},
 CellID->1299523614,ExpressionUUID->"f410e8b9-25b4-4ae3-bfc0-a070ae544469"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ICommandInterpreter", "[", "parsed_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"op", ",", "func", ",", "var", ",", "range"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"op", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"parsed", ",", 
          RowBox[{
           RowBox[{"IType", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
          "\[Infinity]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"op", "=", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"op", ",", "\"\<numerical\>\""}], "]"}], "||", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"op", ",", "\"\<numerically\>\""}], "]"}]}], ",", 
         "NIntegrate", ",", "\[IndentingNewLine]", "True", ",", "Integrate"}],
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"func", "=", 
       RowBox[{"ToExpression", "@", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"parsed", ",", 
            RowBox[{
             RowBox[{"IFunc", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
            "\[Infinity]"}], "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"parsed", ",", 
          RowBox[{
           RowBox[{"IVar", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
          "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "var", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"var", "=", 
         RowBox[{"ToExpression", "@", 
          RowBox[{
          "var", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"var", "=", 
         RowBox[{"ToExpression", "@", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{"func", ",", 
              RowBox[{"s_Symbol", "/;", 
               RowBox[{"!", 
                RowBox[{"NumericQ", "[", "s", "]"}]}]}], ",", "\[Infinity]"}],
              "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"range", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"parsed", ",", 
          RowBox[{
           RowBox[{"IRange", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
          "\[Infinity]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "range", "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Integrate", "[", 
         RowBox[{"func", ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"range", "=", 
          RowBox[{"Replace", "[", 
           RowBox[{"range", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\"\<R\>\"", "}"}], "->", 
               RowBox[{"{", 
                RowBox[{"\"\<-Infinity\>\"", ",", "\"\<Infinity\>\""}], 
                "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", "\"\<R+\>\"", "}"}], "->", 
               RowBox[{"{", 
                RowBox[{"\"\<0\>\"", ",", "\"\<Infinity\>\""}], "}"}]}], ",", 
              
              RowBox[{
               RowBox[{"{", "\"\<R-\>\"", "}"}], "->", 
               RowBox[{"{", 
                RowBox[{"\"\<-Infinity\>\"", ",", "\"\<0\>\""}], "}"}]}]}], 
             "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"range", "=", 
          RowBox[{"ToExpression", "@", "range"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"op", "[", 
          RowBox[{"func", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Prepend", "[", 
             RowBox[{"range", ",", "var"}], "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 FontSize->12,
 CellLabel->"In[507]:=",
 CellID->1184690508,ExpressionUUID->"069ac26e-d453-4049-9f79-fe826a70b803"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpretation, continued 1", "Section",
 CellChangeTimes->{{3.600386095132388*^9, 3.6003861074051332`*^9}, {
  3.773454935688291*^9, 3.773454936126985*^9}},
 CellID->1772476619,ExpressionUUID->"2a008c28-3f7d-43e7-a295-41be703f3160"],

Cell[CellGroupData[{

Cell[TextData[{
 "The function ",
 StyleBox["InterpretWithContext", "Program"],
 " returns the interpretation of the input together with a list of rules of \
the context data if such data is given."
}], "Text",
 CellChangeTimes->{{3.600416909297556*^9, 3.600417016341711*^9}, {
  3.600419999555974*^9, 3.600420034720282*^9}, {3.600422280252152*^9, 
  3.6004222858663597`*^9}},
 CellID->121384349,ExpressionUUID->"048e37aa-2064-4839-8164-392face0c009"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InterpretWithContext", "[", "\n", 
   RowBox[{
    RowBox[{"ParsingTestTable", "[", 
     RowBox[{
      RowBox[{"ParseShortest", "[", "pCOMMAND", "]"}], ",", "commands", ",", 
      RowBox[{"\"\<Layout\>\"", "\[Rule]", "\"\<Vertical\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ICommand", "->", "ICommandInterpreter"}], "}"}]}], "]"}], "//", 
  
  RowBox[{
   RowBox[{"Magnify", "[", 
    RowBox[{"#", ",", "0.8"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.600386120659278*^9, 3.600386152125371*^9}, 
   3.600422836754601*^9},
 CellLabel->"In[508]:=",
 CellID->2144772640,ExpressionUUID->"cee191d5-ff8f-4e75-8d5f-196bc9e05254"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["1",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"compute the symbolic integral of Sin[x]*x^2 over 0 to \
10\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"98", " ", 
          RowBox[{"Cos", "[", "10", "]"}]}], "+", 
         RowBox[{"20", " ", 
          RowBox[{"Sin", "[", "10", "]"}]}]}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["2",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"what is the numerical integral of t^4+Log[t] for t in \
the interval 0 to 10\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], "20013.02783519544`"},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["3",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"integrate Sin[x]*x^2 over a b\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["a", "2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "a", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["b", "2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "b", "]"}]}], "-", 
         RowBox[{"2", " ", "a", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}], "+", 
         RowBox[{"2", " ", "b", " ", 
          RowBox[{"Sin", "[", "b", "]"}]}]}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["4",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], "\<\"integrate Exp[-x] over R+\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], "1"},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Right, Right, Left}},
      GridBoxDividers->{
       "Columns" -> {True, True, False, True}, 
        "Rows" -> {
         True, False, False, True, False, False, True, False, False, True, 
          False, False, True, False, False, True, False, False, True, False, 
          False, True, False, False, True, False, False, True, False, False, 
          True, False, False, True, False, False, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0.75}}}],
     "Grid"], ",", 
    RowBox[{"{", "}"}]}], "}"}],
  StripOnInput->False,
  Magnification->0.8 Inherited]], "Output",
 CellChangeTimes->{
  3.937999284493877*^9, 3.937999331112122*^9, 3.9379996914397783`*^9, 
   3.9380004086656837`*^9, {3.938000490692089*^9, 3.938000522755143*^9}, {
   3.9380005928865023`*^9, 3.938000608688079*^9}, 3.93800064329383*^9, 
   3.938000673643862*^9},
 CellLabel->"Out[508]=",
 CellID->1398656075,ExpressionUUID->"c5b113a3-baf1-42ec-93b2-42aeff15ed96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpretation, continued 2", "Section",
 CellChangeTimes->{
  3.6003864294643593`*^9, {3.773454939423215*^9, 3.773454939940545*^9}},
 CellID->1680745585,ExpressionUUID->"8273b49b-1b02-40d2-9069-64a3cafb3e50"],

Cell[CellGroupData[{

Cell["Here is a different set of integration commands:", "Text",
 CellChangeTimes->{{3.600386642641972*^9, 3.600386649875276*^9}, {
   3.600386750363216*^9, 3.600386760094337*^9}, 3.600417035478099*^9},
 CellID->291154457,ExpressionUUID->"118c4929-0d4e-4493-9a42-27fadfc90aab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"commands", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<integrate symbolically Sin[x]*x^2 over a b\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<compute the numerical integral of Sin[x] for x over 0 to 10\>\"", 
     ",", "\[IndentingNewLine]", 
     "\"\<integrate symbolically x+Sqrt[x] in the interval m0 and m1\>\"", 
     ",", "\[IndentingNewLine]", 
     "\"\<compute the integral of Log[x] of x from 0 to r\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.600386497169196*^9, 3.6003864978227463`*^9}, {
  3.600386545644752*^9, 3.600386545948556*^9}, {3.600386587743946*^9, 
  3.600386588518837*^9}, {3.60038677709478*^9, 3.60038678262847*^9}, {
  3.600386814647237*^9, 3.600386835684318*^9}, {3.600387240711959*^9, 
  3.60038724091433*^9}, {3.600423052386166*^9, 3.600423052707955*^9}},
 CellLabel->"In[509]:=",
 CellID->1465210933,ExpressionUUID->"65e5554f-f95a-4b01-b5ba-1595b0042d9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let us parse the integration commands using also data values for the \
context of interpretation.\
\>", "Text",
 CellChangeTimes->{{3.600386764559329*^9, 3.600386767833037*^9}, {
  3.6003874679178123`*^9, 3.6003874879092207`*^9}, {3.600388445826885*^9, 
  3.600388471171344*^9}},
 CellID->605170782,ExpressionUUID->"b8218bbc-80a6-46ab-93d0-76b1c0bfe1b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InterpretWithContext", "[", "\n", 
   RowBox[{
    RowBox[{"ParsingTestTable", "[", 
     RowBox[{
      RowBox[{"ParseShortest", "[", "pCOMMAND", "]"}], ",", "commands", ",", 
      RowBox[{"\"\<Layout\>\"", "\[Rule]", "\"\<Vertical\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<data\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", "A"}], ",", 
         RowBox[{"b", "\[Rule]", "B"}], ",", 
         RowBox[{"m0", "\[Rule]", "12"}], ",", 
         RowBox[{"m1", "\[Rule]", "100"}]}], "}"}]}], ",", 
      RowBox[{"\"\<functions\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"ICommand", "->", "ICommandInterpreter"}], "}"}]}]}], "}"}]}],
    "]"}], "//", 
  RowBox[{
   RowBox[{"Magnify", "[", 
    RowBox[{"#", ",", "0.8"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.600386120659278*^9, 3.600386152125371*^9}, {
   3.600387251365117*^9, 3.6003872998759003`*^9}, {3.600417050412716*^9, 
   3.6004170543928423`*^9}, 3.6004228218360033`*^9},
 CellLabel->"In[511]:=",
 CellID->622780882,ExpressionUUID->"a9d6ddcb-7e0d-485f-b224-d72186442386"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["1",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"integrate symbolically Sin[x]*x^2 over a b\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["A", "2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "A", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox["B", "2"]}], ")"}], " ", 
          RowBox[{"Cos", "[", "B", "]"}]}], "-", 
         RowBox[{"2", " ", "A", " ", 
          RowBox[{"Sin", "[", "A", "]"}]}], "+", 
         RowBox[{"2", " ", "B", " ", 
          RowBox[{"Sin", "[", "B", "]"}]}]}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["2",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"compute the numerical integral of Sin[x] for x over 0 \
to 10\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], "1.8390715290764545`"},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["3",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"integrate symbolically x+Sqrt[x] in the interval m0 and \
m1\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{
         FractionBox["16784", "3"], "-", 
         RowBox[{"16", " ", 
          SqrtBox["3"]}]}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["4",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"compute the integral of Log[x] of x from 0 to r\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Log", "[", "r", "]"}]}], ")"}]}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Right, Right, Left}},
      GridBoxDividers->{
       "Columns" -> {True, True, False, True}, 
        "Rows" -> {
         True, False, False, True, False, False, True, False, False, True, 
          False, False, True, False, False, True, False, False, True, False, 
          False, True, False, False, True, False, False, True, False, False, 
          True, False, False, True, False, False, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0.75}}}],
     "Grid"], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "A"}], ",", 
      RowBox[{"b", "\[Rule]", "B"}], ",", 
      RowBox[{"m0", "\[Rule]", "12"}], ",", 
      RowBox[{"m1", "\[Rule]", "100"}]}], "}"}]}], "}"}],
  StripOnInput->False,
  Magnification->0.8 Inherited]], "Output",
 CellChangeTimes->{3.938000714410948*^9},
 CellLabel->"Out[511]=",
 CellID->358589816,ExpressionUUID->"56e942fc-698a-417e-8b59-79828a564b6a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpretation, continued 3", "Section",
 CellChangeTimes->{
  3.600422977016871*^9, {3.773454943935254*^9, 3.77345494435604*^9}},
 CellID->242988296,ExpressionUUID->"a360f2c4-0271-4d53-afcc-414c038dd615"],

Cell["To summarize the interpretation: ", "Text",
 CellChangeTimes->{{3.600416463447256*^9, 3.600416524069126*^9}, {
   3.6004170814913473`*^9, 3.600417081908312*^9}, {3.600417133219529*^9, 
   3.600417149059823*^9}, 3.600423124969966*^9},
 CellID->1537877925,ExpressionUUID->"ca626a61-bc15-4ab0-92e7-2f6e846624e7"],

Cell["1. The context is given as a list of rules", "Text",
 CellChangeTimes->{{3.600416463447256*^9, 3.600416524069126*^9}, {
  3.6004170814913473`*^9, 3.600417081908312*^9}, {3.600417133219529*^9, 
  3.600417149059823*^9}, {3.600423124969966*^9, 3.6004231281165447`*^9}, {
  3.937999196329915*^9, 3.937999198626754*^9}},
 CellID->1110183,ExpressionUUID->"e8e39e2f-6769-41d6-ad0a-4f04641ac535"],

Cell[CellGroupData[{

Cell["2. There are two forms for the context rules:", "Text",
 CellChangeTimes->{{3.600416463447256*^9, 3.600416524069126*^9}, {
  3.6004170814913473`*^9, 3.600417081908312*^9}, {3.600417133219529*^9, 
  3.600417149059823*^9}, {3.600423124969966*^9, 3.600423129600553*^9}, {
  3.937999184933868*^9, 3.9379992011720867`*^9}},
 CellID->1478976505,ExpressionUUID->"08016157-bc05-4692-864f-47dd965bb11b"],

Cell[TextData[{
 " ",
 StyleBox["{(_Symbol->_)..}", "Program"],
 " ",
 "\n",
 " ",
 StyleBox["{\"data\"->{(_Symbol->_)...}, \"functions\"->{(_Symbol->_)...}}", 
  "Program"],
 " "
}], "Program",
 InitializationCell->True,
 CellChangeTimes->{{3.600416463447256*^9, 3.600416524069126*^9}, {
   3.6004170814913473`*^9, 3.600417081908312*^9}, {3.600417133219529*^9, 
   3.600417149059823*^9}, {3.600423124969966*^9, 3.600423129600553*^9}, {
   3.937999189969966*^9, 3.937999190764265*^9}, 3.937999228124761*^9},
 CellID->1263853417,ExpressionUUID->"8f83269a-7e0c-4cdd-bae4-72af7b6c27d9"]
}, Open  ]],

Cell[TextData[{
 "3. If during the interpretation the context functions change the context \
data the result of ",
 StyleBox["InterpretWithContext", "Program"],
 " will return the changed data."
}], "Text",
 CellChangeTimes->{{3.600416463447256*^9, 3.600416524069126*^9}, {
  3.6004170814913473`*^9, 3.600417081908312*^9}, {3.600417133219529*^9, 
  3.600417149059823*^9}, {3.600423124969966*^9, 3.600423129600553*^9}, {
  3.937999204367872*^9, 3.937999204914839*^9}},
 CellID->34905510,ExpressionUUID->"e1b56430-7d26-4604-b5a0-fe21924cc90c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Section",
 CellChangeTimes->{{3.6004171855566473`*^9, 3.600417189041573*^9}},
 CellID->393870939,ExpressionUUID->"4072f890-bf00-4b35-a0e3-f4ee5050a8a7"],

Cell["\<\
The automatic generation of parsers from a grammar specification is very \
useful.\
\>", "Text",
 CellChangeTimes->{{3.600417191910466*^9, 3.60041722345649*^9}},
 CellID->1244271719,ExpressionUUID->"c7524643-2184-4310-b788-185a0a4a3ea2"],

Cell["\<\
Large grammars would demand too much book keeping of the parsers for them. \
Automatic generation of parsers definitely helps.\
\>", "Text",
 CellChangeTimes->{{3.5607343106586742`*^9, 3.560734317530455*^9}, {
  3.560734572139485*^9, 3.56073464707106*^9}},
 CellID->279026747,ExpressionUUID->"2b036913-6500-4356-a817-8bba3d89739a"],

Cell["\<\
As an example let us consider a change in the integration requests language \
to include the sub-command of plotting the integrand over the specified \
integration range. We want to be able to interpret sentences like these:\
\>", "Text",
 CellChangeTimes->{{3.560734654463028*^9, 3.560734717390337*^9}, {
  3.60041733707334*^9, 3.6004174088140593`*^9}, {3.600418622076611*^9, 
  3.6004186251565657`*^9}},
 CellID->1645735428,ExpressionUUID->"b04f5e01-9680-4873-9f82-cefbe3f5583c"],

Cell["compute the integral of Log[x] of x from 0 to 10 and plot it", "Text",
 CellChangeTimes->{{3.600418646259287*^9, 3.600418658615658*^9}},
 TextAlignment->Center,
 CellID->285965036,ExpressionUUID->"f005af67-ced0-485a-bccf-939e15373a88"],

Cell["integrate and plot Sin[x]*x^2 over 0 1", "Text",
 CellChangeTimes->{{3.600418646259287*^9, 3.600418658615658*^9}},
 TextAlignment->Center,
 CellID->145958066,ExpressionUUID->"4872154c-dcaa-4fa3-86c8-c3d57c47e871"],

Cell["\<\
We can just extend the grammar, re-generate the parsers, and provide \
interpretation for plotting clauses if they are present.\
\>", "Text",
 CellChangeTimes->{{3.600418691589652*^9, 3.600418747738187*^9}},
 CellID->690890388,ExpressionUUID->"f5b7eb94-704a-43db-bd41-f9f9d0248aa3"],

Cell[CellGroupData[{

Cell["\<\
Here is the grammar with \[OpenCurlyDoubleQuote]plot it\
\[CloseCurlyDoubleQuote] added (the new symbol <plot> is used in <command1>):\
\
\>", "Text",
 CellChangeTimes->{{3.600418750550242*^9, 3.600418781623439*^9}, {
  3.600418820650416*^9, 3.600418836749382*^9}, {3.600420155528167*^9, 
  3.6004201838746862`*^9}},
 CellID->350671787,ExpressionUUID->"947586ec-b375-4d27-a52a-8561b513db16"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "integrationGrammar", "=", 
   "\"\<\n<command> = <command1> | <command2> <@ ICommand ;\n<command1> = ( \
<integral-request> | <integrate> , [ 'and' &> <plot> ] ) , <function> , ( \
<var-range-spec> | <range> ) , [ 'and' &> <plot> ] ;\n<command2> = ( \
<integral-request> | <integrate> ) , <function> ;\n<request-preamble> = \
'compute' | 'what' , 'is' ;\n<compute> = <request-preamble> , [ 'the' ] ;\n\
<integral-type> = [ 'numerical' | 'symbolic' ] <& 'integral' <@ IType ;\n\
<integrate> = [ 'symbolically' | 'numerically' ] <& 'integrate' | 'integrate' \
&> ( 'numerically' | 'symbolically' ) <@ IType ;\n<function> = '_String' <@ \
IFunc ;\n<var> = '_IdentifierString' <@ IVar ;\n<range-named> = 'R' | 'R+' | \
'R-' <@ IRange ;\n<range-interval> = [ 'from' ] &> '_WordString' , [ 'to' | \
'and' ] &> '_WordString' <@ IRange ;\n<range> = ( [ 'in' | 'over' ] , [ 'the' \
] , [ 'interval' ] ) &> ( <range-interval> | <range-named> ) ;\n\
<var-range-spec> = ( 'for' | 'of' ) &> <var> , <range> ;\n<integral-request> \
= <compute> &> <integral-type> <& 'of' ;\n<plot> = 'plot' <& [ 'it' ] <@ \
IPlot ;\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.773390985365275*^9, 3.773391060784216*^9}, {
   3.773391236975574*^9, 3.773391247587378*^9}, {3.7733912813464937`*^9, 
   3.7733912824914722`*^9}, {3.7733913184264708`*^9, 
   3.7733913272562103`*^9}, {3.773454862520184*^9, 3.7734548662763243`*^9}, 
   3.9379993993899393`*^9},
 CellLabel->"In[488]:=",
 CellID->1045596741,ExpressionUUID->"512c28cb-7752-4a05-aa80-7ce25783897d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion, continued 1", "Section",
 CellChangeTimes->{{3.773391160786133*^9, 3.773391167524261*^9}, {
  3.7734549077883453`*^9, 3.7734549082936287`*^9}},
 CellID->485742586,ExpressionUUID->"2e1bb4ef-fa04-4cd9-aee0-d1b0e27fbb54"],

Cell[CellGroupData[{

Cell["\<\
Here are some random sentences (commands) generated with the grammar we \
defined:\
\>", "Text",
 CellChangeTimes->{{3.773391170089567*^9, 3.773391200014926*^9}},
 CellID->426014877,ExpressionUUID->"d95d06e9-30d0-4a7b-ab7c-50763364287b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2387", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Sort", "@", 
    RowBox[{"GrammarRandomSentences", "[", 
     RowBox[{
      RowBox[{"GrammarNormalize", "[", "integrationGrammar", "]"}], ",", 
      "30"}], "]"}]}], ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7733912032245207`*^9, 3.7733912716449137`*^9}, {
  3.7733913576772337`*^9, 3.773391432522521*^9}, {3.937977446957635*^9, 
  3.937977449671729*^9}},
 CellLabel->"In[489]:=",
 CellID->321558641,ExpressionUUID->"94677649-3a78-43a8-8f90-f9fc8957b21b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"compute integral of 6f3jw5ki R\"\>", "\<\"integrate symbolically \
xjpzauw\"\>"},
    {"\<\"compute integral of 75qu\"\>", "\<\"integrate symbolically \
xriqu0b5a the from ajp45c to xkc0ri8 and plot\"\>"},
    {"\<\"compute integral of iuq60t R-\"\>", "\<\"numerically integrate \
1fcrmy5qa8\"\>"},
    {"\<\"compute numerical integral of i4jpt over the interval from \
m9hs4zaqt and gvxp2u and plot\"\>", "\<\"numerically integrate and plot it \
2qf4vz the interval from 5shzcvnfd to a0r2u\"\>"},
    {"\<\"compute symbolic integral of 2xec78ho4q\"\>", "\<\"symbolically \
integrate e4j\"\>"},
    {"\<\"compute the integral of lek over the R-\"\>", "\<\"symbolically \
integrate f4ip\"\>"},
    {"\<\"compute the numerical integral of 6orw1cpb of xtjldhnp the interval \
R+ and plot it\"\>", "\<\"what is integral of egc the interval R-\"\>"},
    {"\<\"integrate 0vi8e3f7ls\"\>", "\<\"what is integral of yt7uf8gzmk\"\>"},
    {"\<\"integrate 3yokq2z4a9\"\>", "\<\"what is numerical integral of u97 \
for goewcsdux the interval 3yk9tfq7 to e3liptc0a9\"\>"},
    {"\<\"integrate 7pr1s2\"\>", "\<\"what is symbolic integral of 09dzk for \
ljcpe over interval R+\"\>"},
    {"\<\"integrate and plot it h5l0kcsdv6 over interval R-\"\>", "\<\"what \
is the integral of 1cg5ldan the R-\"\>"},
    {"\<\"integrate m27856 over the 2j0 to sw1bifu\"\>", "\<\"what is the \
integral of 7plnyx in the interval from 7p5 jafh5dsq and plot it\"\>"},
    {"\<\"integrate symbolically 01r5wni\"\>", "\<\"what is the numerical \
integral of ih49kty0o\"\>"},
    {"\<\"integrate symbolically qyt8m\"\>", "\<\"what is the symbolic \
integral of gxlwdft\"\>"},
    {"\<\"integrate symbolically sfoz3wy\"\>", "\<\"what is the symbolic \
integral of m5tcwxh of ylihpbwu the interval from qrl6 kzb9xf and plot\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.937999284956518*^9, 3.937999691847328*^9, 3.93800040909908*^9, {
   3.9380004909424973`*^9, 3.9380005229969873`*^9}, {3.9380005931439447`*^9, 
   3.938000608946578*^9}},
 CellLabel->"Out[490]=",
 CellID->326081610,ExpressionUUID->"7221cfc6-3bb9-4d92-a517-fcf661fa9b48"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion, continued 2", "Section",
 CellChangeTimes->{{3.6004188536266127`*^9, 3.6004188616563177`*^9}, {
  3.773454911444125*^9, 3.7734549117253*^9}},
 CellID->1367223435,ExpressionUUID->"46efe280-aeb6-48fa-8531-b1bb3a351d8a"],

Cell[CellGroupData[{

Cell["\<\
And here is the interpretation function that both integrates and plots:\
\>", "Text",
 CellChangeTimes->{{3.6004188647059813`*^9, 3.600418874807369*^9}, {
  3.6004189227469273`*^9, 3.600418932127857*^9}, {3.600420215704771*^9, 
  3.600420224622237*^9}},
 CellID->849249145,ExpressionUUID->"e6162d39-f2dd-4884-bd4f-6f6af7dae8dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ICommandPlotInterpreter", "::", "noplot"}], "=", 
   "\"\<Cannot plot for a symbolic integral specification.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ICommandPlotInterpreter", "[", "parsed_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"op", ",", "func", ",", "var", ",", "range"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"op", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"parsed", ",", 
          RowBox[{
           RowBox[{"IType", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
          "\[Infinity]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"op", "=", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"op", ",", "\"\<numerical\>\""}], "]"}], "||", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"op", ",", "\"\<numerically\>\""}], "]"}]}], ",", 
         "NIntegrate", ",", "\[IndentingNewLine]", "True", ",", "Integrate"}],
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"func", "=", 
       RowBox[{"ToExpression", "@", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"parsed", ",", 
            RowBox[{
             RowBox[{"IFunc", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
            "\[Infinity]"}], "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"var", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"parsed", ",", 
          RowBox[{
           RowBox[{"IVar", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
          "\[Infinity]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "var", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"var", "=", 
         RowBox[{"ToExpression", "@", 
          RowBox[{
          "var", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"var", "=", 
         RowBox[{"ToExpression", "@", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{"func", ",", 
              RowBox[{"s_Symbol", "/;", 
               RowBox[{"!", 
                RowBox[{"NumericQ", "[", "s", "]"}]}]}], ",", "\[Infinity]"}],
              "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"range", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"parsed", ",", 
          RowBox[{
           RowBox[{"IRange", "[", "s_", "]"}], "\[RuleDelayed]", "s"}], ",", 
          "\[Infinity]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "range", "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{"parsed", ",", 
              RowBox[{"IPlot", "[", "_", "]"}], ",", "\[Infinity]"}], "]"}], 
            ">", "0"}], ",", 
           RowBox[{"Message", "[", 
            RowBox[{"ICommandInterpreter", "::", "noplot"}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Integrate", "[", 
           RowBox[{"func", ",", "x"}], "]"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "ELSE", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"range", "=", 
          RowBox[{"Replace", "[", 
           RowBox[{"range", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\"\<R\>\"", "}"}], "->", 
               RowBox[{"{", 
                RowBox[{"\"\<-Infinity\>\"", ",", "\"\<Infinity\>\""}], 
                "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", "\"\<R+\>\"", "}"}], "->", 
               RowBox[{"{", 
                RowBox[{"\"\<0\>\"", ",", "\"\<Infinity\>\""}], "}"}]}], ",", 
              
              RowBox[{
               RowBox[{"{", "\"\<R-\>\"", "}"}], "->", 
               RowBox[{"{", 
                RowBox[{"\"\<-Infinity\>\"", ",", "\"\<0\>\""}], "}"}]}]}], 
             "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"range", "=", 
          RowBox[{"ToExpression", "@", "range"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{"parsed", ",", 
              RowBox[{"IPlot", "[", "_", "]"}], ",", "\[Infinity]"}], "]"}], 
            ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"VectorQ", "[", 
               RowBox[{"range", ",", "NumberQ"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"ICommandPlotInterpreter", "::", "noplot"}], "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"op", "[", 
                RowBox[{"func", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{"range", ",", "var"}], "]"}], "]"}]}], "]"}], 
               "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"op", "[", 
                RowBox[{"func", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{"range", ",", "var"}], "]"}], "]"}]}], "]"}], ",", 
               
               RowBox[{"Plot", "[", 
                RowBox[{"func", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{"range", ",", "var"}], "]"}], "]"}]}], "]"}]}], 
              "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "ELSE", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"op", "[", 
             RowBox[{"func", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Prepend", "[", 
                RowBox[{"range", ",", "var"}], "]"}], "]"}]}], "]"}], "}"}]}],
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.600418014602951*^9, 3.600418064529147*^9}, 
   3.6004182562229223`*^9, 3.600418890696083*^9, 3.600423186184249*^9, {
   3.60042328733937*^9, 3.600423290678825*^9}, {3.600423485402104*^9, 
   3.600423495815551*^9}, 3.7734546550035458`*^9},
 FontSize->12,
 CellLabel->"In[512]:=",
 CellID->1154062053,ExpressionUUID->"4f02e413-a868-47b3-8bd9-bea2591b08ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion, continued 3", "Section",
 CellChangeTimes->{{3.600418940905134*^9, 3.6004189463144293`*^9}, {
  3.773454916484056*^9, 3.7734549169341793`*^9}},
 CellID->248625067,ExpressionUUID->"1aa749b9-6726-4483-8ebd-2211b468f0dd"],

Cell[CellGroupData[{

Cell["\<\
Let us try the new functionality out with several integration-and-plot \
commands:\
\>", "Text",
 CellChangeTimes->{{3.6004190181469097`*^9, 3.6004190616187553`*^9}, {
  3.600420237417488*^9, 3.600420240833037*^9}},
 CellID->1785807654,ExpressionUUID->"6da5ec2d-7d31-4104-8e78-6e201e5d14d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"commands", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<compute the integral of Log[x] of x from 0 to 10 and plot it\>\"", 
     ",", "\[IndentingNewLine]", 
     "\"\<integrate and plot Sin[x]*x^2 over 0 1\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<integrate and plot Sin[x]*x^2 over a b\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{"ParsingTestTable", "[", 
  RowBox[{
   RowBox[{"ParseShortest", "[", "pCOMMAND", "]"}], ",", "commands", ",", 
   RowBox[{"\"\<Layout\>\"", "\[Rule]", "\"\<Vertical\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.600418964980607*^9, 3.600418990202608*^9}, {
   3.600419082119523*^9, 3.600419086538089*^9}, {3.600423591345058*^9, 
   3.600423591655933*^9}, 3.77345461954984*^9},
 CellLabel->"In[514]:=",
 CellID->837790306,ExpressionUUID->"26371593-38a8-4114-bd72-44e906ea35e4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[
        Rational[2, 3], 0, 0],
      FrontFaceColor->RGBColor[
        Rational[2, 3], 0, 0],
      BackFaceColor->RGBColor[
        Rational[2, 3], 0, 0],
      GraphicsColor->RGBColor[
        Rational[2, 3], 0, 0],
      FontFamily->"Times",
      FontSize->16,
      FontColor->RGBColor[
        Rational[2, 3], 0, 0]], 
     StyleBox["\<\"command:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[
       0.5]], "\<\"compute the integral of Log[x] of x from 0 to 10 and plot \
it\"\>"},
    {"\<\"\"\>", 
     StyleBox["\<\"parsed:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     RowBox[{"ICommand", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"IType", "[", 
         RowBox[{"{", "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IFunc", "[", "\<\"Log[x]\"\>", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"IVar", "[", "\<\"x\"\>", "]"}], ",", 
              RowBox[{"IRange", "[", 
               RowBox[{"{", 
                RowBox[{"\<\"0\"\>", ",", "\<\"10\"\>"}], "}"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"IPlot", "[", "\<\"plot\"\>", "]"}]}], "}"}]}], "}"}]}], 
       "}"}], "]"}]},
    {"\<\"\"\>", 
     StyleBox["\<\"residual:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     RowBox[{"{", "}"}]},
    {
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[
        Rational[2, 3], 0, 0],
      FrontFaceColor->RGBColor[
        Rational[2, 3], 0, 0],
      BackFaceColor->RGBColor[
        Rational[2, 3], 0, 0],
      GraphicsColor->RGBColor[
        Rational[2, 3], 0, 0],
      FontFamily->"Times",
      FontSize->16,
      FontColor->RGBColor[
        Rational[2, 3], 0, 0]], 
     StyleBox["\<\"command:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[
       0.5]], "\<\"integrate and plot Sin[x]*x^2 over 0 1\"\>"},
    {"\<\"\"\>", 
     StyleBox["\<\"parsed:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     RowBox[{"ICommand", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IType", "[", 
           RowBox[{"{", "}"}], "]"}], ",", 
          RowBox[{"IPlot", "[", "\<\"plot\"\>", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IFunc", "[", "\<\"Sin[x]*x^2\"\>", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"IRange", "[", 
             RowBox[{"{", 
              RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]},
    {"\<\"\"\>", 
     StyleBox["\<\"residual:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     RowBox[{"{", "}"}]},
    {
     StyleBox["3",
      StripOnInput->False,
      LineColor->RGBColor[
        Rational[2, 3], 0, 0],
      FrontFaceColor->RGBColor[
        Rational[2, 3], 0, 0],
      BackFaceColor->RGBColor[
        Rational[2, 3], 0, 0],
      GraphicsColor->RGBColor[
        Rational[2, 3], 0, 0],
      FontFamily->"Times",
      FontSize->16,
      FontColor->RGBColor[
        Rational[2, 3], 0, 0]], 
     StyleBox["\<\"command:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[
       0.5]], "\<\"integrate and plot Sin[x]*x^2 over a b\"\>"},
    {"\<\"\"\>", 
     StyleBox["\<\"parsed:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     RowBox[{"ICommand", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IType", "[", 
           RowBox[{"{", "}"}], "]"}], ",", 
          RowBox[{"IPlot", "[", "\<\"plot\"\>", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IFunc", "[", "\<\"Sin[x]*x^2\"\>", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"IRange", "[", 
             RowBox[{"{", 
              RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], "]"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], "}"}]}], "}"}], "]"}]},
    {"\<\"\"\>", 
     StyleBox["\<\"residual:\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     RowBox[{"{", "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Right, Right, Left}},
   GridBoxDividers->{
    "Columns" -> {True, True, False, True}, 
     "Rows" -> {
      True, False, False, True, False, False, True, False, False, True, False,
        False, True, False, False, True, False, False, True, False, False, 
       True, False, False, True, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0.75}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9379992849885*^9, 3.9379996918965683`*^9, 3.9380004091567087`*^9, {
   3.9380004910088873`*^9, 3.9380005249752407`*^9}, {3.938000593199911*^9, 
   3.938000609016098*^9}, 3.938000732348731*^9},
 CellLabel->"Out[515]=",
 CellID->584423064,ExpressionUUID->"45a0e491-66f8-4907-a90a-bb03ee3abfa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InterpretWithContext", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParsingTestTable", "[", 
     RowBox[{
      RowBox[{"ParseShortest", "[", "pCOMMAND", "]"}], ",", "commands", ",", 
      RowBox[{"\"\<Layout\>\"", "\[Rule]", "\"\<Vertical\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ICommand", "->", "ICommandPlotInterpreter"}], "}"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Magnify", "[", 
    RowBox[{"#", ",", "0.8"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6004190000604677`*^9, 3.6004190079328213`*^9}, {
   3.600422787937504*^9, 3.600422796035561*^9}, {3.600423421434019*^9, 
   3.6004234218242407`*^9}, 3.600423596663082*^9},
 CellLabel->"In[516]:=",
 CellID->1838883210,ExpressionUUID->"d1ed454a-612d-47d1-9f09-60fe4d4438d8"],

Cell[BoxData[
 TemplateBox[{
  "ICommandPlotInterpreter", "noplot", 
   "\"Cannot plot for a symbolic integral specification.\"", 2, 516, 631, 
   26720109688930903500, "Local", "Global`ICommandPlotInterpreter"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.9379992853338127`*^9, 3.9379996919084044`*^9, 3.93800040917943*^9, {
   3.938000491025775*^9, 3.938000527075457*^9}, {3.9380005932202053`*^9, 
   3.938000609030559*^9}, 3.93800073457014*^9},
 CellLabel->"During evaluation of In[516]:=",
 CellID->1228207153,ExpressionUUID->"fcbc3823-e450-4670-bea9-308859660963"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["1",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"compute the integral of Log[x] of x from 0 to 10 and \
plot it\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"10", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Log", "[", "10", "]"}]}], ")"}]}], ",", 
          GraphicsBox[
           InterpretationBox[{
             TagBox[{{{}, {}, 
                TagBox[
                 {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                  2], Opacity[1.], LineBox[CompressedData["
1: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
/wc13qzo
                   "]]},
                 Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
              {
              "WolframDynamicHighlight", <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
             StyleBox[
              
              DynamicBox[(Charting`HighlightActionBox[
               "DynamicHighlight", {}, 
                Slot["HighlightElements"], 
                Slot["LayoutOptions"], 
                Slot["Meta"], 
                Charting`HighlightActionFunction[
                "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Line[CompressedData["
1:eJwVzXs81Pkex/GZH7XlsutSQprwqxTSZVfJGp9P6UYqlyxHUhTaLrq4JpVK
0SHRisGWjYiEbHSvb+Q27rllmYwaY6JpwxgZTI7zx/vxejz/eht4H3PyoRgM
Rsj0/t+1MEPjP1Zc8O6L0tCYkJERTokxP5YLLR+MQy2qZWSzX62gWcaFn9s7
5sVFyohY4ZvLs5Ya6AheLQxnyIgFe4fllag6yH4zayhMcYw0FU5SRl8bweS/
wyVFa0aJBsz2VDVrAl8V299DGKPk1yWJllEHmqD42vuI4RopiRvJlYS9bYLZ
a2c4j3pJyS8JbT7eeW/By6ht44vkEXKuxtRu1d4WOB5QmStjSUhO0eMleTda
4EZtHmU5PEyaORsUFte1QFHRg6WjFcNkkZ/bC+11rVC0s8n9nf8wqVGINGNo
tkFRzD3HsYohosXu0misbAdxXml1VdQgKSi80nXErBNo/oP47aliMqAxEGvn
1QlVgoRvezzExCjYznppYifkn+K6CVli8peV8m2BrBNM20LljlmfyXVurK97
RRfcVCpPCXg8QIIF14a2eLyHn6Y4909//UTSlWsvqm/qge1fVjduzhISa/Zp
jwjPHvCM6ZD7BQgJz9/E/GtIDyRsSj3Svl5ItJtj+uru9cBdE2PXZH4vSeDY
20arfYAT6Z3e8axecnFxw49TXR/gU5X5vDu5H4kfvE0RnxSAsqvDMcduPmFk
jD7rihGA7RmZ5qlYPuEo6vFq7gigR67QPetXPqnm+rJy2wUA0hVVHindZOmu
yQwfy17Y4OU185n7e/LpoNH9bqYQPPrPvwn+2kkOXT/zqim+DzJ72WEzdrcT
SprBJ7l9UD/Fag2c005SXasZhWV9kH51Z/aqhjZSo6dpc3WkD4L1tqolbGgj
JndzqmzdRPD67PLxVrNWIn7e0lS28BMs6Ba9FM1pJv7CZYLign6IeWFYmrqk
jvR4/jOrlNsPoqNsieZftcS5I9qsvrcf8tnmIzq6tcSiVnRKqDsALqbKTVU/
1RCFoiw1ragBULG3LYphVhNOuIF1yN7PkFMpYVXI35BSTZ2UdWpfgMls07e/
84QoGUQa8S0GgVn/55MIdixUWyWsOLtpEAIiTazYlglw2e3W2gVOg5BMOVFO
zolAxT/ZsvvwIJAvj7SczqbC+Hex37ubgxD8udJ0tkcmfOa55DRSQ8DwsFzc
6lkIdRyjZa/rhsAywLBSze45xKnVGt/eJwFLB1UN7sVq8O7aRRTqRsFbq7Mr
JqcdTlREeh8zGoeOsKZ1bgF8KDqu4qxtK4c/T0q26boJ4PbpwwMrXRn4N9vd
qamzDy6kTzqOiJmo6OOuteZtPzBaevBFmALy6nNqfwkTw5JA39BdxjPwSH3B
vlWGX6FXmvyb8suZeCtkhRV5NAh2wkNnrp+YhaOXrkQMdg/Bjt54ExZLCdti
v+y2+XcYBt54R1TnKyOH4R+txpOAmXr7Apu9quiaByGbG0dACaRePMmPmLmw
vX84Swpbvrh/M3RRQziRFnP5wih0lB1gupuqY0FCbZyewzcoiS731JeqY4Zj
3+qZP4yB74ygnoYGDcz5GOJ8uXwM9p88XaKSqonn9R26+EdlsMLPpMHeaw4K
rc1neaqOQ6OGqXLQurmYKexKyno4Ds8LLqSZKmhhhvxW6cjWCTjNNHaoe6+F
pidKHHi9E6DEC9vqXzwPGaH7eO6hkyDMNkhMD9fGsUD+Knv5JCQu1VF86qKD
h3vll15HyyE+1bfKS18XbTje/KqZ38E9cU+DikgXNYxUk++f/Q5jG7Nk6a/m
49yHih6fJ7+DQLghtCxKD9We/pFtf2wKMtir5td7LcDHFdUyrmgK8i8Fqfst
Z2H5rdC2ZGMGRrns36YgZWHfc/sj7Z4MNOfdzo2qX4jaWiITpSQGcpal5ddv
08c4nrYPVjPw3OurnG1P9ZGdfship5yB2+e7ZNUsMsAzD/MLtFcycb1/1W71
Kwb4qn7LsIcnE9P1vBfVSQ1QUbd5z75rTFz05m7Sjt2GeHJ9UIrOCybGLy8z
bn5liLETFcsURUz0lSi+5RrTGL/GlX1jDoXeRcP6V67R6DRvQNHcmsIjF5wn
7RJoPPVD0ph42kHOxe9U/qDR/97LrjtAYbQ0KC4+iUa6N+b4nPUUFqyTTSTf
pDFTFtw6bEOhrHSqPTuPRo1786Pv21IY36xytbyKxo0v5z7UdKEwNfPowctc
GuUeojTutDMDG2y21tIYpHQ98NxvFD7Sih+vbaBRfeZZ6YArhTx3zYMtbTRC
CmNNqTuFRgIdm48CGveGmxUf2kfhyuIw1h0hjasPiNIWelFoealL5iOiMZKf
HdA6bXujmw/6B2gk7zZK2PspPHlYnzU0RGN40raf1XwpDLc6L/tbMv0vikor
n/Yl1Y+tgVIayzZ/kIT6UcgpzIwZG6Px0d7RwA8HKcyIUPR7Nk7j8sLHN2/8
TmGeo8+G8Ekab1ncfmR7iMJiw8oF1t9pnF9RQuTTfiVZIpuaonFCb+xJ0WEK
/wc13qzo
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                 "HighlightElements" -> <|
                   "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                  "LayoutOptions" -> <|
                   "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{0, 10}, {-1.623796532045525, 
                    2.3025850725858823`}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {0, 0}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                  "Meta" -> <|
                   "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                "HighlightElements" -> <|
                  "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                 "LayoutOptions" -> <|
                  "PanelPlotLayout" -> <||>, 
                   "PlotRange" -> {{0, 10}, {-1.623796532045525, 
                    2.3025850725858823`}}, 
                   "Frame" -> {{False, False}, {False, False}}, 
                   "AxesOrigin" -> {0, 0}, 
                   "ImageSize" -> {360, 360/GoldenRatio}, 
                   "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                   GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                   "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                   False|>, 
                 "Meta" -> <|
                  "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                   "Function" -> Plot, "GroupHighlight" -> False|>|>],
               
               ImageSizeCache->{{
                4.503599627370496*^15, -4.503599627370496*^15}, {
                4.503599627370496*^15, -4.503599627370496*^15}}],
              Selectable->False]},
            Annotation[{{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1:eJwVzXs81Pkex/GZH7XlsutSQprwqxTSZVfJGp9P6UYqlyxHUhTaLrq4JpVK
0SHRisGWjYiEbHSvb+Q27rllmYwaY6JpwxgZTI7zx/vxejz/eht4H3PyoRgM
Rsj0/t+1MEPjP1Zc8O6L0tCYkJERTokxP5YLLR+MQy2qZWSzX62gWcaFn9s7
5sVFyohY4ZvLs5Ya6AheLQxnyIgFe4fllag6yH4zayhMcYw0FU5SRl8bweS/
wyVFa0aJBsz2VDVrAl8V299DGKPk1yWJllEHmqD42vuI4RopiRvJlYS9bYLZ
a2c4j3pJyS8JbT7eeW/By6ht44vkEXKuxtRu1d4WOB5QmStjSUhO0eMleTda
4EZtHmU5PEyaORsUFte1QFHRg6WjFcNkkZ/bC+11rVC0s8n9nf8wqVGINGNo
tkFRzD3HsYohosXu0misbAdxXml1VdQgKSi80nXErBNo/oP47aliMqAxEGvn
1QlVgoRvezzExCjYznppYifkn+K6CVli8peV8m2BrBNM20LljlmfyXVurK97
RRfcVCpPCXg8QIIF14a2eLyHn6Y4909//UTSlWsvqm/qge1fVjduzhISa/Zp
jwjPHvCM6ZD7BQgJz9/E/GtIDyRsSj3Svl5ItJtj+uru9cBdE2PXZH4vSeDY
20arfYAT6Z3e8axecnFxw49TXR/gU5X5vDu5H4kfvE0RnxSAsqvDMcduPmFk
jD7rihGA7RmZ5qlYPuEo6vFq7gigR67QPetXPqnm+rJy2wUA0hVVHindZOmu
yQwfy17Y4OU185n7e/LpoNH9bqYQPPrPvwn+2kkOXT/zqim+DzJ72WEzdrcT
SprBJ7l9UD/Fag2c005SXasZhWV9kH51Z/aqhjZSo6dpc3WkD4L1tqolbGgj
JndzqmzdRPD67PLxVrNWIn7e0lS28BMs6Ba9FM1pJv7CZYLign6IeWFYmrqk
jvR4/jOrlNsPoqNsieZftcS5I9qsvrcf8tnmIzq6tcSiVnRKqDsALqbKTVU/
1RCFoiw1ragBULG3LYphVhNOuIF1yN7PkFMpYVXI35BSTZ2UdWpfgMls07e/
84QoGUQa8S0GgVn/55MIdixUWyWsOLtpEAIiTazYlglw2e3W2gVOg5BMOVFO
zolAxT/ZsvvwIJAvj7SczqbC+Hex37ubgxD8udJ0tkcmfOa55DRSQ8DwsFzc
6lkIdRyjZa/rhsAywLBSze45xKnVGt/eJwFLB1UN7sVq8O7aRRTqRsFbq7Mr
JqcdTlREeh8zGoeOsKZ1bgF8KDqu4qxtK4c/T0q26boJ4PbpwwMrXRn4N9vd
qamzDy6kTzqOiJmo6OOuteZtPzBaevBFmALy6nNqfwkTw5JA39BdxjPwSH3B
vlWGX6FXmvyb8suZeCtkhRV5NAh2wkNnrp+YhaOXrkQMdg/Bjt54ExZLCdti
v+y2+XcYBt54R1TnKyOH4R+txpOAmXr7Apu9quiaByGbG0dACaRePMmPmLmw
vX84Swpbvrh/M3RRQziRFnP5wih0lB1gupuqY0FCbZyewzcoiS731JeqY4Zj
3+qZP4yB74ygnoYGDcz5GOJ8uXwM9p88XaKSqonn9R26+EdlsMLPpMHeaw4K
rc1neaqOQ6OGqXLQurmYKexKyno4Ds8LLqSZKmhhhvxW6cjWCTjNNHaoe6+F
pidKHHi9E6DEC9vqXzwPGaH7eO6hkyDMNkhMD9fGsUD+Knv5JCQu1VF86qKD
h3vll15HyyE+1bfKS18XbTje/KqZ38E9cU+DikgXNYxUk++f/Q5jG7Nk6a/m
49yHih6fJ7+DQLghtCxKD9We/pFtf2wKMtir5td7LcDHFdUyrmgK8i8Fqfst
Z2H5rdC2ZGMGRrns36YgZWHfc/sj7Z4MNOfdzo2qX4jaWiITpSQGcpal5ddv
08c4nrYPVjPw3OurnG1P9ZGdfship5yB2+e7ZNUsMsAzD/MLtFcycb1/1W71
Kwb4qn7LsIcnE9P1vBfVSQ1QUbd5z75rTFz05m7Sjt2GeHJ9UIrOCybGLy8z
bn5liLETFcsURUz0lSi+5RrTGL/GlX1jDoXeRcP6V67R6DRvQNHcmsIjF5wn
7RJoPPVD0ph42kHOxe9U/qDR/97LrjtAYbQ0KC4+iUa6N+b4nPUUFqyTTSTf
pDFTFtw6bEOhrHSqPTuPRo1786Pv21IY36xytbyKxo0v5z7UdKEwNfPowctc
GuUeojTutDMDG2y21tIYpHQ98NxvFD7Sih+vbaBRfeZZ6YArhTx3zYMtbTRC
CmNNqTuFRgIdm48CGveGmxUf2kfhyuIw1h0hjasPiNIWelFoealL5iOiMZKf
HdA6bXujmw/6B2gk7zZK2PspPHlYnzU0RGN40raf1XwpDLc6L/tbMv0vikor
n/Yl1Y+tgVIayzZ/kIT6UcgpzIwZG6Px0d7RwA8HKcyIUPR7Nk7j8sLHN2/8
TmGeo8+G8Ekab1ncfmR7iMJiw8oF1t9pnF9RQuTTfiVZIpuaonFCb+xJ0WEK
/wc13qzo
                   "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{0, 10}, {-1.623796532045525, 
                  2.3025850725858823`}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio},
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>, 
             "DynamicHighlight"]],
           AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
           Axes->{True, True},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           DisplayFunction->Identity,
           Frame->{{False, False}, {False, False}},
           FrameLabel->{{None, None}, {None, None}},
           FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImagePadding->All,
           
           Method->{
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}},
           PlotRange->{{0, 10}, {-1.623796532045525, 2.3025850725858823`}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}},
           Ticks->{Automatic, Automatic}]}], "}"}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["2",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"integrate and plot Sin[x]*x^2 over 0 1\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"Cos", "[", "1", "]"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", "1", "]"}]}]}], ",", 
          GraphicsBox[
           InterpretationBox[{
             TagBox[{{{}, {}, 
                TagBox[
                 {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                  2], Opacity[1.], LineBox[CompressedData["
1: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
FIITdn+iIlaAZWVzkwaaQN4N/UUq/geBs3h4
                   "]]},
                 Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
              {
              "WolframDynamicHighlight", <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
             StyleBox[
              
              DynamicBox[(Charting`HighlightActionBox[
               "DynamicHighlight", {}, 
                Slot["HighlightElements"], 
                Slot["LayoutOptions"], 
                Slot["Meta"], 
                Charting`HighlightActionFunction[
                "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Line[CompressedData["
1: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
FIITdn+iIlaAZWVzkwaaQN4N/UUq/geBs3h4
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                 "HighlightElements" -> <|
                   "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                  "LayoutOptions" -> <|
                   "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{0, 1}, {0., 0.841470939435565}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {0, 0}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                  "Meta" -> <|
                   "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                "HighlightElements" -> <|
                  "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                 "LayoutOptions" -> <|
                  "PanelPlotLayout" -> <||>, 
                   "PlotRange" -> {{0, 1}, {0., 0.841470939435565}}, 
                   "Frame" -> {{False, False}, {False, False}}, 
                   "AxesOrigin" -> {0, 0}, 
                   "ImageSize" -> {360, 360/GoldenRatio}, 
                   "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                   GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                   "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                   False|>, 
                 "Meta" -> <|
                  "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                   "Function" -> Plot, "GroupHighlight" -> False|>|>],
               
               ImageSizeCache->{{
                4.503599627370496*^15, -4.503599627370496*^15}, {
                4.503599627370496*^15, -4.503599627370496*^15}}],
              Selectable->False]},
            Annotation[{{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1: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
FIITdn+iIlaAZWVzkwaaQN4N/UUq/geBs3h4
                   "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{0, 1}, {0., 0.841470939435565}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio},
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>, 
             "DynamicHighlight"]],
           AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
           Axes->{True, True},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           DisplayFunction->Identity,
           Frame->{{False, False}, {False, False}},
           FrameLabel->{{None, None}, {None, None}},
           FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImagePadding->All,
           
           Method->{
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}},
           PlotRange->{{0, 1}, {0., 0.841470939435565}},
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}},
           Ticks->{Automatic, Automatic}]}], "}"}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]},
       {
        StyleBox["3",
         StripOnInput->False,
         LineColor->RGBColor[
           Rational[2, 3], 0, 0],
         FrontFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         BackFaceColor->RGBColor[
           Rational[2, 3], 0, 0],
         GraphicsColor->RGBColor[
           Rational[2, 3], 0, 0],
         FontFamily->"Times",
         FontSize->16,
         FontColor->RGBColor[
           Rational[2, 3], 0, 0]], 
        StyleBox["\<\"command:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[
          0.5]], "\<\"integrate and plot Sin[x]*x^2 over a b\"\>"},
       {"\<\"\"\>", 
        StyleBox["\<\"parsed:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SuperscriptBox["a", "2"]}], ")"}], " ", 
           RowBox[{"Cos", "[", "a", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SuperscriptBox["b", "2"]}], ")"}], " ", 
           RowBox[{"Cos", "[", "b", "]"}]}], "-", 
          RowBox[{"2", " ", "a", " ", 
           RowBox[{"Sin", "[", "a", "]"}]}], "+", 
          RowBox[{"2", " ", "b", " ", 
           RowBox[{"Sin", "[", "b", "]"}]}]}], "}"}]},
       {"\<\"\"\>", 
        StyleBox["\<\"residual:\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]], 
        RowBox[{"{", "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Right, Right, Left}},
      GridBoxDividers->{
       "Columns" -> {True, True, False, True}, 
        "Rows" -> {
         True, False, False, True, False, False, True, False, False, True, 
          False, False, True, False, False, True, False, False, True, False, 
          False, True, False, False, True, False, False, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0.75}}}],
     "Grid"], ",", 
    RowBox[{"{", "}"}]}], "}"}],
  StripOnInput->False,
  Magnification->0.8 Inherited]], "Output",
 CellChangeTimes->{
  3.937999285421226*^9, 3.9379996922109327`*^9, 3.938000409213854*^9, {
   3.9380004910581903`*^9, 3.9380005271075783`*^9}, {3.938000593252234*^9, 
   3.938000609062928*^9}, 3.938000734661067*^9},
 CellLabel->"Out[516]=",
 CellID->864805507,ExpressionUUID->"86f72490-d3fb-4716-aa52-a66fe29bf62c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
(We get the message \[OpenCurlyDoubleQuote]noplot\[CloseCurlyDoubleQuote] for \
the last integration request.)\
\>", "Text",
 CellChangeTimes->{{3.600419156806376*^9, 3.600419189541848*^9}},
 CellID->1672946493,ExpressionUUID->"5175d644-bac0-4565-9fd1-3d5e936eee50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.6004204101174917`*^9, 3.600420411802114*^9}},
 CellID->208317680,ExpressionUUID->"0bfdb003-a3ad-4bc7-833c-7b14f931d206"],

Cell[TextData[{
 "We defined an EBNF grammar for an integration requests language and showed \
how parsers for it can be implemented using the paclet ",
 ButtonBox["\"FunctionalParsers\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/FunctionalParsers/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/FunctionalParsers/"],
 ", [AAp2] ."
}], "Text",
 CellChangeTimes->{{3.6004204155608463`*^9, 3.600420494502054*^9}, {
  3.6004241215643578`*^9, 3.600424121571581*^9}, {3.9380010944309196`*^9, 
  3.938001138031027*^9}},
 CellID->796903150,ExpressionUUID->"0ce627a7-d12a-4260-a913-12184f93e095"],

Cell["The system of parsers of the package has", "Text",
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308863196991*^9, 3.5143088633311243`*^9}, {
   3.5589813075904627`*^9, 3.558981313607967*^9}, {3.558985296504636*^9, 
   3.558985303535286*^9}, 3.559457746870718*^9, {3.5594578250939302`*^9, 
   3.559457835879136*^9}, {3.60042059893932*^9, 3.600420602415842*^9}, 
   3.600420721668106*^9},
 CellID->1843219358,ExpressionUUID->"caf3913c-89c3-4593-9968-7834a15a126e"],

Cell["1. Tokenizer", "Text",
 CellChangeTimes->{{3.558985284006638*^9, 3.558985294209881*^9}, 
   3.559457746871208*^9, {3.559733562256054*^9, 3.559733565891528*^9}, {
   3.60042061221201*^9, 3.60042061251565*^9}},
 CellID->1536141931,ExpressionUUID->"60d7819f-cf8f-4c65-b99a-34970cca0b6f"],

Cell["2. Elementary parsers", "Text",
 CellChangeTimes->{{3.558985284006638*^9, 3.558985294209881*^9}, 
   3.559457746871208*^9, {3.559733562256054*^9, 3.559733567714819*^9}, {
   3.600420614428322*^9, 3.6004206147656717`*^9}},
 CellID->889030083,ExpressionUUID->"3762c1b8-0994-4225-a381-b9b89b9102a4"],

Cell["3. Parser combinators", "Text",
 CellChangeTimes->{{3.558985323696945*^9, 3.55898533405763*^9}, 
   3.559457746872155*^9, {3.600420619468532*^9, 3.6004206289101562`*^9}},
 CellID->1884872802,ExpressionUUID->"54b7947a-c5a8-409a-96d7-1e026f81da5b"],

Cell["4. Parser transformers", "Text",
 CellChangeTimes->{{3.558985308385613*^9, 3.558985319072714*^9}, 
   3.5594577468716908`*^9, {3.6004206171169643`*^9, 3.600420631281775*^9}},
 CellID->1525906317,ExpressionUUID->"a14838df-38be-4b40-aa8b-809249b9cbc7"],

Cell["5. Binding for infix notation", "Text",
 CellChangeTimes->{{3.558981957465146*^9, 3.55898196531634*^9}, 
   3.55945774687259*^9, {3.600420634060096*^9, 3.600420634262824*^9}},
 CellID->657757345,ExpressionUUID->"dc93b93e-beca-48aa-9c69-e925ffcacd3e"],

Cell["6. Functions for automatic parser generation", "Text",
 CellChangeTimes->{{3.600420638943329*^9, 3.600420672029025*^9}},
 CellID->1829366306,ExpressionUUID->"ae0b4a5b-485b-4b19-9dc2-6ba0a6fa5bfb"],

Cell["7. A function for interpretation with context", "Text",
 CellChangeTimes->{{3.600420675125804*^9, 3.6004207043399763`*^9}},
 CellID->636130843,ExpressionUUID->"f6cd0178-c922-4370-ba27-46986a498ffc"],

Cell["\<\
We discussed the automatic parser generation and its usefulness for grammar \
extension and bookkeeping.\
\>", "Text",
 CellChangeTimes->{{3.600420537253838*^9, 3.600420558617876*^9}, {
  3.600420804670212*^9, 3.6004208291038*^9}},
 CellID->1277483535,ExpressionUUID->"e74b55d6-bc5f-4236-ac33-2583e5f2b6ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.791416086820034*^9, 3.791416090520627*^9}},
 CellID->124270039,ExpressionUUID->"1b057cec-823d-44dd-8b08-872f7554afd2"],

Cell[CellGroupData[{

Cell["Articles", "Subsection",
 CellChangeTimes->{{3.791416163163076*^9, 3.791416167145616*^9}},
 CellID->1252440589,ExpressionUUID->"f6fd2191-32d4-472e-815b-ab29a555e60a"],

Cell[TextData[{
 "[AA1] Anton Antonov, Functional parsers for an integration requests \
language grammar, (2014), ",
 ButtonBox["MathematicaForPrediction at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 "."
}], "Text",
 CellChangeTimes->{{3.7914161600361023`*^9, 3.791416216489217*^9}, {
  3.7914166569538717`*^9, 3.7914166569547377`*^9}},
 CellID->134271429,ExpressionUUID->"bb2f5321-5498-4779-a2e4-857de76e1356"],

Cell[TextData[{
 "[Wk1] Wikipedia entry, ",
 ButtonBox["\"Parser Combinator\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Parser_combinator"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Parser_combinator"],
 "."
}], "Text",
 CellChangeTimes->{{3.938000899120129*^9, 3.938000928759218*^9}},
 CellID->901352536,ExpressionUUID->"781f1d50-49e9-429f-8fc5-8dffef1293a7"],

Cell[TextData[{
 "[Wk2] Wikipedia entry, ",
 ButtonBox["\"Extended Backus-Naur Form\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Extended_Backus\[Dash]Naur_form"], 
    None},
  ButtonNote->"https://en.wikipedia.org/wiki/Extended_Backus\[Dash]Naur_form"],
 "."
}], "Text",
 CellChangeTimes->{{3.93799908345011*^9, 3.937999140589946*^9}, {
  3.938000896799219*^9, 3.938000897560898*^9}},
 CellID->1340888906,ExpressionUUID->"73a5c74d-cab3-4326-ae8b-f3bc49986953"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packages, paclets", "Subsection",
 CellChangeTimes->{{3.7914161725119553`*^9, 3.791416174829822*^9}, {
  3.937977685952712*^9, 3.9379776993021173`*^9}},
 CellID->1842077853,ExpressionUUID->"14bc5e9c-aa4a-4e9c-8442-fb6d608587cf"],

Cell[TextData[{
 "[AAp1] Anton Antonov, ",
 ButtonBox["Functional parsers Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
FunctionalParsers.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
FunctionalParsers.m"],
 ", (2014), ",
 ButtonBox["MathematicaForPrediction at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 "."
}], "Text",
 CellChangeTimes->{{3.791416226153802*^9, 3.791416249553911*^9}, {
  3.7914165956216516`*^9, 3.791416648439178*^9}},
 CellID->1678220219,ExpressionUUID->"c2d900a4-dfa1-4b51-8a28-98aefd990fd1"],

Cell[TextData[{
 "[AAp2] Anton Antonov, ",
 ButtonBox["FunctionalParsers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/FunctionalParsers/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/PacletRepository/resources/\
AntonAntonov/FunctionalParsers/"],
 ", (2023), ",
 ButtonBox["Wolfram Language Paclet Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/PacletRepository"], None},
  ButtonNote->"https://resources.wolframcloud.com/PacletRepository"],
 "."
}], "Text",
 CellChangeTimes->{{3.791416226153802*^9, 3.791416249553911*^9}, {
  3.7914165956216516`*^9, 3.791416648439178*^9}, {3.937977707789454*^9, 
  3.9379777653511753`*^9}, {3.937977968509054*^9, 3.9379779685823717`*^9}},
 CellID->797001035,ExpressionUUID->"8ce24f5b-9241-45d2-a3ad-a3f22058e6d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->1441665217,ExpressionUUID->"4b05daae-88fb-4aff-8225-bae61f7daea8"],

Cell[TextData[ButtonBox["BookChapters",
 BaseStyle->"Link",
 ButtonData->
  "paclet:AntonAntonov/SoftwareDesignMethodsWithWLBook/guide/BookChapters"]], \
"TutorialMoreAbout",
 CellChangeTimes->{{3.937998832225264*^9, 3.9379988677209377`*^9}},
 CellID->9313018,ExpressionUUID->"dad598a5-5097-4f9a-b45a-e64f729341dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->1905070942,ExpressionUUID->"ef290b50-0f94-45a9-bda2-eabcff4aa93b"],

Cell["XXXX", "RelatedTutorials",
 CellID->1693629071,ExpressionUUID->"4e6762b7-a283-462b-af14-e7f995735811"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->2075538959,ExpressionUUID->"60b78bf4-ac15-49ee-bee7-38237e448035"],

Cell[TextData[{
 "New in: ",
 Cell["1.0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"6eeec1a0-aef4-4ff3-8e5d-32fef8f5e5c8"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"ccd815ee-0579-49ec-a596-7bdf911917a6"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "ed2811ea-4511-453f-90d1-a30c35378e98"]
}], "History",
 CellChangeTimes->{{3.937998751975626*^9, 3.937998752739229*^9}},
 CellID->2006405692,ExpressionUUID->"3fe4a42d-6e44-40f1-8980-ac262a3c103c"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1872240250,ExpressionUUID->"b8614b64-54c4-47be-9746-8acc92efdd68"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->1811485906,ExpressionUUID->"8acb6c45-46ed-46f1-9d10-979d337600bb"],

Cell["AntonAntonov/SoftwareDesignMethodsWithWLBook", "Categorization",
 CellLabel->"Paclet Name",
 CellID->767958623,ExpressionUUID->"9d9a1dd9-8858-4cc4-854a-66b7a35fccc0"],

Cell["AntonAntonov`SoftwareDesignMethodsWithWLBook`", "Categorization",
 CellLabel->"Context",
 CellID->703858291,ExpressionUUID->"84e46116-12c3-40ec-a33a-6cead4c34d21"],

Cell["\<\
AntonAntonov/SoftwareDesignMethodsWithWLBook/tutorial/\
Parsingandinterpretationofintegrationcommands\
\>", "Categorization",
 CellLabel->"URI",
 CellID->1406369161,ExpressionUUID->"07400837-c958-4717-8679-76703b756105"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1641470045,ExpressionUUID->"e53e4b28-5614-4ccc-aa09-bd3e08b1360a"],

Cell["Functional parsers", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.937998764262322*^9}},
 CellID->1612116953,ExpressionUUID->"38c5c3da-54b9-408a-a651-ad3053889865"],

Cell["Grammar", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.9379987715353947`*^9}},
 CellID->312041817,ExpressionUUID->"438b225a-8dd5-4d92-8d46-0a800bba8e24"],

Cell["Backus-Naur Form", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.937998777656048*^9}},
 CellID->1259215210,ExpressionUUID->"b0b2e7ac-947e-4f7d-8b07-7c1a76fadc21"],

Cell["BNF", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.9379987807606792`*^9}},
 CellID->330293506,ExpressionUUID->"0418c52b-afd0-44c9-9b67-3615cf0133f9"],

Cell["Integration", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.9379987849010468`*^9}},
 CellID->1067242461,ExpressionUUID->"709c7f25-d08a-4cad-8527-8e7d52a2a027"],

Cell["Numerical integration", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.937998790466157*^9}},
 CellID->689969234,ExpressionUUID->"78114e94-201d-4280-806c-c2a27f8b46c6"],

Cell["Symbolic integration", "Keywords",
 CellChangeTimes->{{3.937998757658634*^9, 3.9379987954580717`*^9}},
 CellID->1187559653,ExpressionUUID->"9efa326d-b0c9-4346-a1de-6387e4646669"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 1282},
WindowMargins->{{Automatic, 933}, {Automatic, 18}},
TaggingRules-><|"Paclet" -> "AntonAntonov/SoftwareDesignMethodsWithWLBook"|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"d459f5a6-0c56-4fbc-802a-64692a1be387"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 142, 1, 140, "Title",ExpressionUUID->"303b0810-dc4f-4d34-8590-19357c557405",
 CellID->690784117],
Cell[CellGroupData[{
Cell[743, 27, 172, 2, 55, "Section",ExpressionUUID->"27e882f8-f167-4ac3-899a-9be9fdeab2a7",
 CellID->946936669],
Cell[918, 31, 374, 6, 53, "Text",ExpressionUUID->"1979cbd3-1670-4831-ac52-3936ee4e569c",
 CellID->310894734],
Cell[1295, 39, 377, 7, 30, "Text",ExpressionUUID->"77b89314-7d31-4432-a1c4-f4fbe8292666",
 CellID->1885569095],
Cell[1675, 48, 619, 13, 53, "Text",ExpressionUUID->"8c4037f4-7b42-451a-a0e5-ddedd8f67520",
 CellID->343600886],
Cell[2297, 63, 475, 8, 53, "Text",ExpressionUUID->"26971647-249f-4144-a608-9c64806fa129",
 CellID->316564219],
Cell[CellGroupData[{
Cell[2797, 75, 168, 2, 51, "Subsection",ExpressionUUID->"c9227951-793d-4c27-8f6c-bdf9c9561b49",
 CellID->393363545],
Cell[CellGroupData[{
Cell[2990, 81, 628, 15, 49, "MathCaption",ExpressionUUID->"87cb0f98-e33f-481a-9f7f-4101e3287d16",
 CellID->902310202],
Cell[3621, 98, 297, 6, 52, "Input",ExpressionUUID->"b3f199a8-966f-4d80-9de2-441291936818",
 InitializationCell->True,
 CellID->1745533547]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3979, 111, 167, 2, 55, "Section",ExpressionUUID->"9aac1bc0-2187-4209-bbc7-b1e926df39bf",
 CellID->72155588],
Cell[4149, 115, 261, 5, 30, "Text",ExpressionUUID->"1a1646b7-4c53-48bd-8cd8-9d0d3be00a52",
 CellID->1538190608],
Cell[4413, 122, 245, 5, 30, "Text",ExpressionUUID->"27e28003-f47d-4a79-a21e-e250e1c9984e",
 CellID->961406070],
Cell[4661, 129, 182, 2, 30, "Text",ExpressionUUID->"8bd26eec-8534-4047-85d8-820df588242d",
 CellID->684858462],
Cell[4846, 133, 225, 3, 30, "Text",ExpressionUUID->"4a216f8c-6794-4c96-a87d-635958c6f35e",
 CellID->2051306561],
Cell[5074, 138, 283, 6, 30, "Text",ExpressionUUID->"b1f1836d-13a3-4b69-8c86-c98d09778f78",
 CellID->606901789],
Cell[5360, 146, 204, 3, 30, "Text",ExpressionUUID->"7b06e4ad-3aae-4225-95cb-49d4c3b1c4e8",
 CellID->1798528120],
Cell[5567, 151, 242, 3, 30, "Text",ExpressionUUID->"fc2d837e-b852-42fc-8605-d46bdffc6baa",
 CellID->2029781315]
}, Open  ]],
Cell[CellGroupData[{
Cell[5846, 159, 188, 2, 55, "Section",ExpressionUUID->"36c2a5b7-8a41-4f6f-87b3-7767b0d9bedd",
 CellID->1756828610],
Cell[6037, 163, 212, 2, 30, "Text",ExpressionUUID->"b4c24778-e72b-478a-9456-bc4b17f710c6",
 CellID->1265785667],
Cell[6252, 167, 206, 2, 30, "Text",ExpressionUUID->"573e87c5-a9d1-4d1c-b903-99104e5e2417",
 CellID->1086698087],
Cell[6461, 171, 228, 3, 30, "Text",ExpressionUUID->"c2d92700-dbb9-4668-8f8a-aecc4a953a3f",
 CellID->1933814121],
Cell[6692, 176, 222, 3, 30, "Text",ExpressionUUID->"92615290-3502-4ea6-a024-b8d3a2c1735b",
 CellID->1596417949],
Cell[6917, 181, 179, 2, 30, "Text",ExpressionUUID->"98998c84-dc6c-4939-8aeb-9fa4c32cdfb0",
 CellID->335783225],
Cell[CellGroupData[{
Cell[7121, 187, 209, 2, 30, "Text",ExpressionUUID->"bd072605-bff1-45cd-89d6-c042806c20c3",
 CellID->2069121906],
Cell[7333, 191, 286, 5, 53, "Program",ExpressionUUID->"ccbe61e5-4794-495d-8f91-4a90bf23aeec",
 CellID->1529178271]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7668, 202, 191, 2, 55, "Section",ExpressionUUID->"7987a952-977c-4e08-9a02-2d6e24a0df6e",
 CellID->1962397048],
Cell[CellGroupData[{
Cell[7884, 208, 836, 16, 239, "Text",ExpressionUUID->"a30d86ed-da80-43c7-8fe1-96e3c3c90e6d",
 CellID->953335110],
Cell[8723, 226, 179743, 2950, 524, "Output",ExpressionUUID->"8080252a-ec12-449d-85c7-b24abd5ce9e0",
 CellID->1564704013]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188515, 3182, 184, 2, 55, "Section",ExpressionUUID->"4ccdbf98-48b6-4a85-91dc-0ccc893d319a",
 CellID->995370029],
Cell[188702, 3186, 333, 7, 30, "Text",ExpressionUUID->"4aea02d8-cb65-4b8c-b6cf-c917e214952b",
 CellID->286467273],
Cell[189038, 3195, 335, 6, 30, "Text",ExpressionUUID->"5958ec38-056e-4b28-ac49-a27766e5e7b7",
 CellID->2144604384],
Cell[CellGroupData[{
Cell[189398, 3205, 232, 4, 30, "Text",ExpressionUUID->"3e4138ea-5f57-4d9d-9e01-e079dbf88cc7",
 CellID->1000350640],
Cell[189633, 3211, 1434, 27, 435, "Program",ExpressionUUID->"ef41be15-9c55-4f83-85d8-d077101ededc",
 CellID->243734117]
}, Open  ]],
Cell[191082, 3241, 210, 2, 30, "Text",ExpressionUUID->"07ee7ef3-82ae-4ad0-8d27-c01f98e50ea9",
 CellID->1187989590],
Cell[191295, 3245, 325, 6, 53, "Text",ExpressionUUID->"ce0b45c9-a262-4b2b-998f-02d2dcf4b492",
 CellID->1385572971]
}, Open  ]],
Cell[CellGroupData[{
Cell[191657, 3256, 276, 4, 55, "Section",ExpressionUUID->"c019b7aa-2c03-42d4-959d-25113e4868ac",
 CellID->12255529],
Cell[CellGroupData[{
Cell[191958, 3264, 286, 6, 30, "Text",ExpressionUUID->"51336893-31d3-45e7-b17d-272f9162a21b",
 CellID->1967729438],
Cell[192247, 3272, 265, 5, 77, "Program",ExpressionUUID->"5038e3bf-f6ec-43e1-a01d-9909edfc1ae7",
 CellID->380500666]
}, Open  ]],
Cell[192527, 3280, 422, 8, 53, "Text",ExpressionUUID->"3b3b370a-5dda-4d81-9519-441ed1f2f315",
 CellID->2015876343],
Cell[CellGroupData[{
Cell[192974, 3292, 200, 2, 30, "Text",ExpressionUUID->"e4a32aa2-8e67-4e99-b568-a692cb3d9ed6",
 CellID->2131681729],
Cell[CellGroupData[{
Cell[193199, 3298, 600, 13, 56, "Input",ExpressionUUID->"7c81abf1-7707-4c52-93b0-49dd5105ef2f",
 CellID->705136402],
Cell[193802, 3313, 1815, 52, 125, "Output",ExpressionUUID->"a011bc4a-49e1-4649-bb1a-875f80307b4e",
 CellID->1659492992]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195666, 3371, 197, 2, 30, "Text",ExpressionUUID->"f28205e6-32ed-4896-a934-41013b1b00d9",
 CellID->1412744268],
Cell[195866, 3375, 553, 11, 56, "Input",ExpressionUUID->"56a4ff16-aa5e-4303-a743-50aa45515872",
 CellID->1413711044]
}, Open  ]],
Cell[196434, 3389, 508, 10, 68, "Text",ExpressionUUID->"c2473f71-a6d1-4f5f-95d1-da208b508f0c",
 CellID->482446100],
Cell[CellGroupData[{
Cell[196967, 3403, 265, 3, 30, "Text",ExpressionUUID->"a2f86077-c34e-4576-9851-9865c1a681d5",
 CellID->1720835275],
Cell[197235, 3408, 359, 7, 32, "Input",ExpressionUUID->"8b10ef05-626f-4c1d-ae65-27db8cf07ffe",
 CellID->1916192776]
}, Open  ]],
Cell[CellGroupData[{
Cell[197631, 3420, 191, 2, 30, "Text",ExpressionUUID->"4bee5d2a-4afd-40aa-b9be-7e89c1e41129",
 CellID->1787215820],
Cell[CellGroupData[{
Cell[197847, 3426, 327, 6, 32, "Input",ExpressionUUID->"ed8fb059-4334-4547-ae06-40df1346da0d",
 CellID->882516151],
Cell[198177, 3434, 654, 16, 31, "Output",ExpressionUUID->"d2c35f4e-dd42-46a7-9be5-0524814d5ddc",
 CellID->1728592955]
}, Open  ]]
}, Open  ]],
Cell[198858, 3454, 341, 6, 53, "Text",ExpressionUUID->"2140b7ec-46e9-4ed3-870f-350274e646c5",
 CellID->1926883675]
}, Open  ]],
Cell[CellGroupData[{
Cell[199236, 3465, 548, 8, 55, "Section",ExpressionUUID->"074439a2-e476-4d81-84fa-d49813b061c2",
 CellID->1080528965],
Cell[CellGroupData[{
Cell[199809, 3477, 526, 9, 53, "Text",ExpressionUUID->"135727df-f40e-4cb7-aa70-cc42db4341c6",
 CellID->1328595723],
Cell[200338, 3488, 368, 10, 149, "Program",ExpressionUUID->"54c36667-905c-44a0-9d66-92679e5224d8",
 CellID->173354955]
}, Open  ]],
Cell[CellGroupData[{
Cell[200743, 3503, 393, 8, 65, "Text",ExpressionUUID->"ff999654-0d92-4885-8564-6467b659b4e7",
 CellID->1588903353],
Cell[201139, 3513, 266, 3, 53, "Program",ExpressionUUID->"a16dc637-9b13-4ec2-81c0-ca87433fe872",
 CellID->739503426]
}, Open  ]],
Cell[201420, 3519, 279, 7, 100, "Text",ExpressionUUID->"171adb7e-ca5a-4f5f-b4ab-6444d9acc459",
 CellID->1346215593],
Cell[201702, 3528, 578, 12, 135, "Text",ExpressionUUID->"cc30e854-a767-43f4-a329-39e795e9f763",
 CellID->2105250406],
Cell[202283, 3542, 434, 11, 56, "Text",ExpressionUUID->"76a5c61a-75ba-4a26-85d5-759b64d5b264",
 CellID->1003005670]
}, Open  ]],
Cell[CellGroupData[{
Cell[202754, 3558, 240, 4, 55, "Section",ExpressionUUID->"a4b40371-04a1-437e-a511-f9a68b6fa316",
 CellID->1917150387],
Cell[CellGroupData[{
Cell[203019, 3566, 244, 3, 30, "Text",ExpressionUUID->"8566d90e-d793-45a0-8002-e179e9609f6b",
 CellID->701914721],
Cell[CellGroupData[{
Cell[203288, 3573, 327, 6, 32, "Input",ExpressionUUID->"a2f5ebcd-4799-4048-9536-cc8fc1641f06",
 CellID->953042876],
Cell[203618, 3581, 652, 16, 31, "Output",ExpressionUUID->"5617d200-9263-4504-a38f-63a08a1234d7",
 CellID->1303018069]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204319, 3603, 294, 6, 30, "Text",ExpressionUUID->"f0dbae96-4ef0-4070-8492-84cbd9328396",
 CellID->1858577606],
Cell[204616, 3611, 266, 5, 77, "Program",ExpressionUUID->"94ac8850-92e7-491c-badd-703421d2df45",
 CellID->1964178427]
}, Open  ]],
Cell[CellGroupData[{
Cell[204919, 3621, 349, 6, 30, "Text",ExpressionUUID->"0fb5c71c-40d2-4090-b9b2-66d6c7bebae8",
 CellID->828200905],
Cell[205271, 3629, 512, 11, 32, "Input",ExpressionUUID->"6e2251b0-8547-4bc3-aac1-c5563604538e",
 CellID->1731094128]
}, Open  ]],
Cell[205798, 3643, 437, 8, 30, "Text",ExpressionUUID->"188253ee-c2ac-4836-8696-9d9d89cf082a",
 CellID->390559740],
Cell[CellGroupData[{
Cell[206260, 3655, 301, 5, 30, "Text",ExpressionUUID->"f9c1f73e-7b5b-459c-958c-d96298cbc857",
 CellID->1427524948],
Cell[CellGroupData[{
Cell[206586, 3664, 268, 5, 32, "Input",ExpressionUUID->"8d11aeae-64ba-4ea3-b843-f64c430cf8a9",
 CellID->724496752],
Cell[206857, 3671, 1150, 30, 54, "Output",ExpressionUUID->"0bfa167c-5220-41e4-8cc1-75bd0676dfbd",
 CellID->1933937224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208056, 3707, 302, 5, 30, "Text",ExpressionUUID->"9565ba1b-c964-4924-a64e-6b0ff6514917",
 CellID->384632374],
Cell[CellGroupData[{
Cell[208383, 3716, 308, 6, 32, "Input",ExpressionUUID->"ee1e31da-7b6e-40ce-95cd-5ea513f96cc3",
 CellID->590532348],
Cell[208694, 3724, 716, 17, 31, "Output",ExpressionUUID->"0f8c3482-4aef-4d32-8d9d-b05972b90a88",
 CellID->1517926423]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209471, 3748, 258, 3, 55, "Section",ExpressionUUID->"ddfcc8d0-a591-4fd7-ba4e-926a93bc6925",
 CellID->1555240049],
Cell[CellGroupData[{
Cell[209754, 3755, 251, 3, 30, "Text",ExpressionUUID->"a9d76347-4b54-4114-a7b5-8a69f4ec59ce",
 CellID->1896035906],
Cell[210008, 3760, 585, 14, 56, "Input",ExpressionUUID->"0c6a86b1-8d70-412a-bdd7-29ee2c696a0d",
 CellID->165634309]
}, Open  ]],
Cell[CellGroupData[{
Cell[210630, 3779, 189, 2, 30, "Text",ExpressionUUID->"5765e361-2380-4b61-b017-e777eaa04a66",
 CellID->677024851],
Cell[210822, 3783, 229, 4, 53, "Program",ExpressionUUID->"2267e095-eded-4140-ab17-1a4dca96f7e2",
 CellID->1388308951]
}, Open  ]],
Cell[CellGroupData[{
Cell[211088, 3792, 201, 5, 65, "Text",ExpressionUUID->"c60b7a3f-5bc6-4f94-abaf-a0c2614fca18",
 CellID->898714802],
Cell[211292, 3799, 358, 8, 32, "Input",ExpressionUUID->"333cc271-0e71-4ec6-8ab7-b6e6c7a4fb08",
 CellID->1447187863],
Cell[CellGroupData[{
Cell[211675, 3811, 196, 3, 32, "Input",ExpressionUUID->"70144814-065c-4452-a557-8e29419dc846",
 CellID->486627519],
Cell[211874, 3816, 365, 6, 31, "Output",ExpressionUUID->"1c536255-bc31-4cc5-b4d8-e888001254c0",
 CellID->1831148648]
}, Open  ]],
Cell[CellGroupData[{
Cell[212276, 3827, 255, 5, 32, "Input",ExpressionUUID->"2aef125a-8a0b-46f7-851a-08d0b970fc03",
 CellID->1130984057],
Cell[212534, 3834, 846, 23, 31, "Output",ExpressionUUID->"18bd51d3-05cf-4604-961e-40e4cf38edd7",
 CellID->527181779]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213441, 3864, 192, 2, 55, "Section",ExpressionUUID->"7468feee-a479-42e0-9a8c-9faede33e0d6",
 CellID->1071286402],
Cell[213636, 3868, 925, 15, 157, "Text",ExpressionUUID->"5a70fb67-bf62-4f92-9787-a4e0725617c6",
 CellID->607661966],
Cell[CellGroupData[{
Cell[214586, 3887, 451, 10, 56, "Text",ExpressionUUID->"e231449d-b8e0-41a1-9ce9-28f82abf4687",
 CellID->1689921077],
Cell[215040, 3899, 380, 9, 32, "Input",ExpressionUUID->"06e1d4a1-0326-4cf5-90b7-5e4a5a1c3e1d",
 CellID->2032309564],
Cell[CellGroupData[{
Cell[215445, 3912, 255, 5, 32, "Input",ExpressionUUID->"8a032a7a-e8c1-4f69-b619-2dfe4cfa5ae2",
 CellID->1299436613],
Cell[215703, 3919, 619, 16, 31, "Output",ExpressionUUID->"c8b47ef3-7a0a-4f6b-be3f-24ac2540e18b",
 CellID->1974115778]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216371, 3941, 362, 7, 30, "Text",ExpressionUUID->"b0a45af5-23e5-4256-bb97-29f03eb81b9f",
 CellID->1869948348],
Cell[CellGroupData[{
Cell[216758, 3952, 341, 7, 32, "Input",ExpressionUUID->"20dbd5ee-9585-4119-b205-20c927c27835",
 CellID->1946194638],
Cell[217102, 3961, 847, 23, 31, "Output",ExpressionUUID->"00fbc6fb-1898-4f6d-9ee5-cff05be814d0",
 CellID->341534696]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217998, 3990, 240, 3, 30, "Text",ExpressionUUID->"467fee17-c156-4631-9f92-10cdef0bd344",
 CellID->1369853409],
Cell[218241, 3995, 302, 7, 32, "Input",ExpressionUUID->"3e884a3f-9125-41ae-9c17-6e6980702024",
 CellID->2101549223]
}, Open  ]],
Cell[CellGroupData[{
Cell[218580, 4007, 212, 2, 30, "Text",ExpressionUUID->"2cfacc74-4259-4bbe-92a8-3b48463a3970",
 CellID->1074248752],
Cell[CellGroupData[{
Cell[218817, 4013, 333, 7, 32, "Input",ExpressionUUID->"d8bb447d-e692-4fa1-8305-945b88133b61",
 CellID->1003754535],
Cell[219153, 4022, 642, 16, 31, "Output",ExpressionUUID->"a2b5813d-32e6-48ef-8ae5-d09c35fd68a7",
 CellID->2097330888]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219856, 4045, 192, 2, 55, "Section",ExpressionUUID->"39331205-1967-4ad8-86d5-06817a4d455f",
 CellID->1618422560],
Cell[CellGroupData[{
Cell[220073, 4051, 436, 8, 56, "Text",ExpressionUUID->"1d259b85-c30f-4a4b-8aee-347356f4a6bc",
 CellID->800093018],
Cell[220512, 4061, 739, 18, 79, "Input",ExpressionUUID->"3f6356a7-2d96-4d11-864c-d2fee284f477",
 CellID->1768239659],
Cell[CellGroupData[{
Cell[221276, 4083, 436, 8, 56, "Input",ExpressionUUID->"1aa2b4a5-9293-4b13-836a-31a433f63064",
 CellID->1925241627],
Cell[221715, 4093, 380, 7, 31, "Output",ExpressionUUID->"1fea2ac8-754e-40a3-aced-8864de0b0655",
 CellID->1043652758],
Cell[222098, 4102, 567, 13, 31, "Output",ExpressionUUID->"1fa3547f-30b6-4d41-b110-1eb64052498a",
 CellID->25475010]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222714, 4121, 332, 7, 53, "Text",ExpressionUUID->"5ae5c926-cc94-46cf-98ea-84334ca8fb9c",
 CellID->1399915640],
Cell[CellGroupData[{
Cell[223071, 4132, 386, 7, 56, "Input",ExpressionUUID->"8b33d2a4-3635-4088-8f3b-8e92a452ed4b",
 CellID->551324948],
Cell[223460, 4141, 365, 6, 31, "Output",ExpressionUUID->"984494b8-488c-482f-a014-698d5497c2ce",
 CellID->809247317],
Cell[223828, 4149, 546, 13, 31, "Output",ExpressionUUID->"37080e4a-0daf-4bc6-821e-6d526849a35e",
 CellID->1005720368]
}, Open  ]]
}, Open  ]],
Cell[224401, 4166, 586, 10, 76, "Text",ExpressionUUID->"fcbc8813-0c7b-4260-9130-4af1fca45095",
 CellID->1873947878],
Cell[CellGroupData[{
Cell[225012, 4180, 421, 8, 53, "Text",ExpressionUUID->"5d07be76-8391-4abe-9a6f-f5e134a123fa",
 CellID->446818644],
Cell[225436, 4190, 920, 22, 126, "Input",ExpressionUUID->"51df9fb6-8512-4f39-b3e0-bcf2968c8316",
 CellID->2078119796],
Cell[CellGroupData[{
Cell[226381, 4216, 376, 7, 32, "Input",ExpressionUUID->"9dc29f56-319b-48c3-b902-4d6732849b95",
 CellID->285376564],
Cell[226760, 4225, 582, 14, 31, "Output",ExpressionUUID->"97ffa624-ac39-4910-b6f2-33775067077d",
 CellID->298439439]
}, Open  ]],
Cell[CellGroupData[{
Cell[227379, 4244, 377, 7, 32, "Input",ExpressionUUID->"05447624-0264-463c-9dae-b0a153dd304d",
 CellID->992927397],
Cell[227759, 4253, 608, 15, 31, "Output",ExpressionUUID->"51d56ecf-65d7-42d3-a0b4-0b2debff891a",
 CellID->1497335528]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228428, 4275, 226, 3, 55, "Section",ExpressionUUID->"14b9f55f-0c71-456d-b83d-09a990ee0579",
 CellID->35340542],
Cell[CellGroupData[{
Cell[228679, 4282, 379, 7, 30, "Text",ExpressionUUID->"5b07bd93-551d-4a33-8a1b-a85159e57cff",
 CellID->1263002822],
Cell[229061, 4291, 1100, 29, 150, "Input",ExpressionUUID->"e7263a49-314d-44a3-9ad6-63b5902cb60a",
 CellID->1560062406]
}, Open  ]],
Cell[CellGroupData[{
Cell[230198, 4325, 215, 3, 30, "Text",ExpressionUUID->"3a836036-0923-497b-aac9-047edc171284",
 CellID->1341011419],
Cell[CellGroupData[{
Cell[230438, 4332, 455, 7, 56, "Input",ExpressionUUID->"7627ebd2-337d-4723-a04f-1d80e7f831f2",
 CellID->538043868],
Cell[230896, 4341, 368, 6, 31, "Output",ExpressionUUID->"00348147-a15c-449e-a22e-ab44e9e8611c",
 CellID->1504843550],
Cell[231267, 4349, 576, 14, 31, "Output",ExpressionUUID->"9a222661-e594-4e20-a554-302b24c0b138",
 CellID->990634131]
}, Open  ]],
Cell[CellGroupData[{
Cell[231880, 4368, 458, 7, 56, "Input",ExpressionUUID->"7a62b35d-58c3-4bb3-be21-76a64816703d",
 CellID->1997135606],
Cell[232341, 4377, 378, 7, 31, "Output",ExpressionUUID->"05ffd1bb-0b79-411d-ae4a-7da6f5cc4101",
 CellID->147124526],
Cell[232722, 4386, 577, 14, 31, "Output",ExpressionUUID->"7b902446-c423-4a18-b6ea-5ca670383d37",
 CellID->968230785]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233360, 4407, 181, 2, 55, "Section",ExpressionUUID->"890e3e13-ef03-4fdb-b464-337ea060912e",
 CellID->688727432],
Cell[233544, 4411, 376, 9, 30, "Text",ExpressionUUID->"d73fc01e-6782-433f-9436-766ce8bfd3c1",
 CellID->505092294],
Cell[CellGroupData[{
Cell[233945, 4424, 325, 7, 30, "Text",ExpressionUUID->"eb6c8849-844f-4a7f-b915-3d7c00a0e365",
 CellID->83328667],
Cell[CellGroupData[{
Cell[234295, 4435, 411, 9, 32, "Input",ExpressionUUID->"3b72493f-24c8-4c0d-af79-4ca137297820",
 CellID->345568425],
Cell[234709, 4446, 457, 10, 31, "Output",ExpressionUUID->"65b07de1-cceb-4491-a24f-ac877a5dd364",
 CellID->1571210176]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235215, 4462, 345, 8, 56, "Text",ExpressionUUID->"41873b00-0d7e-4bea-8e36-f338f8606c83",
 CellID->1172737487],
Cell[CellGroupData[{
Cell[235585, 4474, 260, 5, 32, "Input",ExpressionUUID->"f342e01a-9928-45cb-afa6-249024dabbd4",
 CellID->594031843],
Cell[235848, 4481, 424, 10, 31, "Output",ExpressionUUID->"b8c8c629-37b0-45c5-915e-0c1fd2e39858",
 CellID->1870504520]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236321, 4497, 196, 2, 30, "Text",ExpressionUUID->"6fce1736-3b43-4827-8ee3-4275af6a433f",
 CellID->241710398],
Cell[CellGroupData[{
Cell[236542, 4503, 228, 4, 32, "Input",ExpressionUUID->"31cf916c-135b-41b6-b970-3760309f9851",
 CellID->1535082709],
Cell[236773, 4509, 582, 16, 31, "Output",ExpressionUUID->"2c86f6bb-596d-48b7-984d-4f519affb553",
 CellID->556359207]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237404, 4531, 310, 9, 30, "Text",ExpressionUUID->"5b42ab80-1f8d-4eaf-a77e-3e1e2832b098",
 CellID->266555105],
Cell[CellGroupData[{
Cell[237739, 4544, 408, 9, 32, "Input",ExpressionUUID->"0f393f3c-fe9f-4928-b84c-7eb06a0dcbf6",
 CellID->340762093],
Cell[238150, 4555, 537, 13, 31, "Output",ExpressionUUID->"7e96d71e-7815-4f05-b304-d5d5be195c90",
 CellID->585393011]
}, Open  ]],
Cell[CellGroupData[{
Cell[238724, 4573, 321, 6, 56, "Input",ExpressionUUID->"485fd6cb-a872-40d4-95f9-83e3e4306e9b",
 CellID->1997094149],
Cell[239048, 4581, 414, 10, 31, "Output",ExpressionUUID->"8bd8b7ae-e10c-460d-b056-26ff7440559c",
 CellID->1077748970],
Cell[239465, 4593, 575, 16, 31, "Output",ExpressionUUID->"7b218eea-7403-4413-9626-3edd8e0f667c",
 CellID->1849859992]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240101, 4616, 192, 2, 55, "Section",ExpressionUUID->"0b703a86-e5cc-44a1-8865-80ded5eca5b6",
 CellID->2139443280],
Cell[240296, 4620, 313, 5, 30, "Text",ExpressionUUID->"ecb3dea5-c831-49ad-9a66-8a3d82929248",
 CellID->157021592],
Cell[240612, 4627, 780, 17, 219, "Text",ExpressionUUID->"e81ac0f9-5fb9-4cd9-91ee-3d740bc17790",
 CellID->1951978228]
}, Open  ]],
Cell[CellGroupData[{
Cell[241429, 4649, 187, 2, 55, "Section",ExpressionUUID->"5c346db9-db6f-4e62-92a2-0ee3185ce545",
 CellID->1937886424],
Cell[241619, 4653, 387, 9, 30, "Text",ExpressionUUID->"e78f6273-e3f0-43ec-8741-dcf45fe20730",
 CellID->1320137766],
Cell[CellGroupData[{
Cell[242031, 4666, 409, 10, 56, "Text",ExpressionUUID->"3de1c4dc-bff1-4054-9145-031ee0cc14d1",
 CellID->1901876005],
Cell[242443, 4678, 760, 17, 56, "Input",ExpressionUUID->"3fb2b826-b240-4e50-9982-0d6d26354d5a",
 CellID->1683414087],
Cell[CellGroupData[{
Cell[243228, 4699, 370, 7, 32, "Input",ExpressionUUID->"4ad26312-975f-4438-b738-0d397242dd48",
 CellID->43510984],
Cell[243601, 4708, 506, 13, 31, "Output",ExpressionUUID->"7d313ffb-5eed-4219-9b46-ef89d0a51885",
 CellID->1476127925]
}, Open  ]]
}, Open  ]],
Cell[244134, 4725, 367, 7, 53, "Text",ExpressionUUID->"2761793d-8f08-411f-b66d-a6e8b58de25d",
 CellID->1144668108],
Cell[CellGroupData[{
Cell[244526, 4736, 402, 9, 30, "Text",ExpressionUUID->"972425b5-5b03-4a56-ac42-b39b1ff99878",
 CellID->1278381330],
Cell[244931, 4747, 416, 10, 32, "Input",ExpressionUUID->"f2da808d-5069-4462-bd5d-03af673be9d4",
 CellID->181125075],
Cell[CellGroupData[{
Cell[245372, 4761, 432, 9, 32, "Input",ExpressionUUID->"6d1608de-7e51-481e-8d60-6a55a137e453",
 CellID->1184807726],
Cell[245807, 4772, 502, 13, 31, "Output",ExpressionUUID->"bc43b486-527f-4430-84da-f8f4d5419468",
 CellID->1550945331]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246358, 4791, 303, 8, 30, "Text",ExpressionUUID->"aa972bf3-8a68-4222-99af-382b0071e6e2",
 CellID->1595075898],
Cell[CellGroupData[{
Cell[246686, 4803, 590, 12, 56, "Input",ExpressionUUID->"70a54770-51bc-4a33-848e-5cf8c92fbc81",
 CellID->1402252185],
Cell[247279, 4817, 570, 15, 31, "Output",ExpressionUUID->"08f485e5-ffe9-4e30-91d3-349bb0dc983a",
 CellID->581670831]
}, Open  ]],
Cell[CellGroupData[{
Cell[247886, 4837, 591, 12, 56, "Input",ExpressionUUID->"2a52c0d9-d069-4488-ad26-7021f1d75d0a",
 CellID->1166931117],
Cell[248480, 4851, 570, 15, 31, "Output",ExpressionUUID->"d0f4ebd2-1b67-484f-bff4-eeb2a10ea560",
 CellID->796095473]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249111, 4873, 202, 2, 55, "Section",ExpressionUUID->"587259cb-1233-4cab-b5a6-04909ab04f70",
 CellID->1790619015],
Cell[249316, 4877, 343, 6, 53, "Text",ExpressionUUID->"f935f33a-8b70-4b11-8095-14ff35595fcd",
 CellID->97956047],
Cell[249662, 4885, 387, 8, 53, "Text",ExpressionUUID->"f0b68923-d3db-4b4a-bc3e-1a384481c020",
 CellID->1374808327],
Cell[CellGroupData[{
Cell[250074, 4897, 171, 2, 30, "Text",ExpressionUUID->"46464dd6-4503-4996-8e5b-e27cbe6f4434",
 CellID->1626993816],
Cell[CellGroupData[{
Cell[250270, 4903, 496, 10, 32, "Input",ExpressionUUID->"29661a90-69e3-45aa-a8e2-dedcef69d5cb",
 CellID->975788261],
Cell[250769, 4915, 983, 28, 54, "Output",ExpressionUUID->"c38f0e58-f857-42b2-9455-879b56fc4d3c",
 CellID->1153493901]
}, Open  ]]
}, Open  ]],
Cell[251779, 4947, 447, 8, 30, "Text",ExpressionUUID->"4e28fef7-ee6b-461b-b07d-f7e44aae113c",
 CellID->1888174135],
Cell[CellGroupData[{
Cell[252251, 4959, 468, 10, 30, "Text",ExpressionUUID->"de5d391b-ebea-4228-969d-bafad4bbf7f2",
 CellID->1176835226],
Cell[CellGroupData[{
Cell[252744, 4973, 626, 13, 56, "Input",ExpressionUUID->"c22250f5-ed34-4da7-8b74-ac7c84ae8bd5",
 CellID->745254512],
Cell[253373, 4988, 336, 7, 31, "Output",ExpressionUUID->"c63bf7fe-a405-4e4c-b6ef-27335ea9ec88",
 CellID->1437112638]
}, Open  ]]
}, Open  ]],
Cell[253736, 4999, 298, 7, 65, "Text",ExpressionUUID->"35611107-a35d-4613-9b98-4148fc58acf0",
 CellID->1367953880]
}, Open  ]],
Cell[CellGroupData[{
Cell[254071, 5011, 230, 3, 55, "Section",ExpressionUUID->"e5233383-3209-43f3-acb6-9b63eedf6010",
 CellID->240936378],
Cell[254304, 5016, 427, 8, 79, "Text",ExpressionUUID->"f332acc9-968d-4898-8e7c-707adcf20c4d",
 CellID->1411030451],
Cell[254734, 5026, 387, 6, 53, "Text",ExpressionUUID->"56f0b5d1-7386-4477-a990-578bfa6c3091",
 CellID->526876136],
Cell[255124, 5034, 890, 17, 102, "Text",ExpressionUUID->"a34c4913-c766-4ad7-bc1f-a645d28a5704",
 CellID->1132141171],
Cell[CellGroupData[{
Cell[256039, 5055, 385, 5, 30, "Text",ExpressionUUID->"60462e25-e2a9-4782-8bbd-397421e5b5cd",
 CellID->1191548577],
Cell[256427, 5062, 1273, 21, 480, "Input",ExpressionUUID->"ef12e721-ecf1-4908-8cae-f4de922f477b",
 CellID->631773482]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257749, 5089, 190, 2, 55, "Section",ExpressionUUID->"979abf09-a4c5-421d-b6f2-c32aaff0f7ba",
 CellID->609278065],
Cell[CellGroupData[{
Cell[257964, 5095, 251, 5, 30, "Text",ExpressionUUID->"ee6228ca-a246-4505-b4bc-79afa2ec9cc8",
 CellID->934409559],
Cell[CellGroupData[{
Cell[258240, 5104, 571, 13, 103, "Input",ExpressionUUID->"8ea98715-20b6-43e0-adad-729976bdb936",
 CellID->73547602],
Cell[258814, 5119, 2254, 40, 507, "Output",ExpressionUUID->"277b55e0-4a86-4cc6-ac07-9ae4d953d0d2",
 CellID->803529057]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261129, 5166, 344, 4, 55, "Section",ExpressionUUID->"b97bbc7b-8fe1-4e9e-88ca-bef941b22b18",
 CellID->1311449789],
Cell[CellGroupData[{
Cell[261498, 5174, 268, 3, 30, "Text",ExpressionUUID->"87c12c9f-e15f-4f6b-b0d0-f5ca0ddb5a3f",
 CellID->1911934562],
Cell[CellGroupData[{
Cell[261791, 5181, 568, 12, 56, "Input",ExpressionUUID->"b2faaa53-b6c9-4297-9bf7-c71ccdc9990d",
 CellID->1086373473],
Cell[262362, 5195, 19070, 439, 735, "Output",ExpressionUUID->"cecb1a7f-7126-49d0-8012-c8d5a1543db8",
 CellID->1994351636]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281493, 5641, 264, 3, 55, "Section",ExpressionUUID->"d78b68e5-e7f8-4695-be51-b06bc5697f7b",
 CellID->772993917],
Cell[CellGroupData[{
Cell[281782, 5648, 311, 7, 30, "Text",ExpressionUUID->"b59e096c-1b8b-499a-ab43-47214197e610",
 CellID->1580182316],
Cell[CellGroupData[{
Cell[282118, 5659, 538, 13, 79, "Input",ExpressionUUID->"4b60d3d3-fdec-4521-9bba-cad902917380",
 CellID->193922563],
Cell[282659, 5674, 466, 8, 31, "Output",ExpressionUUID->"5b2edf94-ca0f-4799-8845-569d3f400d53",
 CellID->1052206058]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283174, 5688, 330, 7, 30, "Text",ExpressionUUID->"b87a4744-220a-4a8b-b705-faed520c547f",
 CellID->1523823842],
Cell[CellGroupData[{
Cell[283529, 5699, 1027, 24, 221, "Input",ExpressionUUID->"09bd73f6-7dba-4c18-837b-81048e3a8f04",
 CellID->17338372],
Cell[284559, 5725, 8586, 247, 264, "Output",ExpressionUUID->"5c9aa3c4-50f6-4578-907b-80e7c06124fa",
 CellID->1010725675]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293206, 5979, 175, 2, 55, "Section",ExpressionUUID->"5361a1e9-9ba8-4729-887a-7d54b55c4c2b",
 CellID->1495725859],
Cell[293384, 5983, 293, 5, 53, "Text",ExpressionUUID->"08c1c169-bde5-4a85-8be4-ad1c2df49462",
 CellID->220940431],
Cell[293680, 5990, 474, 10, 56, "Text",ExpressionUUID->"7f9de90a-0821-471f-8554-f711884f9b5d",
 CellID->346598154],
Cell[CellGroupData[{
Cell[294179, 6004, 490, 10, 79, "Text",ExpressionUUID->"f410e8b9-25b4-4ae3-bfc0-a070ae544469",
 CellID->1299523614],
Cell[294672, 6016, 4590, 114, 551, "Input",ExpressionUUID->"069ac26e-d453-4049-9f79-fe826a70b803",
 CellID->1184690508]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299311, 6136, 239, 3, 55, "Section",ExpressionUUID->"2a008c28-3f7d-43e7-a295-41be703f3160",
 CellID->1772476619],
Cell[CellGroupData[{
Cell[299575, 6143, 451, 9, 53, "Text",ExpressionUUID->"048e37aa-2064-4839-8164-392face0c009",
 CellID->121384349],
Cell[CellGroupData[{
Cell[300051, 6156, 680, 17, 79, "Input",ExpressionUUID->"cee191d5-ff8f-4e75-8d5f-196bc9e05254",
 CellID->2144772640],
Cell[300734, 6175, 7506, 211, 268, "Output",ExpressionUUID->"c5b113a3-baf1-42ec-93b2-42aeff15ed96",
 CellID->1398656075]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308301, 6393, 215, 3, 55, "Section",ExpressionUUID->"8273b49b-1b02-40d2-9069-64a3cafb3e50",
 CellID->1680745585],
Cell[CellGroupData[{
Cell[308541, 6400, 277, 3, 30, "Text",ExpressionUUID->"118c4929-0d4e-4493-9a42-27fadfc90aab",
 CellID->291154457],
Cell[308821, 6405, 992, 19, 150, "Input",ExpressionUUID->"65e5554f-f95a-4b01-b5ba-1595b0042d9a",
 CellID->1465210933]
}, Open  ]],
Cell[CellGroupData[{
Cell[309850, 6429, 368, 7, 30, "Text",ExpressionUUID->"b8218bbc-80a6-46ab-93d0-76b1c0bfe1b6",
 CellID->605170782],
Cell[CellGroupData[{
Cell[310243, 6440, 1158, 28, 103, "Input",ExpressionUUID->"a9d6ddcb-7e0d-485f-b224-d72186442386",
 CellID->622780882],
Cell[311404, 6470, 7569, 216, 314, "Output",ExpressionUUID->"56e942fc-698a-417e-8b59-79828a564b6a",
 CellID->358589816]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319034, 6693, 211, 3, 55, "Section",ExpressionUUID->"a360f2c4-0271-4d53-afcc-414c038dd615",
 CellID->242988296],
Cell[319248, 6698, 315, 4, 30, "Text",ExpressionUUID->"ca626a61-bc15-4ab0-92e7-2f6e846624e7",
 CellID->1537877925],
Cell[319566, 6704, 394, 5, 30, "Text",ExpressionUUID->"e8e39e2f-6769-41d6-ad0a-4f04641ac535",
 CellID->1110183],
Cell[CellGroupData[{
Cell[319985, 6713, 400, 5, 30, "Text",ExpressionUUID->"08016157-bc05-4692-864f-47dd965bb11b",
 CellID->1478976505],
Cell[320388, 6720, 583, 15, 77, "Program",ExpressionUUID->"8f83269a-7e0c-4cdd-bae4-72af7b6c27d9",
 InitializationCell->True,
 CellID->1263853417]
}, Open  ]],
Cell[320986, 6738, 541, 10, 56, "Text",ExpressionUUID->"e1b56430-7d26-4604-b5a0-fe21924cc90c",
 CellID->34905510]
}, Open  ]],
Cell[CellGroupData[{
Cell[321564, 6753, 172, 2, 55, "Section",ExpressionUUID->"4072f890-bf00-4b35-a0e3-f4ee5050a8a7",
 CellID->393870939],
Cell[321739, 6757, 247, 5, 30, "Text",ExpressionUUID->"c7524643-2184-4310-b788-185a0a4a3ea2",
 CellID->1244271719],
Cell[321989, 6764, 341, 6, 53, "Text",ExpressionUUID->"2b036913-6500-4356-a817-8bba3d89739a",
 CellID->279026747],
Cell[322333, 6772, 491, 8, 76, "Text",ExpressionUUID->"b04f5e01-9680-4873-9f82-cefbe3f5583c",
 CellID->1645735428],
Cell[322827, 6782, 241, 3, 30, "Text",ExpressionUUID->"f005af67-ced0-485a-bccf-939e15373a88",
 CellID->285965036],
Cell[323071, 6787, 219, 3, 30, "Text",ExpressionUUID->"4872154c-dcaa-4fa3-86c8-c3d57c47e871",
 CellID->145958066],
Cell[323293, 6792, 292, 5, 53, "Text",ExpressionUUID->"f5b7eb94-704a-43db-bd41-f9f9d0248aa3",
 CellID->690890388],
Cell[CellGroupData[{
Cell[323610, 6801, 401, 8, 30, "Text",ExpressionUUID->"947586ec-b375-4d27-a52a-8561b513db16",
 CellID->350671787],
Cell[324014, 6811, 1566, 25, 527, "Input",ExpressionUUID->"512c28cb-7752-4a05-aa80-7ce25783897d",
 CellID->1045596741]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[325629, 6842, 236, 3, 55, "Section",ExpressionUUID->"2e1bb4ef-fa04-4cd9-aee0-d1b0e27fbb54",
 CellID->485742586],
Cell[CellGroupData[{
Cell[325890, 6849, 247, 5, 30, "Text",ExpressionUUID->"d95d06e9-30d0-4a7b-ab7c-50763364287b",
 CellID->426014877],
Cell[CellGroupData[{
Cell[326162, 6858, 620, 14, 103, "Input",ExpressionUUID->"94677649-3a78-43a8-8f90-f9fc8957b21b",
 CellID->321558641],
Cell[326785, 6874, 2326, 42, 709, "Output",ExpressionUUID->"7221cfc6-3bb9-4d92-a517-fcf661fa9b48",
 CellID->326081610]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329172, 6923, 235, 3, 55, "Section",ExpressionUUID->"46efe280-aeb6-48fa-8531-b1bb3a351d8a",
 CellID->1367223435],
Cell[CellGroupData[{
Cell[329432, 6930, 338, 6, 30, "Text",ExpressionUUID->"e6162d39-f2dd-4884-bd4f-6f6af7dae8dd",
 CellID->849249145],
Cell[329773, 6938, 7334, 178, 857, "Input",ExpressionUUID->"4f02e413-a868-47b3-8bd9-bea2591b08ef",
 CellID->1154062053]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337156, 7122, 236, 3, 55, "Section",ExpressionUUID->"1aa749b9-6726-4483-8ebd-2211b468f0dd",
 CellID->248625067],
Cell[CellGroupData[{
Cell[337417, 7129, 301, 6, 30, "Text",ExpressionUUID->"6da5ec2d-7d31-4104-8e78-6e201e5d14d1",
 CellID->1785807654],
Cell[CellGroupData[{
Cell[337743, 7139, 907, 20, 150, "Input",ExpressionUUID->"26371593-38a8-4114-bd72-44e906ea35e4",
 CellID->837790306],
Cell[338653, 7161, 6538, 193, 334, "Output",ExpressionUUID->"45a0e491-66f8-4907-a90a-bb03ee3abfa2",
 CellID->584423064]
}, Open  ]],
Cell[CellGroupData[{
Cell[345228, 7359, 800, 17, 79, "Input",ExpressionUUID->"d1ed454a-612d-47d1-9f09-60fe4d4438d8",
 CellID->1838883210],
Cell[346031, 7378, 591, 11, 30, "Message",ExpressionUUID->"fcbc3823-e450-4670-bea9-308859660963",
 CellID->1228207153],
Cell[346625, 7391, 44662, 886, 322, "Output",ExpressionUUID->"86f72490-d3fb-4716-aa52-a66fe29bf62c",
 CellID->864805507]
}, Open  ]]
}, Open  ]],
Cell[391314, 8281, 276, 5, 30, "Text",ExpressionUUID->"5175d644-bac0-4565-9fd1-3d5e936eee50",
 CellID->1672946493]
}, Open  ]],
Cell[CellGroupData[{
Cell[391627, 8291, 169, 2, 55, "Section",ExpressionUUID->"0bfdb003-a3ad-4bc7-833c-7b14f931d206",
 CellID->208317680],
Cell[391799, 8295, 734, 16, 53, "Text",ExpressionUUID->"0ce627a7-d12a-4260-a913-12184f93e095",
 CellID->796903150],
Cell[392536, 8313, 472, 7, 30, "Text",ExpressionUUID->"caf3913c-89c3-4593-9968-7834a15a126e",
 CellID->1843219358],
Cell[393011, 8322, 290, 4, 30, "Text",ExpressionUUID->"60d7819f-cf8f-4c65-b99a-34970cca0b6f",
 CellID->1536141931],
Cell[393304, 8328, 302, 4, 30, "Text",ExpressionUUID->"3762c1b8-0994-4225-a381-b9b89b9102a4",
 CellID->889030083],
Cell[393609, 8334, 252, 3, 30, "Text",ExpressionUUID->"54b7947a-c5a8-409a-96d7-1e026f81da5b",
 CellID->1884872802],
Cell[393864, 8339, 256, 3, 30, "Text",ExpressionUUID->"a14838df-38be-4b40-aa8b-809249b9cbc7",
 CellID->1525906317],
Cell[394123, 8344, 256, 3, 30, "Text",ExpressionUUID->"dc93b93e-beca-48aa-9c69-e925ffcacd3e",
 CellID->657757345],
Cell[394382, 8349, 202, 2, 30, "Text",ExpressionUUID->"ae0b4a5b-485b-4b19-9dc2-6ba0a6fa5bfb",
 CellID->1829366306],
Cell[394587, 8353, 204, 2, 30, "Text",ExpressionUUID->"f6cd0178-c922-4370-ba27-46986a498ffc",
 CellID->636130843],
Cell[394794, 8357, 317, 6, 30, "Text",ExpressionUUID->"e74b55d6-bc5f-4236-ac33-2583e5f2b6ed",
 CellID->1277483535]
}, Open  ]],
Cell[CellGroupData[{
Cell[395148, 8368, 170, 2, 55, "Section",ExpressionUUID->"1b057cec-823d-44dd-8b08-872f7554afd2",
 CellID->124270039],
Cell[CellGroupData[{
Cell[395343, 8374, 172, 2, 51, "Subsection",ExpressionUUID->"f6fd2191-32d4-472e-815b-ab29a555e60a",
 CellID->1252440589],
Cell[395518, 8378, 569, 12, 53, "Text",ExpressionUUID->"bb2f5321-5498-4779-a2e4-857de76e1356",
 CellID->134271429],
Cell[396090, 8392, 412, 10, 30, "Text",ExpressionUUID->"781f1d50-49e9-429f-8fc5-8dffef1293a7",
 CellID->901352536],
Cell[396505, 8404, 502, 12, 30, "Text",ExpressionUUID->"73a5c74d-cab3-4326-ae8b-f3bc49986953",
 CellID->1340888906]
}, Open  ]],
Cell[CellGroupData[{
Cell[397044, 8421, 234, 3, 51, "Subsection",ExpressionUUID->"14bc5e9c-aa4a-4e9c-8442-fb6d608587cf",
 CellID->1842077853],
Cell[397281, 8426, 823, 20, 53, "Text",ExpressionUUID->"c2d900a4-dfa1-4b51-8a28-98aefd990fd1",
 CellID->1678220219],
Cell[398107, 8448, 904, 21, 30, "Text",ExpressionUUID->"8ce24f5b-9241-45d2-a3ad-a3f22058e6d4",
 CellID->797001035]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399060, 8475, 192, 2, 91, "TutorialMoreAboutSection",ExpressionUUID->"4b05daae-88fb-4aff-8225-bae61f7daea8",
 CellID->1441665217],
Cell[399255, 8479, 315, 6, 29, "TutorialMoreAbout",ExpressionUUID->"dad598a5-5097-4f9a-b45a-e64f729341dd",
 CellID->9313018]
}, Open  ]],
Cell[CellGroupData[{
Cell[399607, 8490, 129, 1, 91, "RelatedTutorialsSection",ExpressionUUID->"ef290b50-0f94-45a9-bda2-eabcff4aa93b",
 CellID->1905070942],
Cell[399739, 8493, 108, 1, 29, "RelatedTutorials",ExpressionUUID->"4e6762b7-a283-462b-af14-e7f995735811",
 CellID->1693629071]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399896, 8500, 111, 1, 88, "MetadataSection",ExpressionUUID->"60b78bf4-ac15-49ee-bee7-38237e448035",
 CellID->2075538959],
Cell[400010, 8503, 546, 13, 31, "History",ExpressionUUID->"3fe4a42d-6e44-40f1-8980-ac262a3c103c",
 CellID->2006405692],
Cell[CellGroupData[{
Cell[400581, 8520, 123, 1, 25, "CategorizationSection",ExpressionUUID->"b8614b64-54c4-47be-9746-8acc92efdd68",
 CellID->1872240250],
Cell[400707, 8523, 138, 2, 87, "Categorization",ExpressionUUID->"8acb6c45-46ed-46f1-9d10-979d337600bb",
 CellID->1811485906],
Cell[400848, 8527, 172, 2, 87, "Categorization",ExpressionUUID->"9d9a1dd9-8858-4cc4-854a-66b7a35fccc0",
 CellID->767958623],
Cell[401023, 8531, 169, 2, 87, "Categorization",ExpressionUUID->"84e46116-12c3-40ec-a33a-6cead4c34d21",
 CellID->703858291],
Cell[401195, 8535, 230, 5, 87, "Categorization",ExpressionUUID->"07400837-c958-4717-8679-76703b756105",
 CellID->1406369161]
}, Closed]],
Cell[CellGroupData[{
Cell[401462, 8545, 111, 1, 24, "KeywordsSection",ExpressionUUID->"e53e4b28-5614-4ccc-aa09-bd3e08b1360a",
 CellID->1641470045],
Cell[401576, 8548, 180, 2, 23, "Keywords",ExpressionUUID->"38c5c3da-54b9-408a-a651-ad3053889865",
 CellID->1612116953],
Cell[401759, 8552, 170, 2, 23, "Keywords",ExpressionUUID->"438b225a-8dd5-4d92-8d46-0a800bba8e24",
 CellID->312041817],
Cell[401932, 8556, 178, 2, 23, "Keywords",ExpressionUUID->"b0b2e7ac-947e-4f7d-8b07-7c1a76fadc21",
 CellID->1259215210],
Cell[402113, 8560, 166, 2, 23, "Keywords",ExpressionUUID->"0418c52b-afd0-44c9-9b67-3615cf0133f9",
 CellID->330293506],
Cell[402282, 8564, 175, 2, 23, "Keywords",ExpressionUUID->"709c7f25-d08a-4cad-8527-8e7d52a2a027",
 CellID->1067242461],
Cell[402460, 8568, 182, 2, 23, "Keywords",ExpressionUUID->"78114e94-201d-4280-806c-c2a27f8b46c6",
 CellID->689969234],
Cell[402645, 8572, 184, 2, 23, "Keywords",ExpressionUUID->"9efa326d-b0c9-4346-a1de-6387e4646669",
 CellID->1187559653]
}, Open  ]]
}, Open  ]]
}
]
*)

